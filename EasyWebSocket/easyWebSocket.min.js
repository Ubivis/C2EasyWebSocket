  


<!DOCTYPE html>
<html>
  <head prefix="og: http://ogp.me/ns# fb: http://ogp.me/ns/fb# githubog: http://ogp.me/ns/fb/githubog#">
    <meta charset='utf-8'>
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
        <title>EasyWebsocket/easyWebSocket.min.js at master · jeromeetienne/EasyWebsocket · GitHub</title>
    <link rel="search" type="application/opensearchdescription+xml" href="/opensearch.xml" title="GitHub" />
    <link rel="fluid-icon" href="https://github.com/fluidicon.png" title="GitHub" />
    <link rel="apple-touch-icon-precomposed" sizes="57x57" href="apple-touch-icon-114.png" />
    <link rel="apple-touch-icon-precomposed" sizes="114x114" href="apple-touch-icon-114.png" />
    <link rel="apple-touch-icon-precomposed" sizes="72x72" href="apple-touch-icon-144.png" />
    <link rel="apple-touch-icon-precomposed" sizes="144x144" href="apple-touch-icon-144.png" />

    
    
    <link rel="icon" type="image/x-icon" href="/favicon.png" />

    <meta content="authenticity_token" name="csrf-param" />
<meta content="nbGroUf9gQlPbjKQIHJkhDRE5NW+TF+ggG2HQebPhtA=" name="csrf-token" />

    <link href="https://a248.e.akamai.net/assets.github.com/assets/github-fc8f93aa673bcc847295986dc6d690ee822e90d0.css" media="screen" rel="stylesheet" type="text/css" />
    <link href="https://a248.e.akamai.net/assets.github.com/assets/github2-327db63293098d6476136b438e34be409ae3b461.css" media="screen" rel="stylesheet" type="text/css" />
    


    <script src="https://a248.e.akamai.net/assets.github.com/assets/frameworks-917510fd4e1e5f0487cfe32445a6cfc8927e84f1.js" type="text/javascript"></script>
    
    <script defer="defer" src="https://a248.e.akamai.net/assets.github.com/assets/github-d5d6341dd56a258b1ed19b094ef897b3d2c3af1f.js" type="text/javascript"></script>
    
    

      <link rel='permalink' href='/jeromeetienne/EasyWebsocket/blob/712649aba66932022bf6a15a200410f797dad566/easyWebSocket.min.js'>
    <meta property="og:title" content="EasyWebsocket"/>
    <meta property="og:type" content="githubog:gitrepository"/>
    <meta property="og:url" content="https://github.com/jeromeetienne/EasyWebsocket"/>
    <meta property="og:image" content="https://a248.e.akamai.net/assets.github.com/images/gravatars/gravatar-140.png?1340659530"/>
    <meta property="og:site_name" content="GitHub"/>
    <meta property="og:description" content="EasyWebsocket - like Websocket but no server setup and available in any browser"/>

    <meta name="description" content="EasyWebsocket - like Websocket but no server setup and available in any browser" />

  <link href="https://github.com/jeromeetienne/EasyWebsocket/commits/master.atom" rel="alternate" title="Recent Commits to EasyWebsocket:master" type="application/atom+xml" />

  </head>


  <body class="logged_out page-blob windows vis-public env-production ">
    <div id="wrapper">

    
    

      <div id="header" class="true clearfix">
        <div class="container clearfix">
          <a class="site-logo" href="https://github.com/">
            <img alt="GitHub" class="github-logo-4x" height="30" src="https://a248.e.akamai.net/assets.github.com/images/modules/header/logov7@4x.png?1340659530" />
            <img alt="GitHub" class="github-logo-4x-hover" height="30" src="https://a248.e.akamai.net/assets.github.com/images/modules/header/logov7@4x-hover.png?1340659530" />
          </a>


                  <!--
      make sure to use fully qualified URLs here since this nav
      is used on error pages on other domains
    -->
    <ul class="top-nav logged_out">
        <li class="pricing"><a href="https://github.com/plans">Signup and Pricing</a></li>
        <li class="explore"><a href="https://github.com/explore">Explore GitHub</a></li>
      <li class="features"><a href="https://github.com/features">Features</a></li>
        <li class="blog"><a href="https://github.com/blog">Blog</a></li>
      <li class="login"><a href="https://github.com/login?return_to=%2Fjeromeetienne%2FEasyWebsocket%2Fblob%2Fmaster%2FeasyWebSocket.min.js">Sign in</a></li>
    </ul>



          
        </div>
      </div>

      

      

            <div class="site hfeed" itemscope itemtype="http://schema.org/WebPage">
      <div class="container hentry">
        <div class="pagehead repohead instapaper_ignore readability-menu">
        <div class="title-actions-bar">
          



              <ul class="pagehead-actions">



          <li>
            <span class="star-button"><a href="/login?return_to=%2Fjeromeetienne%2FEasyWebsocket" class="minibutton btn-star js-toggler-target entice tooltipped leftwards" title="You must be signed in to use this feature" rel="nofollow">Star</a><a class="social-count js-social-count" href="/jeromeetienne/EasyWebsocket/stargazers">117</a></span>
          </li>
          <li>
            <a href="/login?return_to=%2Fjeromeetienne%2FEasyWebsocket" class="minibutton btn-fork js-toggler-target fork-button entice tooltipped leftwards"  title="You must be signed in to fork a repository" rel="nofollow">Fork</a><a href="/jeromeetienne/EasyWebsocket/network" class="social-count">7</a>
          </li>
    </ul>

          <h1 itemscope itemtype="http://data-vocabulary.org/Breadcrumb" class="entry-title public">
            <span class="repo-label"><span>public</span></span>
            <span class="mega-icon mega-icon-public-repo"></span>
            <span class="author vcard">
<a href="/jeromeetienne" class="url fn" itemprop="url" rel="author">              <span itemprop="title">jeromeetienne</span>
              </a></span> /
            <strong><a href="/jeromeetienne/EasyWebsocket" class="js-current-repository">EasyWebsocket</a></strong>
          </h1>
        </div>

          

  <ul class="tabs">
    <li><a href="/jeromeetienne/EasyWebsocket" class="selected" highlight="repo_sourcerepo_downloadsrepo_commitsrepo_tagsrepo_branches">Code</a></li>
    <li><a href="/jeromeetienne/EasyWebsocket/network" highlight="repo_network">Network</a>
    <li><a href="/jeromeetienne/EasyWebsocket/pulls" highlight="repo_pulls">Pull Requests <span class='counter'>0</span></a></li>

      <li><a href="/jeromeetienne/EasyWebsocket/issues" highlight="repo_issues">Issues <span class='counter'>2</span></a></li>


    <li><a href="/jeromeetienne/EasyWebsocket/graphs" highlight="repo_graphsrepo_contributors">Graphs</a></li>


  </ul>
  
<div class="frame frame-center tree-finder" style="display:none"
      data-tree-list-url="/jeromeetienne/EasyWebsocket/tree-list/712649aba66932022bf6a15a200410f797dad566"
      data-blob-url-prefix="/jeromeetienne/EasyWebsocket/blob/712649aba66932022bf6a15a200410f797dad566"
    >

  <div class="breadcrumb">
    <span class="bold"><a href="/jeromeetienne/EasyWebsocket">EasyWebsocket</a></span> /
    <input class="tree-finder-input js-navigation-enable" type="text" name="query" autocomplete="off" spellcheck="false">
  </div>

    <div class="octotip">
      <p>
        <a href="/jeromeetienne/EasyWebsocket/dismiss-tree-finder-help" class="dismiss js-dismiss-tree-list-help" title="Hide this notice forever" rel="nofollow">Dismiss</a>
        <span class="bold">Octotip:</span> You've activated the <em>file finder</em>
        by pressing <span class="kbd">t</span> Start typing to filter the
        file list. Use <span class="kbd badmono">↑</span> and
        <span class="kbd badmono">↓</span> to navigate,
        <span class="kbd">enter</span> to view files.
      </p>
    </div>

  <table class="tree-browser" cellpadding="0" cellspacing="0">
    <tr class="js-header"><th>&nbsp;</th><th>name</th></tr>
    <tr class="js-no-results no-results" style="display: none">
      <th colspan="2">No matching files</th>
    </tr>
    <tbody class="js-results-list js-navigation-container">
    </tbody>
  </table>
</div>

<div id="jump-to-line" style="display:none">
  <h2>Jump to Line</h2>
  <form accept-charset="UTF-8">
    <input class="textfield" type="text">
    <div class="full-button">
      <button type="submit" class="classy">
        Go
      </button>
    </div>
  </form>
</div>


<div class="subnav-bar">

  <ul class="actions subnav">
    <li><a href="/jeromeetienne/EasyWebsocket/tags" class="blank" highlight="repo_tags">Tags <span class="counter">0</span></a></li>
    <li><a href="/jeromeetienne/EasyWebsocket/downloads" class="blank downloads-blank" highlight="repo_downloads">Downloads <span class="counter">0</span></a></li>
    
  </ul>

  <ul class="scope">
    <li class="switcher">

      <div class="context-menu-container js-menu-container js-context-menu">
        <a href="#"
           class="minibutton bigger switcher js-menu-target js-commitish-button btn-branch repo-tree"
           data-hotkey="w"
           data-master-branch="master"
           data-ref="master">
           <span><i>branch:</i> master</span>
        </a>

        <div class="context-pane commitish-context js-menu-content">
          <a href="javascript:;" class="close js-menu-close"><span class="mini-icon mini-icon-remove-close"></span></a>
          <div class="context-title">Switch branches/tags</div>
          <div class="context-body pane-selector commitish-selector js-navigation-container">
            <div class="filterbar">
              <input type="text" id="context-commitish-filter-field" class="js-navigation-enable" placeholder="Filter branches/tags" data-filterable />

              <ul class="tabs">
                <li><a href="#" data-filter="branches" class="selected">Branches</a></li>
                <li><a href="#" data-filter="tags">Tags</a></li>
              </ul>
            </div>

            <div class="js-filter-tab js-filter-branches" data-filterable-for="context-commitish-filter-field" data-filterable-type=substring>
              <div class="no-results js-not-filterable">Nothing to show</div>
                <div class="commitish-item branch-commitish selector-item js-navigation-item js-navigation-target ">
                  <span class="mini-icon mini-icon-confirm"></span>
                  <h4>
                      <a href="/jeromeetienne/EasyWebsocket/blob/gh-pages/easyWebSocket.min.js" class="js-navigation-open" data-name="gh-pages" rel="nofollow">gh-pages</a>
                  </h4>
                </div>
                <div class="commitish-item branch-commitish selector-item js-navigation-item js-navigation-target selected">
                  <span class="mini-icon mini-icon-confirm"></span>
                  <h4>
                      <a href="/jeromeetienne/EasyWebsocket/blob/master/easyWebSocket.min.js" class="js-navigation-open" data-name="master" rel="nofollow">master</a>
                  </h4>
                </div>
            </div>

            <div class="js-filter-tab js-filter-tags" style="display:none" data-filterable-for="context-commitish-filter-field" data-filterable-type=substring>
              <div class="no-results js-not-filterable">Nothing to show</div>
            </div>
          </div>
        </div><!-- /.commitish-context-context -->
      </div>

    </li>
  </ul>

  <ul class="subnav with-scope">

    <li><a href="/jeromeetienne/EasyWebsocket" class="selected" highlight="repo_source">Files</a></li>
    <li><a href="/jeromeetienne/EasyWebsocket/commits/master" highlight="repo_commits">Commits</a></li>
    <li><a href="/jeromeetienne/EasyWebsocket/branches" class="" highlight="repo_branches" rel="nofollow">Branches <span class="counter">2</span></a></li>
  </ul>

</div>

  
  
  


          

        </div><!-- /.repohead -->

        <div id="js-repo-pjax-container" data-pjax-container>
          




<!-- blob contrib key: blob_contributors:v21:c6ec6ee755089993ba74f65b1c796ec1 -->
<!-- blob contrib frag key: views10/v8/blob_contributors:v21:c6ec6ee755089993ba74f65b1c796ec1 -->

<!-- block_view_fragment_key: views10/v8/blob:v21:98b23892d28b29032f0d40a06247f7e3 -->
  <div id="slider">

    <div class="breadcrumb" data-path="easyWebSocket.min.js/">
      <b itemscope="" itemtype="http://data-vocabulary.org/Breadcrumb"><a href="/jeromeetienne/EasyWebsocket/tree/712649aba66932022bf6a15a200410f797dad566" class="js-rewrite-sha" itemprop="url"><span itemprop="title">EasyWebsocket</span></a></b> / <strong class="final-path">easyWebSocket.min.js</strong> <span class="js-clippy mini-icon mini-icon-clippy " data-clipboard-text="easyWebSocket.min.js" data-copied-hint="copied!" data-copy-hint="copy to clipboard"></span>
    </div>

      
  <div class="commit file-history-tease js-blob-contributors-content" data-path="easyWebSocket.min.js/">
    <img class="main-avatar" height="24" src="https://secure.gravatar.com/avatar/b381880f9f81065247ba9a0b7ff68358?s=140&amp;d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png" width="24" />
    <span class="author"><a href="/jeromeetienne">jeromeetienne</a></span>
    <time class="js-relative-date" datetime="2011-10-22T04:03:51-07:00" title="2011-10-22 04:03:51">October 22, 2011</time>
    <div class="commit-title">
        <a href="/jeromeetienne/EasyWebsocket/commit/712649aba66932022bf6a15a200410f797dad566" class="message">new build</a>
    </div>

    <div class="participation">
      <p class="quickstat"><a href="#blob_contributors_box" rel="facebox"><strong>1</strong> contributor</a></p>
      
    </div>
    <div id="blob_contributors_box" style="display:none">
      <h2>Users on GitHub who have contributed to this file</h2>
      <ul class="facebox-user-list">
        <li>
          <img height="24" src="https://secure.gravatar.com/avatar/b381880f9f81065247ba9a0b7ff68358?s=140&amp;d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png" width="24" />
          <a href="/jeromeetienne">jeromeetienne</a>
        </li>
      </ul>
    </div>
  </div>


    <div class="frames">
      <div class="frame frame-center" data-path="easyWebSocket.min.js/" data-permalink-url="/jeromeetienne/EasyWebsocket/blob/712649aba66932022bf6a15a200410f797dad566/easyWebSocket.min.js" data-title="EasyWebsocket/easyWebSocket.min.js at master · jeromeetienne/EasyWebsocket · GitHub" data-type="blob">

        <div id="files" class="bubble">
          <div class="file">
            <div class="meta">
              <div class="info">
                <span class="icon"><b class="mini-icon mini-icon-text-file"></b></span>
                <span class="mode" title="File Mode">file</span>
                  <span>96 lines (95 sloc)</span>
                <span>44.956 kb</span>
              </div>
              <ul class="button-group actions">
                  <li>
                    <a class="grouped-button file-edit-link minibutton bigger lighter js-rewrite-sha" href="/jeromeetienne/EasyWebsocket/edit/712649aba66932022bf6a15a200410f797dad566/easyWebSocket.min.js" data-method="post" rel="nofollow" data-hotkey="e">Edit</a>
                  </li>
                <li>
                  <a href="/jeromeetienne/EasyWebsocket/raw/master/easyWebSocket.min.js" class="minibutton btn-raw grouped-button bigger lighter" id="raw-url">Raw</a>
                </li>
                  <li>
                    <a href="/jeromeetienne/EasyWebsocket/blame/master/easyWebSocket.min.js" class="minibutton btn-blame grouped-button bigger lighter">Blame</a>
                  </li>
                <li>
                  <a href="/jeromeetienne/EasyWebsocket/commits/master/easyWebSocket.min.js" class="minibutton btn-history grouped-button bigger lighter" rel="nofollow">History</a>
                </li>
              </ul>
            </div>
              <div class="data type-javascript">
      <table cellpadding="0" cellspacing="0" class="lines">
        <tr>
          <td>
            <pre class="line_numbers"><span id="L1" rel="#L1">1</span>
<span id="L2" rel="#L2">2</span>
<span id="L3" rel="#L3">3</span>
<span id="L4" rel="#L4">4</span>
<span id="L5" rel="#L5">5</span>
<span id="L6" rel="#L6">6</span>
<span id="L7" rel="#L7">7</span>
<span id="L8" rel="#L8">8</span>
<span id="L9" rel="#L9">9</span>
<span id="L10" rel="#L10">10</span>
<span id="L11" rel="#L11">11</span>
<span id="L12" rel="#L12">12</span>
<span id="L13" rel="#L13">13</span>
<span id="L14" rel="#L14">14</span>
<span id="L15" rel="#L15">15</span>
<span id="L16" rel="#L16">16</span>
<span id="L17" rel="#L17">17</span>
<span id="L18" rel="#L18">18</span>
<span id="L19" rel="#L19">19</span>
<span id="L20" rel="#L20">20</span>
<span id="L21" rel="#L21">21</span>
<span id="L22" rel="#L22">22</span>
<span id="L23" rel="#L23">23</span>
<span id="L24" rel="#L24">24</span>
<span id="L25" rel="#L25">25</span>
<span id="L26" rel="#L26">26</span>
<span id="L27" rel="#L27">27</span>
<span id="L28" rel="#L28">28</span>
<span id="L29" rel="#L29">29</span>
<span id="L30" rel="#L30">30</span>
<span id="L31" rel="#L31">31</span>
<span id="L32" rel="#L32">32</span>
<span id="L33" rel="#L33">33</span>
<span id="L34" rel="#L34">34</span>
<span id="L35" rel="#L35">35</span>
<span id="L36" rel="#L36">36</span>
<span id="L37" rel="#L37">37</span>
<span id="L38" rel="#L38">38</span>
<span id="L39" rel="#L39">39</span>
<span id="L40" rel="#L40">40</span>
<span id="L41" rel="#L41">41</span>
<span id="L42" rel="#L42">42</span>
<span id="L43" rel="#L43">43</span>
<span id="L44" rel="#L44">44</span>
<span id="L45" rel="#L45">45</span>
<span id="L46" rel="#L46">46</span>
<span id="L47" rel="#L47">47</span>
<span id="L48" rel="#L48">48</span>
<span id="L49" rel="#L49">49</span>
<span id="L50" rel="#L50">50</span>
<span id="L51" rel="#L51">51</span>
<span id="L52" rel="#L52">52</span>
<span id="L53" rel="#L53">53</span>
<span id="L54" rel="#L54">54</span>
<span id="L55" rel="#L55">55</span>
<span id="L56" rel="#L56">56</span>
<span id="L57" rel="#L57">57</span>
<span id="L58" rel="#L58">58</span>
<span id="L59" rel="#L59">59</span>
<span id="L60" rel="#L60">60</span>
<span id="L61" rel="#L61">61</span>
<span id="L62" rel="#L62">62</span>
<span id="L63" rel="#L63">63</span>
<span id="L64" rel="#L64">64</span>
<span id="L65" rel="#L65">65</span>
<span id="L66" rel="#L66">66</span>
<span id="L67" rel="#L67">67</span>
<span id="L68" rel="#L68">68</span>
<span id="L69" rel="#L69">69</span>
<span id="L70" rel="#L70">70</span>
<span id="L71" rel="#L71">71</span>
<span id="L72" rel="#L72">72</span>
<span id="L73" rel="#L73">73</span>
<span id="L74" rel="#L74">74</span>
<span id="L75" rel="#L75">75</span>
<span id="L76" rel="#L76">76</span>
<span id="L77" rel="#L77">77</span>
<span id="L78" rel="#L78">78</span>
<span id="L79" rel="#L79">79</span>
<span id="L80" rel="#L80">80</span>
<span id="L81" rel="#L81">81</span>
<span id="L82" rel="#L82">82</span>
<span id="L83" rel="#L83">83</span>
<span id="L84" rel="#L84">84</span>
<span id="L85" rel="#L85">85</span>
<span id="L86" rel="#L86">86</span>
<span id="L87" rel="#L87">87</span>
<span id="L88" rel="#L88">88</span>
<span id="L89" rel="#L89">89</span>
<span id="L90" rel="#L90">90</span>
<span id="L91" rel="#L91">91</span>
<span id="L92" rel="#L92">92</span>
<span id="L93" rel="#L93">93</span>
<span id="L94" rel="#L94">94</span>
<span id="L95" rel="#L95">95</span>
</pre>
          </td>
          <td width="100%">
                <div class="highlight"><pre><div class='line' id='LC1'><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">m</span><span class="p">){</span><span class="nx">m</span><span class="p">.</span><span class="nx">version</span><span class="o">=</span><span class="s2">&quot;0.8.5&quot;</span><span class="p">;</span><span class="nx">m</span><span class="p">.</span><span class="nx">protocol</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="nx">m</span><span class="p">.</span><span class="nx">transports</span><span class="o">=</span><span class="p">[];</span><span class="nx">m</span><span class="p">.</span><span class="nx">j</span><span class="o">=</span><span class="p">[];</span><span class="nx">m</span><span class="p">.</span><span class="nx">sockets</span><span class="o">=</span><span class="p">{};</span><span class="nx">m</span><span class="p">.</span><span class="nx">connect</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">m</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">parseUri</span><span class="p">(</span><span class="nx">b</span><span class="p">),</span><span class="nx">h</span><span class="p">,</span><span class="nx">e</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;undefined&quot;</span><span class="o">!=</span><span class="k">typeof</span> <span class="nb">document</span><span class="p">){</span><span class="nx">c</span><span class="p">.</span><span class="nx">protocol</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">protocol</span><span class="o">||</span><span class="nb">document</span><span class="p">.</span><span class="nx">location</span><span class="p">.</span><span class="nx">protocol</span><span class="p">.</span><span class="nx">slice</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="o">-</span><span class="mi">1</span><span class="p">);</span><span class="nx">c</span><span class="p">.</span><span class="nx">host</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">host</span><span class="o">||</span><span class="nb">document</span><span class="p">.</span><span class="nx">domain</span><span class="p">;</span><span class="nx">c</span><span class="p">.</span><span class="nx">port</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">port</span><span class="o">||</span><span class="nb">document</span><span class="p">.</span><span class="nx">location</span><span class="p">.</span><span class="nx">port</span><span class="p">}</span><span class="nx">h</span><span class="o">=</span><span class="nx">m</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">uniqueUri</span><span class="p">(</span><span class="nx">c</span><span class="p">);</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="p">{</span><span class="nx">host</span><span class="o">:</span><span class="nx">c</span><span class="p">.</span><span class="nx">host</span><span class="p">,</span><span class="nx">secure</span><span class="o">:</span><span class="s2">&quot;https&quot;</span><span class="o">==</span><span class="nx">c</span><span class="p">.</span><span class="nx">protocol</span><span class="p">,</span><span class="nx">port</span><span class="o">:</span><span class="nx">c</span><span class="p">.</span><span class="nx">port</span><span class="o">||</span><span class="p">(</span><span class="s2">&quot;https&quot;</span><span class="o">==</span><span class="nx">c</span><span class="p">.</span><span class="nx">protocol</span><span class="o">?</span><span class="mi">443</span><span class="o">:</span><span class="mi">80</span><span class="p">),</span><span class="nx">query</span><span class="o">:</span><span class="nx">c</span><span class="p">.</span><span class="nx">query</span><span class="o">||</span><span class="s2">&quot;&quot;</span><span class="p">};</span><span class="nx">m</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">merge</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">d</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="s2">&quot;force new connection&quot;</span><span class="p">]</span><span class="o">||!</span><span class="nx">m</span><span class="p">.</span><span class="nx">sockets</span><span class="p">[</span><span class="nx">h</span><span class="p">])</span><span class="nx">e</span><span class="o">=</span><span class="k">new</span> <span class="nx">m</span><span class="p">.</span><span class="nx">Socket</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span></div><div class='line' id='LC2'><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">a</span><span class="p">[</span><span class="s2">&quot;force new connection&quot;</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">)</span><span class="nx">m</span><span class="p">.</span><span class="nx">sockets</span><span class="p">[</span><span class="nx">h</span><span class="p">]</span><span class="o">=</span><span class="nx">e</span><span class="p">;</span><span class="nx">e</span><span class="o">=</span><span class="nx">e</span><span class="o">||</span><span class="nx">m</span><span class="p">.</span><span class="nx">sockets</span><span class="p">[</span><span class="nx">h</span><span class="p">];</span><span class="k">return</span> <span class="nx">e</span><span class="p">.</span><span class="nx">of</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">path</span><span class="p">.</span><span class="nx">length</span><span class="o">&gt;</span><span class="mi">1</span><span class="o">?</span><span class="nx">c</span><span class="p">.</span><span class="nx">path</span><span class="o">:</span><span class="s2">&quot;&quot;</span><span class="p">)}})(</span><span class="s2">&quot;object&quot;</span><span class="o">===</span><span class="k">typeof</span> <span class="nx">module</span><span class="o">?</span><span class="nx">module</span><span class="p">.</span><span class="nx">exports</span><span class="o">:</span><span class="nb">window</span><span class="p">.</span><span class="nx">io</span><span class="o">=</span><span class="p">{});</span></div><div class='line' id='LC3'><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">m</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">m</span><span class="p">.</span><span class="nx">util</span><span class="o">=</span><span class="p">{},</span><span class="nx">c</span><span class="o">=</span><span class="sr">/^(?:(?![^:@]+:[^:@\/]*@)([^:\/?#.]+):)?(?:\/\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:\/?#]*)(?::(\d*))?)(((\/(?:[^?#](?![^?#\/]*\.[^?#\/.]+(?:[?#]|$)))*\/?)?([^?#\/]*))(?:\?([^#]*))?(?:#(.*))?)/</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="p">[</span><span class="s2">&quot;source&quot;</span><span class="p">,</span><span class="s2">&quot;protocol&quot;</span><span class="p">,</span><span class="s2">&quot;authority&quot;</span><span class="p">,</span><span class="s2">&quot;userInfo&quot;</span><span class="p">,</span><span class="s2">&quot;user&quot;</span><span class="p">,</span><span class="s2">&quot;password&quot;</span><span class="p">,</span><span class="s2">&quot;host&quot;</span><span class="p">,</span><span class="s2">&quot;port&quot;</span><span class="p">,</span><span class="s2">&quot;relative&quot;</span><span class="p">,</span><span class="s2">&quot;path&quot;</span><span class="p">,</span><span class="s2">&quot;directory&quot;</span><span class="p">,</span><span class="s2">&quot;file&quot;</span><span class="p">,</span><span class="s2">&quot;query&quot;</span><span class="p">,</span><span class="s2">&quot;anchor&quot;</span><span class="p">];</span><span class="nx">d</span><span class="p">.</span><span class="nx">parseUri</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">exec</span><span class="p">(</span><span class="nx">a</span><span class="o">||</span><span class="s2">&quot;&quot;</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="p">{},</span><span class="nx">j</span><span class="o">=</span><span class="mi">14</span><span class="p">;</span><span class="nx">j</span><span class="o">--</span><span class="p">;)</span><span class="nx">f</span><span class="p">[</span><span class="nx">h</span><span class="p">[</span><span class="nx">j</span><span class="p">]]</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="nx">j</span><span class="p">]</span><span class="o">||</span><span class="s2">&quot;&quot;</span><span class="p">;</span><span class="k">return</span> <span class="nx">f</span><span class="p">};</span><span class="nx">d</span><span class="p">.</span><span class="nx">uniqueUri</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">protocol</span><span class="p">,</span><span class="nx">j</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">host</span><span class="p">;</span><span class="nx">a</span><span class="o">=</span></div><div class='line' id='LC4'><span class="nx">a</span><span class="p">.</span><span class="nx">port</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;document&quot;</span><span class="k">in</span> <span class="nx">b</span><span class="p">){</span><span class="nx">j</span><span class="o">=</span><span class="nx">j</span><span class="o">||</span><span class="nb">document</span><span class="p">.</span><span class="nx">domain</span><span class="p">;</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="o">||</span><span class="p">(</span><span class="nx">f</span><span class="o">==</span><span class="s2">&quot;https&quot;</span><span class="o">&amp;&amp;</span><span class="nb">document</span><span class="p">.</span><span class="nx">location</span><span class="p">.</span><span class="nx">protocol</span><span class="o">!==</span><span class="s2">&quot;https:&quot;</span><span class="o">?</span><span class="mi">443</span><span class="o">:</span><span class="nb">document</span><span class="p">.</span><span class="nx">location</span><span class="p">.</span><span class="nx">port</span><span class="p">)}</span><span class="k">else</span><span class="p">{</span><span class="nx">j</span><span class="o">=</span><span class="nx">j</span><span class="o">||</span><span class="s2">&quot;localhost&quot;</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">f</span><span class="o">==</span><span class="s2">&quot;https&quot;</span><span class="p">)</span><span class="nx">a</span><span class="o">=</span><span class="mi">443</span><span class="p">}</span><span class="k">return</span><span class="p">(</span><span class="nx">f</span><span class="o">||</span><span class="s2">&quot;http&quot;</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot;://&quot;</span><span class="o">+</span><span class="nx">j</span><span class="o">+</span><span class="s2">&quot;:&quot;</span><span class="o">+</span><span class="p">(</span><span class="nx">a</span><span class="o">||</span><span class="mi">80</span><span class="p">)};</span><span class="nx">d</span><span class="p">.</span><span class="nx">query</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">f</span><span class="p">){</span><span class="kd">var</span> <span class="nx">j</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">chunkQuery</span><span class="p">(</span><span class="nx">a</span><span class="o">||</span><span class="s2">&quot;&quot;</span><span class="p">),</span><span class="nx">k</span><span class="o">=</span><span class="p">[];</span><span class="nx">d</span><span class="p">.</span><span class="nx">merge</span><span class="p">(</span><span class="nx">j</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">chunkQuery</span><span class="p">(</span><span class="nx">f</span><span class="o">||</span><span class="s2">&quot;&quot;</span><span class="p">));</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">o</span> <span class="k">in</span> <span class="nx">j</span><span class="p">)</span><span class="nx">j</span><span class="p">.</span><span class="nx">hasOwnProperty</span><span class="p">(</span><span class="nx">o</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">k</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">o</span><span class="o">+</span><span class="s2">&quot;=&quot;</span><span class="o">+</span><span class="nx">j</span><span class="p">[</span><span class="nx">o</span><span class="p">]);</span><span class="k">return</span> <span class="nx">k</span><span class="p">.</span><span class="nx">length</span><span class="o">?</span><span class="s2">&quot;?&quot;</span><span class="o">+</span><span class="nx">k</span><span class="p">.</span><span class="nx">join</span><span class="p">(</span><span class="s2">&quot;&amp;&quot;</span><span class="p">)</span><span class="o">:</span><span class="s2">&quot;&quot;</span><span class="p">};</span><span class="nx">d</span><span class="p">.</span><span class="nx">chunkQuery</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="p">{};</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot;&amp;&quot;</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">j</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">k</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">o</span><span class="p">;</span><span class="nx">j</span><span class="o">&lt;</span><span class="nx">k</span><span class="p">;</span><span class="o">++</span><span class="nx">j</span><span class="p">){</span><span class="nx">o</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="nx">j</span><span class="p">].</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot;=&quot;</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">o</span><span class="p">[</span><span class="mi">0</span><span class="p">])</span><span class="nx">f</span><span class="p">[</span><span class="nx">o</span><span class="p">[</span><span class="mi">0</span><span class="p">]]</span><span class="o">=</span></div><div class='line' id='LC5'><span class="nb">decodeURIComponent</span><span class="p">(</span><span class="nx">o</span><span class="p">[</span><span class="mi">1</span><span class="p">])}</span><span class="k">return</span> <span class="nx">f</span><span class="p">};</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="kc">false</span><span class="p">;</span><span class="nx">d</span><span class="p">.</span><span class="nx">load</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;document&quot;</span><span class="k">in</span> <span class="nx">b</span><span class="o">&amp;&amp;</span><span class="nb">document</span><span class="p">.</span><span class="nx">readyState</span><span class="o">===</span><span class="s2">&quot;complete&quot;</span><span class="o">||</span><span class="nx">e</span><span class="p">)</span><span class="k">return</span> <span class="nx">a</span><span class="p">();</span><span class="nx">d</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="s2">&quot;load&quot;</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="kc">false</span><span class="p">)};</span><span class="nx">d</span><span class="p">.</span><span class="nx">on</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">j</span><span class="p">,</span><span class="nx">k</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">attachEvent</span><span class="p">)</span><span class="nx">a</span><span class="p">.</span><span class="nx">attachEvent</span><span class="p">(</span><span class="s2">&quot;on&quot;</span><span class="o">+</span><span class="nx">f</span><span class="p">,</span><span class="nx">j</span><span class="p">);</span><span class="k">else</span> <span class="nx">a</span><span class="p">.</span><span class="nx">addEventListener</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">addEventListener</span><span class="p">(</span><span class="nx">f</span><span class="p">,</span><span class="nx">j</span><span class="p">,</span><span class="nx">k</span><span class="p">)};</span><span class="nx">d</span><span class="p">.</span><span class="nx">request</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;undefined&quot;</span><span class="o">!=</span><span class="k">typeof</span> <span class="nb">window</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nb">window</span><span class="p">.</span><span class="nx">XDomainRequest</span><span class="p">)</span><span class="k">return</span> <span class="k">new</span> <span class="nx">XDomainRequest</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nb">window</span><span class="p">.</span><span class="nx">XMLHttpRequest</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="o">!</span><span class="nx">a</span><span class="o">||</span><span class="nx">d</span><span class="p">.</span><span class="nx">ua</span><span class="p">.</span><span class="nx">hasCORS</span><span class="p">))</span><span class="k">return</span> <span class="k">new</span> <span class="nx">XMLHttpRequest</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">a</span><span class="p">)</span><span class="k">try</span><span class="p">{</span><span class="k">return</span> <span class="k">new</span> <span class="nb">window</span><span class="p">.</span><span class="nx">ActiveXObject</span><span class="p">(</span><span class="s2">&quot;Microsoft.XMLHTTP&quot;</span><span class="p">)}</span><span class="k">catch</span><span class="p">(</span><span class="nx">f</span><span class="p">){}}</span><span class="k">return</span> <span class="kc">null</span><span class="p">};</span></div><div class='line' id='LC6'><span class="s2">&quot;undefined&quot;</span><span class="o">!=</span><span class="k">typeof</span> <span class="nb">window</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="p">.</span><span class="nx">load</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">e</span><span class="o">=</span><span class="kc">true</span><span class="p">});</span><span class="nx">d</span><span class="p">.</span><span class="nx">defer</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">d</span><span class="p">.</span><span class="nx">ua</span><span class="p">.</span><span class="nx">webkit</span><span class="p">)</span><span class="k">return</span> <span class="nx">a</span><span class="p">();</span><span class="nx">d</span><span class="p">.</span><span class="nx">load</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">setTimeout</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="mi">100</span><span class="p">)})};</span><span class="nx">d</span><span class="p">.</span><span class="nx">merge</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">j</span><span class="p">,</span><span class="nx">k</span><span class="p">){</span><span class="nx">k</span><span class="o">=</span><span class="nx">k</span><span class="o">||</span><span class="p">[];</span><span class="nx">j</span><span class="o">=</span><span class="k">typeof</span> <span class="nx">j</span><span class="o">==</span><span class="s2">&quot;undefined&quot;</span><span class="o">?</span><span class="mi">2</span><span class="o">:</span><span class="nx">j</span><span class="p">;</span><span class="kd">var</span> <span class="nx">o</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">o</span> <span class="k">in</span> <span class="nx">f</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">f</span><span class="p">.</span><span class="nx">hasOwnProperty</span><span class="p">(</span><span class="nx">o</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="nx">k</span><span class="p">,</span><span class="nx">o</span><span class="p">)</span><span class="o">&lt;</span><span class="mi">0</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">a</span><span class="p">[</span><span class="nx">o</span><span class="p">]</span><span class="o">!==</span><span class="s2">&quot;object&quot;</span><span class="o">||!</span><span class="nx">j</span><span class="p">){</span><span class="nx">a</span><span class="p">[</span><span class="nx">o</span><span class="p">]</span><span class="o">=</span><span class="nx">f</span><span class="p">[</span><span class="nx">o</span><span class="p">];</span><span class="nx">k</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">f</span><span class="p">[</span><span class="nx">o</span><span class="p">])}</span><span class="k">else</span> <span class="nx">d</span><span class="p">.</span><span class="nx">merge</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="nx">o</span><span class="p">],</span><span class="nx">f</span><span class="p">[</span><span class="nx">o</span><span class="p">],</span><span class="nx">j</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span><span class="nx">k</span><span class="p">);</span><span class="k">return</span> <span class="nx">a</span><span class="p">};</span><span class="nx">d</span><span class="p">.</span><span class="nx">mixin</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">f</span><span class="p">){</span><span class="nx">d</span><span class="p">.</span><span class="nx">merge</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">prototype</span><span class="p">,</span><span class="nx">f</span><span class="p">.</span><span class="nx">prototype</span><span class="p">)};</span><span class="nx">d</span><span class="p">.</span><span class="nx">inherit</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">f</span><span class="p">){</span><span class="kd">function</span> <span class="nx">j</span><span class="p">(){}</span><span class="nx">j</span><span class="p">.</span><span class="nx">prototype</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">prototype</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">prototype</span><span class="o">=</span><span class="k">new</span> <span class="nx">j</span><span class="p">};</span><span class="nx">d</span><span class="p">.</span><span class="nx">isArray</span><span class="o">=</span></div><div class='line' id='LC7'><span class="nb">Array</span><span class="p">.</span><span class="nx">isArray</span><span class="o">||</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nb">Object</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">toString</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">===</span><span class="s2">&quot;[object Array]&quot;</span><span class="p">};</span><span class="nx">d</span><span class="p">.</span><span class="nx">intersect</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">f</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">j</span><span class="o">=</span><span class="p">[],</span><span class="nx">k</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="o">&gt;</span><span class="nx">f</span><span class="p">.</span><span class="nx">length</span><span class="o">?</span><span class="nx">a</span><span class="o">:</span><span class="nx">f</span><span class="p">,</span><span class="nx">o</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="o">&gt;</span><span class="nx">f</span><span class="p">.</span><span class="nx">length</span><span class="o">?</span><span class="nx">f</span><span class="o">:</span><span class="nx">a</span><span class="p">,</span><span class="nx">p</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">n</span><span class="o">=</span><span class="nx">o</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">p</span><span class="o">&lt;</span><span class="nx">n</span><span class="p">;</span><span class="nx">p</span><span class="o">++</span><span class="p">)</span><span class="o">~</span><span class="nx">d</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="nx">k</span><span class="p">,</span><span class="nx">o</span><span class="p">[</span><span class="nx">p</span><span class="p">])</span><span class="o">&amp;&amp;</span><span class="nx">j</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">o</span><span class="p">[</span><span class="nx">p</span><span class="p">]);</span><span class="k">return</span> <span class="nx">j</span><span class="p">};</span><span class="nx">d</span><span class="p">.</span><span class="nx">indexOf</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">j</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nb">Array</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">)</span><span class="k">return</span> <span class="nb">Array</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">j</span><span class="p">);</span><span class="kd">var</span> <span class="nx">k</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">j</span><span class="o">=</span><span class="nx">j</span><span class="o">&lt;</span><span class="mi">0</span><span class="o">?</span><span class="nx">j</span><span class="o">+</span><span class="nx">k</span><span class="o">&lt;</span><span class="mi">0</span><span class="o">?</span><span class="mi">0</span><span class="o">:</span><span class="nx">j</span><span class="o">+</span><span class="nx">k</span><span class="o">:</span><span class="nx">j</span><span class="o">||</span><span class="mi">0</span><span class="p">;</span><span class="nx">j</span><span class="o">&lt;</span><span class="nx">k</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">[</span><span class="nx">j</span><span class="p">]</span><span class="o">!==</span><span class="nx">f</span><span class="p">;</span><span class="nx">j</span><span class="o">++</span><span class="p">);</span><span class="k">return</span> <span class="nx">k</span><span class="o">&lt;=</span><span class="nx">j</span><span class="o">?-</span><span class="mi">1</span><span class="o">:</span><span class="nx">j</span><span class="p">};</span><span class="nx">d</span><span class="p">.</span><span class="nx">toArray</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="p">[],</span><span class="nx">j</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">k</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">j</span><span class="o">&lt;</span><span class="nx">k</span><span class="p">;</span><span class="nx">j</span><span class="o">++</span><span class="p">)</span><span class="nx">f</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="nx">j</span><span class="p">]);</span><span class="k">return</span> <span class="nx">f</span><span class="p">};</span><span class="nx">d</span><span class="p">.</span><span class="nx">ua</span><span class="o">=</span></div><div class='line' id='LC8'><span class="p">{};</span><span class="nx">d</span><span class="p">.</span><span class="nx">ua</span><span class="p">.</span><span class="nx">hasCORS</span><span class="o">=</span><span class="s2">&quot;undefined&quot;</span><span class="o">!=</span><span class="k">typeof</span> <span class="nb">window</span><span class="o">&amp;&amp;</span><span class="nb">window</span><span class="p">.</span><span class="nx">XMLHttpRequest</span><span class="o">&amp;&amp;</span><span class="kd">function</span><span class="p">(){</span><span class="k">try</span><span class="p">{</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">new</span> <span class="nx">XMLHttpRequest</span><span class="p">}</span><span class="k">catch</span><span class="p">(</span><span class="nx">f</span><span class="p">){</span><span class="k">return</span> <span class="kc">false</span><span class="p">}</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">withCredentials</span><span class="o">!=</span><span class="kc">undefined</span><span class="p">}();</span><span class="nx">d</span><span class="p">.</span><span class="nx">ua</span><span class="p">.</span><span class="nx">webkit</span><span class="o">=</span><span class="s2">&quot;undefined&quot;</span><span class="o">!=</span><span class="k">typeof</span> <span class="nx">navigator</span><span class="o">&amp;&amp;</span><span class="sr">/webkit/i</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">navigator</span><span class="p">.</span><span class="nx">userAgent</span><span class="p">)})(</span><span class="s2">&quot;undefined&quot;</span><span class="o">!=</span><span class="k">typeof</span> <span class="nb">window</span><span class="o">?</span><span class="nx">io</span><span class="o">:</span><span class="nx">module</span><span class="p">.</span><span class="nx">exports</span><span class="p">,</span><span class="k">this</span><span class="p">);</span></div><div class='line' id='LC9'><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">m</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">function</span> <span class="nx">d</span><span class="p">(){}</span><span class="nx">m</span><span class="p">.</span><span class="nx">EventEmitter</span><span class="o">=</span><span class="nx">d</span><span class="p">;</span><span class="nx">d</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">on</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">h</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="k">this</span><span class="p">.</span><span class="nx">$events</span><span class="p">)</span><span class="k">this</span><span class="p">.</span><span class="nx">$events</span><span class="o">=</span><span class="p">{};</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">$events</span><span class="p">[</span><span class="nx">c</span><span class="p">])</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">isArray</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">$events</span><span class="p">[</span><span class="nx">c</span><span class="p">]))</span><span class="k">this</span><span class="p">.</span><span class="nx">$events</span><span class="p">[</span><span class="nx">c</span><span class="p">].</span><span class="nx">push</span><span class="p">(</span><span class="nx">h</span><span class="p">);</span><span class="k">else</span> <span class="k">this</span><span class="p">.</span><span class="nx">$events</span><span class="p">[</span><span class="nx">c</span><span class="p">]</span><span class="o">=</span><span class="p">[</span><span class="k">this</span><span class="p">.</span><span class="nx">$events</span><span class="p">[</span><span class="nx">c</span><span class="p">],</span><span class="nx">h</span><span class="p">];</span><span class="k">else</span> <span class="k">this</span><span class="p">.</span><span class="nx">$events</span><span class="p">[</span><span class="nx">c</span><span class="p">]</span><span class="o">=</span><span class="nx">h</span><span class="p">;</span><span class="k">return</span> <span class="k">this</span><span class="p">};</span><span class="nx">d</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">addListener</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">on</span><span class="p">;</span><span class="nx">d</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">once</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">h</span><span class="p">){</span><span class="kd">function</span> <span class="nx">e</span><span class="p">(){</span><span class="nx">a</span><span class="p">.</span><span class="nx">removeListener</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">e</span><span class="p">);</span><span class="nx">h</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">arguments</span><span class="p">)}</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">;</span><span class="nx">e</span><span class="p">.</span><span class="nx">listener</span><span class="o">=</span><span class="nx">h</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">e</span><span class="p">);</span><span class="k">return</span> <span class="k">this</span><span class="p">};</span><span class="nx">d</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">removeListener</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">h</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">$events</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">$events</span><span class="p">[</span><span class="nx">c</span><span class="p">]){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span></div><div class='line' id='LC10'><span class="k">this</span><span class="p">.</span><span class="nx">$events</span><span class="p">[</span><span class="nx">c</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">isArray</span><span class="p">(</span><span class="nx">e</span><span class="p">)){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=-</span><span class="mi">1</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">j</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">f</span><span class="o">&lt;</span><span class="nx">j</span><span class="p">;</span><span class="nx">f</span><span class="o">++</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">e</span><span class="p">[</span><span class="nx">f</span><span class="p">]</span><span class="o">===</span><span class="nx">h</span><span class="o">||</span><span class="nx">e</span><span class="p">[</span><span class="nx">f</span><span class="p">].</span><span class="nx">listener</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">[</span><span class="nx">f</span><span class="p">].</span><span class="nx">listener</span><span class="o">===</span><span class="nx">h</span><span class="p">){</span><span class="nx">a</span><span class="o">=</span><span class="nx">f</span><span class="p">;</span><span class="k">break</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="o">&lt;</span><span class="mi">0</span><span class="p">)</span><span class="k">return</span> <span class="k">this</span><span class="p">;</span><span class="nx">e</span><span class="p">.</span><span class="nx">splice</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="mi">1</span><span class="p">);</span><span class="nx">e</span><span class="p">.</span><span class="nx">length</span><span class="o">||</span><span class="k">delete</span> <span class="k">this</span><span class="p">.</span><span class="nx">$events</span><span class="p">[</span><span class="nx">c</span><span class="p">]}</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">e</span><span class="o">===</span><span class="nx">h</span><span class="o">||</span><span class="nx">e</span><span class="p">.</span><span class="nx">listener</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">.</span><span class="nx">listener</span><span class="o">===</span><span class="nx">h</span><span class="p">)</span><span class="k">delete</span> <span class="k">this</span><span class="p">.</span><span class="nx">$events</span><span class="p">[</span><span class="nx">c</span><span class="p">]}</span><span class="k">return</span> <span class="k">this</span><span class="p">};</span><span class="nx">d</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">removeAllListeners</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">c</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">$events</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">$events</span><span class="p">[</span><span class="nx">c</span><span class="p">])</span><span class="k">this</span><span class="p">.</span><span class="nx">$events</span><span class="p">[</span><span class="nx">c</span><span class="p">]</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="k">return</span> <span class="k">this</span><span class="p">};</span><span class="nx">d</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">listeners</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">c</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="k">this</span><span class="p">.</span><span class="nx">$events</span><span class="p">)</span><span class="k">this</span><span class="p">.</span><span class="nx">$events</span><span class="o">=</span><span class="p">{};</span><span class="k">this</span><span class="p">.</span><span class="nx">$events</span><span class="p">[</span><span class="nx">c</span><span class="p">]</span><span class="o">||</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">$events</span><span class="p">[</span><span class="nx">c</span><span class="p">]</span><span class="o">=</span><span class="p">[]);</span><span class="nx">b</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">isArray</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">$events</span><span class="p">[</span><span class="nx">c</span><span class="p">])</span><span class="o">||</span></div><div class='line' id='LC11'><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">$events</span><span class="p">[</span><span class="nx">c</span><span class="p">]</span><span class="o">=</span><span class="p">[</span><span class="k">this</span><span class="p">.</span><span class="nx">$events</span><span class="p">[</span><span class="nx">c</span><span class="p">]]);</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">$events</span><span class="p">[</span><span class="nx">c</span><span class="p">]};</span><span class="nx">d</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">emit</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">c</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="k">this</span><span class="p">.</span><span class="nx">$events</span><span class="p">)</span><span class="k">return</span> <span class="kc">false</span><span class="p">;</span><span class="kd">var</span> <span class="nx">h</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">$events</span><span class="p">[</span><span class="nx">c</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">h</span><span class="p">)</span><span class="k">return</span> <span class="kc">false</span><span class="p">;</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nb">Array</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">slice</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">arguments</span><span class="p">,</span><span class="mi">1</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;function&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">h</span><span class="p">)</span><span class="nx">h</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">e</span><span class="p">);</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">isArray</span><span class="p">(</span><span class="nx">h</span><span class="p">)){</span><span class="nx">h</span><span class="o">=</span><span class="nx">h</span><span class="p">.</span><span class="nx">slice</span><span class="p">();</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="nx">h</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">a</span><span class="o">&lt;</span><span class="nx">f</span><span class="p">;</span><span class="nx">a</span><span class="o">++</span><span class="p">)</span><span class="nx">h</span><span class="p">[</span><span class="nx">a</span><span class="p">].</span><span class="nx">apply</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">e</span><span class="p">)}</span><span class="k">else</span> <span class="k">return</span> <span class="kc">false</span><span class="p">;</span><span class="k">return</span> <span class="kc">true</span><span class="p">}})(</span><span class="s2">&quot;undefined&quot;</span><span class="o">!=</span><span class="k">typeof</span> <span class="nx">io</span><span class="o">?</span><span class="nx">io</span><span class="o">:</span><span class="nx">module</span><span class="p">.</span><span class="nx">exports</span><span class="p">,</span><span class="s2">&quot;undefined&quot;</span><span class="o">!=</span><span class="k">typeof</span> <span class="nx">io</span><span class="o">?</span><span class="nx">io</span><span class="o">:</span><span class="nx">module</span><span class="p">.</span><span class="nx">parent</span><span class="p">.</span><span class="nx">exports</span><span class="p">);</span></div><div class='line' id='LC12'><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">m</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">function</span> <span class="nx">d</span><span class="p">(</span><span class="nx">n</span><span class="p">){</span><span class="k">return</span> <span class="nx">n</span><span class="o">&lt;</span><span class="mi">10</span><span class="o">?</span><span class="s2">&quot;0&quot;</span><span class="o">+</span><span class="nx">n</span><span class="o">:</span><span class="nx">n</span><span class="p">}</span><span class="kd">function</span> <span class="nx">c</span><span class="p">(</span><span class="nx">n</span><span class="p">){</span><span class="nx">f</span><span class="p">.</span><span class="nx">lastIndex</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">return</span> <span class="nx">f</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">n</span><span class="p">)</span><span class="o">?</span><span class="s1">&#39;&quot;&#39;</span><span class="o">+</span><span class="nx">n</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="nx">f</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">z</span><span class="p">){</span><span class="kd">var</span> <span class="nx">t</span><span class="o">=</span><span class="nx">o</span><span class="p">[</span><span class="nx">z</span><span class="p">];</span><span class="k">return</span> <span class="k">typeof</span> <span class="nx">t</span><span class="o">===</span><span class="s2">&quot;string&quot;</span><span class="o">?</span><span class="nx">t</span><span class="o">:</span><span class="s2">&quot;\\u&quot;</span><span class="o">+</span><span class="p">(</span><span class="s2">&quot;0000&quot;</span><span class="o">+</span><span class="nx">z</span><span class="p">.</span><span class="nx">charCodeAt</span><span class="p">(</span><span class="mi">0</span><span class="p">).</span><span class="nx">toString</span><span class="p">(</span><span class="mi">16</span><span class="p">)).</span><span class="nx">slice</span><span class="p">(</span><span class="o">-</span><span class="mi">4</span><span class="p">)})</span><span class="o">+</span><span class="s1">&#39;&quot;&#39;</span><span class="o">:</span><span class="s1">&#39;&quot;&#39;</span><span class="o">+</span><span class="nx">n</span><span class="o">+</span><span class="s1">&#39;&quot;&#39;</span><span class="p">}</span><span class="kd">function</span> <span class="nx">h</span><span class="p">(</span><span class="nx">n</span><span class="p">,</span><span class="nx">z</span><span class="p">){</span><span class="kd">var</span> <span class="nx">t</span><span class="p">,</span><span class="nx">B</span><span class="p">,</span><span class="nx">C</span><span class="p">,</span><span class="nx">G</span><span class="p">,</span><span class="nx">w</span><span class="o">=</span><span class="nx">j</span><span class="p">,</span><span class="nx">A</span><span class="p">,</span><span class="nx">y</span><span class="o">=</span><span class="nx">z</span><span class="p">[</span><span class="nx">n</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="nx">y</span> <span class="k">instanceof</span> <span class="nb">Date</span><span class="p">)</span><span class="nx">y</span><span class="o">=</span><span class="nb">isFinite</span><span class="p">(</span><span class="nx">n</span><span class="p">.</span><span class="nx">valueOf</span><span class="p">())</span><span class="o">?</span><span class="nx">n</span><span class="p">.</span><span class="nx">getUTCFullYear</span><span class="p">()</span><span class="o">+</span><span class="s2">&quot;-&quot;</span><span class="o">+</span><span class="nx">d</span><span class="p">(</span><span class="nx">n</span><span class="p">.</span><span class="nx">getUTCMonth</span><span class="p">()</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot;-&quot;</span><span class="o">+</span><span class="nx">d</span><span class="p">(</span><span class="nx">n</span><span class="p">.</span><span class="nx">getUTCDate</span><span class="p">())</span><span class="o">+</span><span class="s2">&quot;T&quot;</span><span class="o">+</span><span class="nx">d</span><span class="p">(</span><span class="nx">n</span><span class="p">.</span><span class="nx">getUTCHours</span><span class="p">())</span><span class="o">+</span><span class="s2">&quot;:&quot;</span><span class="o">+</span><span class="nx">d</span><span class="p">(</span><span class="nx">n</span><span class="p">.</span><span class="nx">getUTCMinutes</span><span class="p">())</span><span class="o">+</span><span class="s2">&quot;:&quot;</span><span class="o">+</span><span class="nx">d</span><span class="p">(</span><span class="nx">n</span><span class="p">.</span><span class="nx">getUTCSeconds</span><span class="p">())</span><span class="o">+</span><span class="s2">&quot;Z&quot;</span><span class="o">:</span><span class="kc">null</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">p</span><span class="o">===</span><span class="s2">&quot;function&quot;</span><span class="p">)</span><span class="nx">y</span><span class="o">=</span><span class="nx">p</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">z</span><span class="p">,</span></div><div class='line' id='LC13'><span class="nx">n</span><span class="p">,</span><span class="nx">y</span><span class="p">);</span><span class="k">switch</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">y</span><span class="p">){</span><span class="k">case</span> <span class="s2">&quot;string&quot;</span><span class="o">:</span><span class="k">return</span> <span class="nx">c</span><span class="p">(</span><span class="nx">y</span><span class="p">);</span><span class="k">case</span> <span class="s2">&quot;number&quot;</span><span class="o">:</span><span class="k">return</span> <span class="nb">isFinite</span><span class="p">(</span><span class="nx">y</span><span class="p">)</span><span class="o">?</span><span class="nb">String</span><span class="p">(</span><span class="nx">y</span><span class="p">)</span><span class="o">:</span><span class="s2">&quot;null&quot;</span><span class="p">;</span><span class="k">case</span> <span class="s2">&quot;boolean&quot;</span><span class="o">:</span><span class="k">case</span> <span class="s2">&quot;null&quot;</span><span class="o">:</span><span class="k">return</span> <span class="nb">String</span><span class="p">(</span><span class="nx">y</span><span class="p">);</span><span class="k">case</span> <span class="s2">&quot;object&quot;</span><span class="o">:</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">y</span><span class="p">)</span><span class="k">return</span><span class="s2">&quot;null&quot;</span><span class="p">;</span><span class="nx">j</span><span class="o">+=</span><span class="nx">k</span><span class="p">;</span><span class="nx">A</span><span class="o">=</span><span class="p">[];</span><span class="k">if</span><span class="p">(</span><span class="nb">Object</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">toString</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">y</span><span class="p">)</span><span class="o">===</span><span class="s2">&quot;[object Array]&quot;</span><span class="p">){</span><span class="nx">G</span><span class="o">=</span><span class="nx">y</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">t</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">t</span><span class="o">&lt;</span><span class="nx">G</span><span class="p">;</span><span class="nx">t</span><span class="o">+=</span><span class="mi">1</span><span class="p">)</span><span class="nx">A</span><span class="p">[</span><span class="nx">t</span><span class="p">]</span><span class="o">=</span><span class="nx">h</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">y</span><span class="p">)</span><span class="o">||</span><span class="s2">&quot;null&quot;</span><span class="p">;</span><span class="nx">C</span><span class="o">=</span><span class="nx">A</span><span class="p">.</span><span class="nx">length</span><span class="o">===</span><span class="mi">0</span><span class="o">?</span><span class="s2">&quot;[]&quot;</span><span class="o">:</span><span class="nx">j</span><span class="o">?</span><span class="s2">&quot;[\n&quot;</span><span class="o">+</span><span class="nx">j</span><span class="o">+</span><span class="nx">A</span><span class="p">.</span><span class="nx">join</span><span class="p">(</span><span class="s2">&quot;,\n&quot;</span><span class="o">+</span><span class="nx">j</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot;\n&quot;</span><span class="o">+</span><span class="nx">w</span><span class="o">+</span><span class="s2">&quot;]&quot;</span><span class="o">:</span><span class="s2">&quot;[&quot;</span><span class="o">+</span><span class="nx">A</span><span class="p">.</span><span class="nx">join</span><span class="p">(</span><span class="s2">&quot;,&quot;</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot;]&quot;</span><span class="p">;</span><span class="nx">j</span><span class="o">=</span><span class="nx">w</span><span class="p">;</span><span class="k">return</span> <span class="nx">C</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="nx">p</span><span class="o">&amp;&amp;</span><span class="k">typeof</span> <span class="nx">p</span><span class="o">===</span><span class="s2">&quot;object&quot;</span><span class="p">){</span><span class="nx">G</span><span class="o">=</span><span class="nx">p</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">t</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">t</span><span class="o">&lt;</span><span class="nx">G</span><span class="p">;</span><span class="nx">t</span><span class="o">+=</span><span class="mi">1</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">p</span><span class="p">[</span><span class="nx">t</span><span class="p">]</span><span class="o">===</span><span class="s2">&quot;string&quot;</span><span class="p">){</span><span class="nx">B</span><span class="o">=</span><span class="nx">p</span><span class="p">[</span><span class="nx">t</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="nx">C</span><span class="o">=</span><span class="nx">h</span><span class="p">(</span><span class="nx">B</span><span class="p">,</span><span class="nx">y</span><span class="p">))</span><span class="nx">A</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">c</span><span class="p">(</span><span class="nx">B</span><span class="p">)</span><span class="o">+</span><span class="p">(</span><span class="nx">j</span><span class="o">?</span><span class="s2">&quot;: &quot;</span><span class="o">:</span></div><div class='line' id='LC14'><span class="s2">&quot;:&quot;</span><span class="p">)</span><span class="o">+</span><span class="nx">C</span><span class="p">)}}</span><span class="k">else</span> <span class="k">for</span><span class="p">(</span><span class="nx">B</span> <span class="k">in</span> <span class="nx">y</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nb">Object</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">hasOwnProperty</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">y</span><span class="p">,</span><span class="nx">B</span><span class="p">))</span><span class="k">if</span><span class="p">(</span><span class="nx">C</span><span class="o">=</span><span class="nx">h</span><span class="p">(</span><span class="nx">B</span><span class="p">,</span><span class="nx">y</span><span class="p">))</span><span class="nx">A</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">c</span><span class="p">(</span><span class="nx">B</span><span class="p">)</span><span class="o">+</span><span class="p">(</span><span class="nx">j</span><span class="o">?</span><span class="s2">&quot;: &quot;</span><span class="o">:</span><span class="s2">&quot;:&quot;</span><span class="p">)</span><span class="o">+</span><span class="nx">C</span><span class="p">);</span><span class="nx">C</span><span class="o">=</span><span class="nx">A</span><span class="p">.</span><span class="nx">length</span><span class="o">===</span><span class="mi">0</span><span class="o">?</span><span class="s2">&quot;{}&quot;</span><span class="o">:</span><span class="nx">j</span><span class="o">?</span><span class="s2">&quot;{\n&quot;</span><span class="o">+</span><span class="nx">j</span><span class="o">+</span><span class="nx">A</span><span class="p">.</span><span class="nx">join</span><span class="p">(</span><span class="s2">&quot;,\n&quot;</span><span class="o">+</span><span class="nx">j</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot;\n&quot;</span><span class="o">+</span><span class="nx">w</span><span class="o">+</span><span class="s2">&quot;}&quot;</span><span class="o">:</span><span class="s2">&quot;{&quot;</span><span class="o">+</span><span class="nx">A</span><span class="p">.</span><span class="nx">join</span><span class="p">(</span><span class="s2">&quot;,&quot;</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot;}&quot;</span><span class="p">;</span><span class="nx">j</span><span class="o">=</span><span class="nx">w</span><span class="p">;</span><span class="k">return</span> <span class="nx">C</span><span class="p">}}</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">parse</span><span class="p">)</span><span class="k">return</span> <span class="nx">m</span><span class="p">.</span><span class="nx">JSON</span><span class="o">=</span><span class="p">{</span><span class="nx">parse</span><span class="o">:</span><span class="nx">b</span><span class="p">.</span><span class="nx">parse</span><span class="p">,</span><span class="nx">stringify</span><span class="o">:</span><span class="nx">b</span><span class="p">.</span><span class="nx">stringify</span><span class="p">};</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">m</span><span class="p">.</span><span class="nx">JSON</span><span class="o">=</span><span class="p">{},</span><span class="nx">a</span><span class="o">=</span><span class="sr">/[\u0000\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="sr">/[\\\&quot;\x00-\x1f\x7f-\x9f\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g</span><span class="p">,</span></div><div class='line' id='LC15'><span class="nx">j</span><span class="p">,</span><span class="nx">k</span><span class="p">,</span><span class="nx">o</span><span class="o">=</span><span class="p">{</span><span class="s2">&quot;\u0008&quot;</span><span class="o">:</span><span class="s2">&quot;\\b&quot;</span><span class="p">,</span><span class="s2">&quot;\t&quot;</span><span class="o">:</span><span class="s2">&quot;\\t&quot;</span><span class="p">,</span><span class="s2">&quot;\n&quot;</span><span class="o">:</span><span class="s2">&quot;\\n&quot;</span><span class="p">,</span><span class="s2">&quot;\u000c&quot;</span><span class="o">:</span><span class="s2">&quot;\\f&quot;</span><span class="p">,</span><span class="s2">&quot;\r&quot;</span><span class="o">:</span><span class="s2">&quot;\\r&quot;</span><span class="p">,</span><span class="s1">&#39;&quot;&#39;</span><span class="o">:</span><span class="s1">&#39;\\&quot;&#39;</span><span class="p">,</span><span class="s2">&quot;\\&quot;</span><span class="o">:</span><span class="s2">&quot;\\\\&quot;</span><span class="p">},</span><span class="nx">p</span><span class="p">;</span><span class="nx">e</span><span class="p">.</span><span class="nx">stringify</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">n</span><span class="p">,</span><span class="nx">z</span><span class="p">,</span><span class="nx">t</span><span class="p">){</span><span class="kd">var</span> <span class="nx">B</span><span class="p">;</span><span class="nx">k</span><span class="o">=</span><span class="nx">j</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">t</span><span class="o">===</span><span class="s2">&quot;number&quot;</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="nx">B</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">B</span><span class="o">&lt;</span><span class="nx">t</span><span class="p">;</span><span class="nx">B</span><span class="o">+=</span><span class="mi">1</span><span class="p">)</span><span class="nx">k</span><span class="o">+=</span><span class="s2">&quot; &quot;</span><span class="p">;</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">t</span><span class="o">===</span><span class="s2">&quot;string&quot;</span><span class="p">)</span><span class="nx">k</span><span class="o">=</span><span class="nx">t</span><span class="p">;</span><span class="k">if</span><span class="p">((</span><span class="nx">p</span><span class="o">=</span><span class="nx">z</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="k">typeof</span> <span class="nx">z</span><span class="o">!==</span><span class="s2">&quot;function&quot;</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">z</span><span class="o">!==</span><span class="s2">&quot;object&quot;</span><span class="o">||</span><span class="k">typeof</span> <span class="nx">z</span><span class="p">.</span><span class="nx">length</span><span class="o">!==</span><span class="s2">&quot;number&quot;</span><span class="p">))</span><span class="k">throw</span> <span class="nb">Error</span><span class="p">(</span><span class="s2">&quot;JSON.stringify&quot;</span><span class="p">);</span><span class="k">return</span> <span class="nx">h</span><span class="p">(</span><span class="s2">&quot;&quot;</span><span class="p">,{</span><span class="s2">&quot;&quot;</span><span class="o">:</span><span class="nx">n</span><span class="p">})};</span><span class="nx">e</span><span class="p">.</span><span class="nx">parse</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">n</span><span class="p">,</span><span class="nx">z</span><span class="p">){</span><span class="kd">function</span> <span class="nx">t</span><span class="p">(</span><span class="nx">C</span><span class="p">,</span><span class="nx">G</span><span class="p">){</span><span class="kd">var</span> <span class="nx">w</span><span class="p">,</span><span class="nx">A</span><span class="p">,</span><span class="nx">y</span><span class="o">=</span><span class="nx">C</span><span class="p">[</span><span class="nx">G</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="nx">y</span><span class="o">&amp;&amp;</span><span class="k">typeof</span> <span class="nx">y</span><span class="o">===</span><span class="s2">&quot;object&quot;</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="nx">w</span> <span class="k">in</span> <span class="nx">y</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nb">Object</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">hasOwnProperty</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">y</span><span class="p">,</span><span class="nx">w</span><span class="p">)){</span><span class="nx">A</span><span class="o">=</span><span class="nx">t</span><span class="p">(</span><span class="nx">y</span><span class="p">,</span><span class="nx">w</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">A</span><span class="o">!==</span></div><div class='line' id='LC16'><span class="kc">undefined</span><span class="p">)</span><span class="nx">y</span><span class="p">[</span><span class="nx">w</span><span class="p">]</span><span class="o">=</span><span class="nx">A</span><span class="p">;</span><span class="k">else</span> <span class="k">delete</span> <span class="nx">y</span><span class="p">[</span><span class="nx">w</span><span class="p">]}</span><span class="k">return</span> <span class="nx">z</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">C</span><span class="p">,</span><span class="nx">G</span><span class="p">,</span><span class="nx">y</span><span class="p">)}</span><span class="kd">var</span> <span class="nx">B</span><span class="p">;</span><span class="nx">n</span><span class="o">=</span><span class="nb">String</span><span class="p">(</span><span class="nx">n</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">lastIndex</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">n</span><span class="p">))</span><span class="nx">n</span><span class="o">=</span><span class="nx">n</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">C</span><span class="p">){</span><span class="k">return</span><span class="s2">&quot;\\u&quot;</span><span class="o">+</span><span class="p">(</span><span class="s2">&quot;0000&quot;</span><span class="o">+</span><span class="nx">C</span><span class="p">.</span><span class="nx">charCodeAt</span><span class="p">(</span><span class="mi">0</span><span class="p">).</span><span class="nx">toString</span><span class="p">(</span><span class="mi">16</span><span class="p">)).</span><span class="nx">slice</span><span class="p">(</span><span class="o">-</span><span class="mi">4</span><span class="p">)});</span><span class="k">if</span><span class="p">(</span><span class="sr">/^[\],:{}\s]*$/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">n</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/\\(?:[&quot;\\\/bfnrt]|u[0-9a-fA-F]{4})/g</span><span class="p">,</span><span class="s2">&quot;@&quot;</span><span class="p">).</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/&quot;[^&quot;\\\n\r]*&quot;|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g</span><span class="p">,</span><span class="s2">&quot;]&quot;</span><span class="p">).</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/(?:^|:|,)(?:\s*\[)+/g</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">))){</span><span class="nx">B</span><span class="o">=</span><span class="nb">eval</span><span class="p">(</span><span class="s2">&quot;(&quot;</span><span class="o">+</span><span class="nx">n</span><span class="o">+</span><span class="s2">&quot;)&quot;</span><span class="p">);</span><span class="k">return</span> <span class="k">typeof</span> <span class="nx">z</span><span class="o">===</span><span class="s2">&quot;function&quot;</span><span class="o">?</span><span class="nx">t</span><span class="p">({</span><span class="s2">&quot;&quot;</span><span class="o">:</span><span class="nx">B</span><span class="p">},</span><span class="s2">&quot;&quot;</span><span class="p">)</span><span class="o">:</span><span class="nx">B</span><span class="p">}</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">SyntaxError</span><span class="p">(</span><span class="s2">&quot;JSON.parse&quot;</span><span class="p">);}})(</span><span class="s2">&quot;undefined&quot;</span><span class="o">!=</span><span class="k">typeof</span> <span class="nx">io</span><span class="o">?</span></div><div class='line' id='LC17'><span class="nx">io</span><span class="o">:</span><span class="nx">module</span><span class="p">.</span><span class="nx">exports</span><span class="p">,</span><span class="k">typeof</span> <span class="nx">JSON</span><span class="o">!==</span><span class="s2">&quot;undefined&quot;</span><span class="o">?</span><span class="nx">JSON</span><span class="o">:</span><span class="kc">undefined</span><span class="p">);</span></div><div class='line' id='LC18'><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">m</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">m</span><span class="p">.</span><span class="nx">parser</span><span class="o">=</span><span class="p">{},</span><span class="nx">c</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">packets</span><span class="o">=</span><span class="p">[</span><span class="s2">&quot;disconnect&quot;</span><span class="p">,</span><span class="s2">&quot;connect&quot;</span><span class="p">,</span><span class="s2">&quot;heartbeat&quot;</span><span class="p">,</span><span class="s2">&quot;message&quot;</span><span class="p">,</span><span class="s2">&quot;json&quot;</span><span class="p">,</span><span class="s2">&quot;event&quot;</span><span class="p">,</span><span class="s2">&quot;ack&quot;</span><span class="p">,</span><span class="s2">&quot;error&quot;</span><span class="p">,</span><span class="s2">&quot;noop&quot;</span><span class="p">],</span><span class="nx">h</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">reasons</span><span class="o">=</span><span class="p">[</span><span class="s2">&quot;transport not supported&quot;</span><span class="p">,</span><span class="s2">&quot;client not handshaken&quot;</span><span class="p">,</span><span class="s2">&quot;unauthorized&quot;</span><span class="p">],</span><span class="nx">e</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">advice</span><span class="o">=</span><span class="p">[</span><span class="s2">&quot;reconnect&quot;</span><span class="p">],</span><span class="nx">a</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">JSON</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">;</span><span class="nx">d</span><span class="p">.</span><span class="nx">encodePacket</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">k</span><span class="p">){</span><span class="kd">var</span> <span class="nx">o</span><span class="o">=</span><span class="nx">f</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">k</span><span class="p">.</span><span class="nx">type</span><span class="p">),</span><span class="nx">p</span><span class="o">=</span><span class="nx">k</span><span class="p">.</span><span class="nx">id</span><span class="o">||</span><span class="s2">&quot;&quot;</span><span class="p">,</span><span class="nx">n</span><span class="o">=</span><span class="nx">k</span><span class="p">.</span><span class="nx">endpoint</span><span class="o">||</span><span class="s2">&quot;&quot;</span><span class="p">,</span><span class="nx">z</span><span class="o">=</span><span class="nx">k</span><span class="p">.</span><span class="nx">ack</span><span class="p">,</span><span class="nx">t</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="k">switch</span><span class="p">(</span><span class="nx">k</span><span class="p">.</span><span class="nx">type</span><span class="p">){</span><span class="k">case</span> <span class="s2">&quot;error&quot;</span><span class="o">:</span><span class="kd">var</span> <span class="nx">B</span><span class="o">=</span><span class="nx">k</span><span class="p">.</span><span class="nx">reason</span><span class="o">?</span><span class="nx">f</span><span class="p">(</span><span class="nx">h</span><span class="p">,</span><span class="nx">k</span><span class="p">.</span><span class="nx">reason</span><span class="p">)</span><span class="o">:</span><span class="s2">&quot;&quot;</span><span class="p">;</span><span class="nx">k</span><span class="o">=</span><span class="nx">k</span><span class="p">.</span><span class="nx">advice</span><span class="o">?</span><span class="nx">f</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">k</span><span class="p">.</span><span class="nx">advice</span><span class="p">)</span><span class="o">:</span><span class="s2">&quot;&quot;</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">B</span><span class="o">!==</span><span class="s2">&quot;&quot;</span><span class="o">||</span><span class="nx">k</span><span class="o">!==</span><span class="s2">&quot;&quot;</span><span class="p">)</span><span class="nx">t</span><span class="o">=</span><span class="nx">B</span><span class="o">+</span><span class="p">(</span><span class="nx">k</span><span class="o">!==</span><span class="s2">&quot;&quot;</span><span class="o">?</span><span class="s2">&quot;+&quot;</span><span class="o">+</span><span class="nx">k</span><span class="o">:</span><span class="s2">&quot;&quot;</span><span class="p">);</span><span class="k">break</span><span class="p">;</span><span class="k">case</span> <span class="s2">&quot;message&quot;</span><span class="o">:</span><span class="k">if</span><span class="p">(</span><span class="nx">k</span><span class="p">.</span><span class="nx">data</span><span class="o">!==</span></div><div class='line' id='LC19'><span class="s2">&quot;&quot;</span><span class="p">)</span><span class="nx">t</span><span class="o">=</span><span class="nx">k</span><span class="p">.</span><span class="nx">data</span><span class="p">;</span><span class="k">break</span><span class="p">;</span><span class="k">case</span> <span class="s2">&quot;event&quot;</span><span class="o">:</span><span class="nx">t</span><span class="o">=</span><span class="p">{</span><span class="nx">name</span><span class="o">:</span><span class="nx">k</span><span class="p">.</span><span class="nx">name</span><span class="p">};</span><span class="k">if</span><span class="p">(</span><span class="nx">k</span><span class="p">.</span><span class="nx">args</span><span class="o">&amp;&amp;</span><span class="nx">k</span><span class="p">.</span><span class="nx">args</span><span class="p">.</span><span class="nx">length</span><span class="p">)</span><span class="nx">t</span><span class="p">.</span><span class="nx">args</span><span class="o">=</span><span class="nx">k</span><span class="p">.</span><span class="nx">args</span><span class="p">;</span><span class="nx">t</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">stringify</span><span class="p">(</span><span class="nx">t</span><span class="p">);</span><span class="k">break</span><span class="p">;</span><span class="k">case</span> <span class="s2">&quot;json&quot;</span><span class="o">:</span><span class="nx">t</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">stringify</span><span class="p">(</span><span class="nx">k</span><span class="p">.</span><span class="nx">data</span><span class="p">);</span><span class="k">break</span><span class="p">;</span><span class="k">case</span> <span class="s2">&quot;connect&quot;</span><span class="o">:</span><span class="k">if</span><span class="p">(</span><span class="nx">k</span><span class="p">.</span><span class="nx">qs</span><span class="p">)</span><span class="nx">t</span><span class="o">=</span><span class="nx">k</span><span class="p">.</span><span class="nx">qs</span><span class="p">;</span><span class="k">break</span><span class="p">;</span><span class="k">case</span> <span class="s2">&quot;ack&quot;</span><span class="o">:</span><span class="nx">t</span><span class="o">=</span><span class="nx">k</span><span class="p">.</span><span class="nx">ackId</span><span class="o">+</span><span class="p">(</span><span class="nx">k</span><span class="p">.</span><span class="nx">args</span><span class="o">&amp;&amp;</span><span class="nx">k</span><span class="p">.</span><span class="nx">args</span><span class="p">.</span><span class="nx">length</span><span class="o">?</span><span class="s2">&quot;+&quot;</span><span class="o">+</span><span class="nx">a</span><span class="p">.</span><span class="nx">stringify</span><span class="p">(</span><span class="nx">k</span><span class="p">.</span><span class="nx">args</span><span class="p">)</span><span class="o">:</span><span class="s2">&quot;&quot;</span><span class="p">);</span><span class="k">break</span><span class="p">}</span><span class="nx">o</span><span class="o">=</span><span class="p">[</span><span class="nx">o</span><span class="p">,</span><span class="nx">p</span><span class="o">+</span><span class="p">(</span><span class="nx">z</span><span class="o">==</span><span class="s2">&quot;data&quot;</span><span class="o">?</span><span class="s2">&quot;+&quot;</span><span class="o">:</span><span class="s2">&quot;&quot;</span><span class="p">),</span><span class="nx">n</span><span class="p">];</span><span class="nx">t</span><span class="o">!==</span><span class="kc">null</span><span class="o">&amp;&amp;</span><span class="nx">t</span><span class="o">!==</span><span class="kc">undefined</span><span class="o">&amp;&amp;</span><span class="nx">o</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">t</span><span class="p">);</span><span class="k">return</span> <span class="nx">o</span><span class="p">.</span><span class="nx">join</span><span class="p">(</span><span class="s2">&quot;:&quot;</span><span class="p">)};</span><span class="nx">d</span><span class="p">.</span><span class="nx">encodePayload</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">k</span><span class="p">){</span><span class="kd">var</span> <span class="nx">o</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">k</span><span class="p">.</span><span class="nx">length</span><span class="o">==</span><span class="mi">1</span><span class="p">)</span><span class="k">return</span> <span class="nx">k</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">p</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">n</span><span class="o">=</span><span class="nx">k</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">p</span><span class="o">&lt;</span><span class="nx">n</span><span class="p">;</span><span class="nx">p</span><span class="o">++</span><span class="p">)</span><span class="nx">o</span><span class="o">+=</span><span class="s2">&quot;\ufffd&quot;</span><span class="o">+</span><span class="nx">k</span><span class="p">[</span><span class="nx">p</span><span class="p">].</span><span class="nx">length</span><span class="o">+</span><span class="s2">&quot;\ufffd&quot;</span><span class="o">+</span><span class="nx">k</span><span class="p">[</span><span class="nx">p</span><span class="p">];</span><span class="k">return</span> <span class="nx">o</span><span class="p">};</span><span class="kd">var</span> <span class="nx">j</span><span class="o">=</span><span class="sr">/([^:]+):([0-9]+)?(\+)?:([^:]+)?:?([\s\S]*)?/</span><span class="p">;</span></div><div class='line' id='LC20'><span class="nx">d</span><span class="p">.</span><span class="nx">decodePacket</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">k</span><span class="p">){</span><span class="kd">var</span> <span class="nx">o</span><span class="o">=</span><span class="nx">k</span><span class="p">.</span><span class="nx">match</span><span class="p">(</span><span class="nx">j</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">o</span><span class="p">)</span><span class="k">return</span><span class="p">{};</span><span class="kd">var</span> <span class="nx">p</span><span class="o">=</span><span class="nx">o</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">||</span><span class="s2">&quot;&quot;</span><span class="p">;</span><span class="nx">k</span><span class="o">=</span><span class="nx">o</span><span class="p">[</span><span class="mi">5</span><span class="p">]</span><span class="o">||</span><span class="s2">&quot;&quot;</span><span class="p">;</span><span class="kd">var</span> <span class="nx">n</span><span class="o">=</span><span class="p">{</span><span class="nx">type</span><span class="o">:</span><span class="nx">c</span><span class="p">[</span><span class="nx">o</span><span class="p">[</span><span class="mi">1</span><span class="p">]],</span><span class="nx">endpoint</span><span class="o">:</span><span class="nx">o</span><span class="p">[</span><span class="mi">4</span><span class="p">]</span><span class="o">||</span><span class="s2">&quot;&quot;</span><span class="p">};</span><span class="k">if</span><span class="p">(</span><span class="nx">p</span><span class="p">){</span><span class="nx">n</span><span class="p">.</span><span class="nx">id</span><span class="o">=</span><span class="nx">p</span><span class="p">;</span><span class="nx">n</span><span class="p">.</span><span class="nx">ack</span><span class="o">=</span><span class="nx">o</span><span class="p">[</span><span class="mi">3</span><span class="p">]</span><span class="o">?</span><span class="s2">&quot;data&quot;</span><span class="o">:</span><span class="kc">true</span><span class="p">}</span><span class="k">switch</span><span class="p">(</span><span class="nx">n</span><span class="p">.</span><span class="nx">type</span><span class="p">){</span><span class="k">case</span> <span class="s2">&quot;error&quot;</span><span class="o">:</span><span class="nx">o</span><span class="o">=</span><span class="nx">k</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot;+&quot;</span><span class="p">);</span><span class="nx">n</span><span class="p">.</span><span class="nx">reason</span><span class="o">=</span><span class="nx">h</span><span class="p">[</span><span class="nx">o</span><span class="p">[</span><span class="mi">0</span><span class="p">]]</span><span class="o">||</span><span class="s2">&quot;&quot;</span><span class="p">;</span><span class="nx">n</span><span class="p">.</span><span class="nx">advice</span><span class="o">=</span><span class="nx">e</span><span class="p">[</span><span class="nx">o</span><span class="p">[</span><span class="mi">1</span><span class="p">]]</span><span class="o">||</span><span class="s2">&quot;&quot;</span><span class="p">;</span><span class="k">break</span><span class="p">;</span><span class="k">case</span> <span class="s2">&quot;message&quot;</span><span class="o">:</span><span class="nx">n</span><span class="p">.</span><span class="nx">data</span><span class="o">=</span><span class="nx">k</span><span class="o">||</span><span class="s2">&quot;&quot;</span><span class="p">;</span><span class="k">break</span><span class="p">;</span><span class="k">case</span> <span class="s2">&quot;event&quot;</span><span class="o">:</span><span class="k">try</span><span class="p">{</span><span class="kd">var</span> <span class="nx">z</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">parse</span><span class="p">(</span><span class="nx">k</span><span class="p">);</span><span class="nx">n</span><span class="p">.</span><span class="nx">name</span><span class="o">=</span><span class="nx">z</span><span class="p">.</span><span class="nx">name</span><span class="p">;</span><span class="nx">n</span><span class="p">.</span><span class="nx">args</span><span class="o">=</span><span class="nx">z</span><span class="p">.</span><span class="nx">args</span><span class="p">}</span><span class="k">catch</span><span class="p">(</span><span class="nx">t</span><span class="p">){}</span><span class="nx">n</span><span class="p">.</span><span class="nx">args</span><span class="o">=</span><span class="nx">n</span><span class="p">.</span><span class="nx">args</span><span class="o">||</span><span class="p">[];</span><span class="k">break</span><span class="p">;</span><span class="k">case</span> <span class="s2">&quot;json&quot;</span><span class="o">:</span><span class="k">try</span><span class="p">{</span><span class="nx">n</span><span class="p">.</span><span class="nx">data</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">parse</span><span class="p">(</span><span class="nx">k</span><span class="p">)}</span><span class="k">catch</span><span class="p">(</span><span class="nx">B</span><span class="p">){}</span><span class="k">break</span><span class="p">;</span><span class="k">case</span> <span class="s2">&quot;connect&quot;</span><span class="o">:</span><span class="nx">n</span><span class="p">.</span><span class="nx">qs</span><span class="o">=</span><span class="nx">k</span><span class="o">||</span><span class="s2">&quot;&quot;</span><span class="p">;</span><span class="k">break</span><span class="p">;</span><span class="k">case</span> <span class="s2">&quot;ack&quot;</span><span class="o">:</span><span class="k">if</span><span class="p">(</span><span class="nx">o</span><span class="o">=</span><span class="nx">k</span><span class="p">.</span><span class="nx">match</span><span class="p">(</span><span class="sr">/^([0-9]+)(\+)?(.*)/</span><span class="p">)){</span><span class="nx">n</span><span class="p">.</span><span class="nx">ackId</span><span class="o">=</span></div><div class='line' id='LC21'><span class="nx">o</span><span class="p">[</span><span class="mi">1</span><span class="p">];</span><span class="nx">n</span><span class="p">.</span><span class="nx">args</span><span class="o">=</span><span class="p">[];</span><span class="k">if</span><span class="p">(</span><span class="nx">o</span><span class="p">[</span><span class="mi">3</span><span class="p">])</span><span class="k">try</span><span class="p">{</span><span class="nx">n</span><span class="p">.</span><span class="nx">args</span><span class="o">=</span><span class="nx">o</span><span class="p">[</span><span class="mi">3</span><span class="p">]</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">parse</span><span class="p">(</span><span class="nx">o</span><span class="p">[</span><span class="mi">3</span><span class="p">])</span><span class="o">:</span><span class="p">[]}</span><span class="k">catch</span><span class="p">(</span><span class="nx">C</span><span class="p">){}}</span><span class="k">break</span><span class="p">;</span><span class="k">case</span> <span class="s2">&quot;disconnect&quot;</span><span class="o">:</span><span class="k">case</span> <span class="s2">&quot;heartbeat&quot;</span><span class="o">:</span><span class="k">break</span><span class="p">}</span><span class="k">return</span> <span class="nx">n</span><span class="p">};</span><span class="nx">d</span><span class="p">.</span><span class="nx">decodePayload</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">k</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">k</span><span class="p">.</span><span class="nx">charAt</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span><span class="o">==</span><span class="s2">&quot;\ufffd&quot;</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">o</span><span class="o">=</span><span class="p">[],</span><span class="nx">p</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span><span class="nx">n</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="p">;</span><span class="nx">p</span><span class="o">&lt;</span><span class="nx">k</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">p</span><span class="o">++</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">k</span><span class="p">.</span><span class="nx">charAt</span><span class="p">(</span><span class="nx">p</span><span class="p">)</span><span class="o">==</span><span class="s2">&quot;\ufffd&quot;</span><span class="p">){</span><span class="nx">o</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">decodePacket</span><span class="p">(</span><span class="nx">k</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="nx">p</span><span class="o">+</span><span class="mi">1</span><span class="p">).</span><span class="nx">substr</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="nx">n</span><span class="p">)));</span><span class="nx">p</span><span class="o">+=</span><span class="nb">Number</span><span class="p">(</span><span class="nx">n</span><span class="p">)</span><span class="o">+</span><span class="mi">1</span><span class="p">;</span><span class="nx">n</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="p">}</span><span class="k">else</span> <span class="nx">n</span><span class="o">+=</span><span class="nx">k</span><span class="p">.</span><span class="nx">charAt</span><span class="p">(</span><span class="nx">p</span><span class="p">);</span><span class="k">return</span> <span class="nx">o</span><span class="p">}</span><span class="k">else</span> <span class="k">return</span><span class="p">[</span><span class="nx">d</span><span class="p">.</span><span class="nx">decodePacket</span><span class="p">(</span><span class="nx">k</span><span class="p">)]}})(</span><span class="s2">&quot;undefined&quot;</span><span class="o">!=</span><span class="k">typeof</span> <span class="nx">io</span><span class="o">?</span><span class="nx">io</span><span class="o">:</span><span class="nx">module</span><span class="p">.</span><span class="nx">exports</span><span class="p">,</span><span class="s2">&quot;undefined&quot;</span><span class="o">!=</span><span class="k">typeof</span> <span class="nx">io</span><span class="o">?</span><span class="nx">io</span><span class="o">:</span><span class="nx">module</span><span class="p">.</span><span class="nx">parent</span><span class="p">.</span><span class="nx">exports</span><span class="p">);</span></div><div class='line' id='LC22'><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">m</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">function</span> <span class="nx">d</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">h</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">socket</span><span class="o">=</span><span class="nx">c</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">sessid</span><span class="o">=</span><span class="nx">h</span><span class="p">}</span><span class="nx">m</span><span class="p">.</span><span class="nx">Transport</span><span class="o">=</span><span class="nx">d</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">mixin</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">EventEmitter</span><span class="p">);</span><span class="nx">d</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">onData</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">c</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">clearCloseTimeout</span><span class="p">();</span><span class="k">this</span><span class="p">.</span><span class="nx">setCloseTimeout</span><span class="p">();</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="o">!==</span><span class="s2">&quot;&quot;</span><span class="p">)</span><span class="k">if</span><span class="p">((</span><span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">parser</span><span class="p">.</span><span class="nx">decodePayload</span><span class="p">(</span><span class="nx">c</span><span class="p">))</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">h</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">h</span><span class="o">&lt;</span><span class="nx">e</span><span class="p">;</span><span class="nx">h</span><span class="o">++</span><span class="p">)</span><span class="k">this</span><span class="p">.</span><span class="nx">onPacket</span><span class="p">(</span><span class="nx">c</span><span class="p">[</span><span class="nx">h</span><span class="p">]);</span><span class="k">return</span> <span class="k">this</span><span class="p">};</span><span class="nx">d</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">onPacket</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">c</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">type</span><span class="o">==</span><span class="s2">&quot;heartbeat&quot;</span><span class="p">)</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">onHeartbeat</span><span class="p">();</span><span class="nx">c</span><span class="p">.</span><span class="nx">type</span><span class="o">==</span><span class="s2">&quot;connect&quot;</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">endpoint</span><span class="o">==</span><span class="s2">&quot;&quot;</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">onConnect</span><span class="p">();</span><span class="k">this</span><span class="p">.</span><span class="nx">socket</span><span class="p">.</span><span class="nx">onPacket</span><span class="p">(</span><span class="nx">c</span><span class="p">);</span><span class="k">return</span> <span class="k">this</span><span class="p">};</span><span class="nx">d</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">setCloseTimeout</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="k">this</span><span class="p">.</span><span class="nx">closeTimeout</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span></div><div class='line' id='LC23'><span class="k">this</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">closeTimeout</span><span class="o">=</span><span class="nx">setTimeout</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">c</span><span class="p">.</span><span class="nx">onDisconnect</span><span class="p">()},</span><span class="k">this</span><span class="p">.</span><span class="nx">socket</span><span class="p">.</span><span class="nx">closeTimeout</span><span class="p">)}};</span><span class="nx">d</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">onDisconnect</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">close</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">close</span><span class="p">();</span><span class="k">this</span><span class="p">.</span><span class="nx">clearTimeouts</span><span class="p">();</span><span class="k">this</span><span class="p">.</span><span class="nx">socket</span><span class="p">.</span><span class="nx">onDisconnect</span><span class="p">();</span><span class="k">return</span> <span class="k">this</span><span class="p">};</span><span class="nx">d</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">onConnect</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">socket</span><span class="p">.</span><span class="nx">onConnect</span><span class="p">();</span><span class="k">return</span> <span class="k">this</span><span class="p">};</span><span class="nx">d</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">clearCloseTimeout</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">closeTimeout</span><span class="p">){</span><span class="nx">clearTimeout</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">closeTimeout</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">closeTimeout</span><span class="o">=</span><span class="kc">null</span><span class="p">}};</span><span class="nx">d</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">clearTimeouts</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">clearCloseTimeout</span><span class="p">();</span><span class="k">this</span><span class="p">.</span><span class="nx">reopenTimeout</span><span class="o">&amp;&amp;</span><span class="nx">clearTimeout</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">reopenTimeout</span><span class="p">)};</span></div><div class='line' id='LC24'><span class="nx">d</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">packet</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">c</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">send</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">parser</span><span class="p">.</span><span class="nx">encodePacket</span><span class="p">(</span><span class="nx">c</span><span class="p">))};</span><span class="nx">d</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">onHeartbeat</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">packet</span><span class="p">({</span><span class="nx">type</span><span class="o">:</span><span class="s2">&quot;heartbeat&quot;</span><span class="p">})};</span><span class="nx">d</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">onOpen</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">open</span><span class="o">=</span><span class="kc">true</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">clearCloseTimeout</span><span class="p">();</span><span class="k">this</span><span class="p">.</span><span class="nx">socket</span><span class="p">.</span><span class="nx">onOpen</span><span class="p">()};</span><span class="nx">d</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">onClose</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">open</span><span class="o">=</span><span class="kc">false</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">setCloseTimeout</span><span class="p">();</span><span class="k">this</span><span class="p">.</span><span class="nx">socket</span><span class="p">.</span><span class="nx">onClose</span><span class="p">()};</span><span class="nx">d</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">prepareUrl</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">socket</span><span class="p">.</span><span class="nx">options</span><span class="p">;</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">scheme</span><span class="p">()</span><span class="o">+</span><span class="s2">&quot;://&quot;</span><span class="o">+</span><span class="nx">c</span><span class="p">.</span><span class="nx">host</span><span class="o">+</span><span class="s2">&quot;:&quot;</span><span class="o">+</span><span class="nx">c</span><span class="p">.</span><span class="nx">port</span><span class="o">+</span><span class="s2">&quot;/&quot;</span><span class="o">+</span><span class="nx">c</span><span class="p">.</span><span class="nx">resource</span><span class="o">+</span><span class="s2">&quot;/&quot;</span><span class="o">+</span><span class="nx">b</span><span class="p">.</span><span class="nx">protocol</span><span class="o">+</span><span class="s2">&quot;/&quot;</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">name</span><span class="o">+</span><span class="s2">&quot;/&quot;</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">sessid</span><span class="p">};</span><span class="nx">d</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">ready</span><span class="o">=</span></div><div class='line' id='LC25'><span class="kd">function</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">h</span><span class="p">){</span><span class="nx">h</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">)}})(</span><span class="s2">&quot;undefined&quot;</span><span class="o">!=</span><span class="k">typeof</span> <span class="nx">io</span><span class="o">?</span><span class="nx">io</span><span class="o">:</span><span class="nx">module</span><span class="p">.</span><span class="nx">exports</span><span class="p">,</span><span class="s2">&quot;undefined&quot;</span><span class="o">!=</span><span class="k">typeof</span> <span class="nx">io</span><span class="o">?</span><span class="nx">io</span><span class="o">:</span><span class="nx">module</span><span class="p">.</span><span class="nx">parent</span><span class="p">.</span><span class="nx">exports</span><span class="p">);</span></div><div class='line' id='LC26'><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">m</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="kd">function</span> <span class="nx">c</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="o">=</span><span class="p">{</span><span class="nx">port</span><span class="o">:</span><span class="mi">80</span><span class="p">,</span><span class="nx">secure</span><span class="o">:</span><span class="kc">false</span><span class="p">,</span><span class="nb">document</span><span class="o">:</span><span class="s2">&quot;document&quot;</span><span class="k">in</span> <span class="nx">d</span><span class="o">?</span><span class="nb">document</span><span class="o">:</span><span class="kc">false</span><span class="p">,</span><span class="nx">resource</span><span class="o">:</span><span class="s2">&quot;socket.io&quot;</span><span class="p">,</span><span class="nx">transports</span><span class="o">:</span><span class="nx">b</span><span class="p">.</span><span class="nx">transports</span><span class="p">,</span><span class="s2">&quot;connect timeout&quot;</span><span class="o">:</span><span class="mi">1</span><span class="nx">E4</span><span class="p">,</span><span class="s2">&quot;try multiple transports&quot;</span><span class="o">:</span><span class="kc">true</span><span class="p">,</span><span class="nx">reconnect</span><span class="o">:</span><span class="kc">true</span><span class="p">,</span><span class="s2">&quot;reconnection delay&quot;</span><span class="o">:</span><span class="mi">500</span><span class="p">,</span><span class="s2">&quot;reconnection limit&quot;</span><span class="o">:</span><span class="kc">Infinity</span><span class="p">,</span><span class="s2">&quot;reopen delay&quot;</span><span class="o">:</span><span class="mi">3</span><span class="nx">E3</span><span class="p">,</span><span class="s2">&quot;max reconnection attempts&quot;</span><span class="o">:</span><span class="mi">10</span><span class="p">,</span><span class="s2">&quot;sync disconnect on unload&quot;</span><span class="o">:</span><span class="kc">true</span><span class="p">,</span><span class="s2">&quot;auto connect&quot;</span><span class="o">:</span><span class="kc">true</span><span class="p">,</span><span class="s2">&quot;flash policy port&quot;</span><span class="o">:</span><span class="mi">10843</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">merge</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">,</span><span class="nx">e</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">reconnecting</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">connecting</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">open</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">connected</span><span class="o">=</span><span class="kc">false</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">namespaces</span><span class="o">=</span></div><div class='line' id='LC27'><span class="p">{};</span><span class="k">this</span><span class="p">.</span><span class="nx">buffer</span><span class="o">=</span><span class="p">[];</span><span class="k">this</span><span class="p">.</span><span class="nx">doBuffer</span><span class="o">=</span><span class="kc">false</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">[</span><span class="s2">&quot;sync disconnect on unload&quot;</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="o">!</span><span class="k">this</span><span class="p">.</span><span class="nx">isXDomain</span><span class="p">()</span><span class="o">||</span><span class="nx">b</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">ua</span><span class="p">.</span><span class="nx">hasCORS</span><span class="p">)){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="s2">&quot;beforeunload&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="nx">a</span><span class="p">.</span><span class="nx">disconnectSync</span><span class="p">()},</span><span class="kc">false</span><span class="p">)}</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">[</span><span class="s2">&quot;auto connect&quot;</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">connect</span><span class="p">()}</span><span class="kd">function</span> <span class="nx">h</span><span class="p">(){}</span><span class="nx">m</span><span class="p">.</span><span class="nx">Socket</span><span class="o">=</span><span class="nx">c</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">mixin</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">EventEmitter</span><span class="p">);</span><span class="nx">c</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">of</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="k">this</span><span class="p">.</span><span class="nx">namespaces</span><span class="p">[</span><span class="nx">e</span><span class="p">]){</span><span class="k">this</span><span class="p">.</span><span class="nx">namespaces</span><span class="p">[</span><span class="nx">e</span><span class="p">]</span><span class="o">=</span><span class="k">new</span> <span class="nx">b</span><span class="p">.</span><span class="nx">SocketNamespace</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">e</span><span class="p">);</span><span class="nx">e</span><span class="o">!==</span><span class="s2">&quot;&quot;</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">namespaces</span><span class="p">[</span><span class="nx">e</span><span class="p">].</span><span class="nx">packet</span><span class="p">({</span><span class="nx">type</span><span class="o">:</span><span class="s2">&quot;connect&quot;</span><span class="p">})}</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">namespaces</span><span class="p">[</span><span class="nx">e</span><span class="p">]};</span><span class="nx">c</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">publish</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">emit</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="k">this</span><span class="p">,</span></div><div class='line' id='LC28'><span class="nx">arguments</span><span class="p">);</span><span class="kd">var</span> <span class="nx">e</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">a</span> <span class="k">in</span> <span class="k">this</span><span class="p">.</span><span class="nx">namespaces</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">namespaces</span><span class="p">.</span><span class="nx">hasOwnProperty</span><span class="p">(</span><span class="nx">a</span><span class="p">)){</span><span class="nx">e</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">of</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="nx">e</span><span class="p">.</span><span class="nx">$emit</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">arguments</span><span class="p">)}};</span><span class="nx">c</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">handshake</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="kd">function</span> <span class="nx">a</span><span class="p">(</span><span class="nx">n</span><span class="p">){</span><span class="nx">n</span> <span class="k">instanceof</span> <span class="nb">Error</span><span class="o">?</span><span class="nx">f</span><span class="p">.</span><span class="nx">onError</span><span class="p">(</span><span class="nx">n</span><span class="p">.</span><span class="nx">message</span><span class="p">)</span><span class="o">:</span><span class="nx">e</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="kc">null</span><span class="p">,</span><span class="nx">n</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot;:&quot;</span><span class="p">))}</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="k">this</span><span class="p">,</span><span class="nx">j</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">;</span><span class="nx">j</span><span class="o">=</span><span class="p">[</span><span class="s2">&quot;http&quot;</span><span class="o">+</span><span class="p">(</span><span class="nx">j</span><span class="p">.</span><span class="nx">secure</span><span class="o">?</span><span class="s2">&quot;s&quot;</span><span class="o">:</span><span class="s2">&quot;&quot;</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot;:/&quot;</span><span class="p">,</span><span class="nx">j</span><span class="p">.</span><span class="nx">host</span><span class="o">+</span><span class="s2">&quot;:&quot;</span><span class="o">+</span><span class="nx">j</span><span class="p">.</span><span class="nx">port</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">resource</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">protocol</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">query</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">query</span><span class="p">,</span><span class="s2">&quot;t=&quot;</span><span class="o">+</span> <span class="o">+</span><span class="k">new</span> <span class="nb">Date</span><span class="p">)].</span><span class="nx">join</span><span class="p">(</span><span class="s2">&quot;/&quot;</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">isXDomain</span><span class="p">()){</span><span class="kd">var</span> <span class="nx">k</span><span class="o">=</span><span class="nb">document</span><span class="p">.</span><span class="nx">getElementsByTagName</span><span class="p">(</span><span class="s2">&quot;script&quot;</span><span class="p">)[</span><span class="mi">0</span><span class="p">],</span><span class="nx">o</span><span class="o">=</span><span class="nb">document</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;script&quot;</span><span class="p">);</span></div><div class='line' id='LC29'><span class="nx">o</span><span class="p">.</span><span class="nx">src</span><span class="o">=</span><span class="nx">j</span><span class="o">+</span><span class="s2">&quot;&amp;jsonp=&quot;</span><span class="o">+</span><span class="nx">b</span><span class="p">.</span><span class="nx">j</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">k</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">.</span><span class="nx">insertBefore</span><span class="p">(</span><span class="nx">o</span><span class="p">,</span><span class="nx">k</span><span class="p">);</span><span class="nx">b</span><span class="p">.</span><span class="nx">j</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">n</span><span class="p">){</span><span class="nx">a</span><span class="p">(</span><span class="nx">n</span><span class="p">);</span><span class="nx">o</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">.</span><span class="nx">removeChild</span><span class="p">(</span><span class="nx">o</span><span class="p">)})}</span><span class="k">else</span><span class="p">{</span><span class="kd">var</span> <span class="nx">p</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">request</span><span class="p">();</span><span class="nx">p</span><span class="p">.</span><span class="nx">open</span><span class="p">(</span><span class="s2">&quot;GET&quot;</span><span class="p">,</span><span class="nx">j</span><span class="p">,</span><span class="kc">true</span><span class="p">);</span><span class="nx">p</span><span class="p">.</span><span class="nx">onreadystatechange</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="nx">p</span><span class="p">.</span><span class="nx">readyState</span><span class="o">==</span><span class="mi">4</span><span class="p">){</span><span class="nx">p</span><span class="p">.</span><span class="nx">onreadystatechange</span><span class="o">=</span><span class="nx">h</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">p</span><span class="p">.</span><span class="nx">status</span><span class="o">==</span><span class="mi">200</span><span class="p">)</span><span class="nx">a</span><span class="p">(</span><span class="nx">p</span><span class="p">.</span><span class="nx">responseText</span><span class="p">);</span><span class="k">else</span><span class="o">!</span><span class="nx">f</span><span class="p">.</span><span class="nx">reconnecting</span><span class="o">&amp;&amp;</span><span class="nx">f</span><span class="p">.</span><span class="nx">onError</span><span class="p">(</span><span class="nx">p</span><span class="p">.</span><span class="nx">responseText</span><span class="p">)}};</span><span class="nx">p</span><span class="p">.</span><span class="nx">send</span><span class="p">(</span><span class="kc">null</span><span class="p">)}};</span><span class="nx">c</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">getTransport</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="nx">e</span><span class="o">=</span><span class="nx">e</span><span class="o">||</span><span class="k">this</span><span class="p">.</span><span class="nx">transports</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">f</span><span class="p">;</span><span class="nx">f</span><span class="o">=</span><span class="nx">e</span><span class="p">[</span><span class="nx">a</span><span class="p">];</span><span class="nx">a</span><span class="o">++</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">Transport</span><span class="p">[</span><span class="nx">f</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">Transport</span><span class="p">[</span><span class="nx">f</span><span class="p">].</span><span class="nx">check</span><span class="p">(</span><span class="k">this</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="o">!</span><span class="k">this</span><span class="p">.</span><span class="nx">isXDomain</span><span class="p">()</span><span class="o">||</span><span class="nx">b</span><span class="p">.</span><span class="nx">Transport</span><span class="p">[</span><span class="nx">f</span><span class="p">].</span><span class="nx">xdomainCheck</span><span class="p">()))</span><span class="k">return</span> <span class="k">new</span> <span class="nx">b</span><span class="p">.</span><span class="nx">Transport</span><span class="p">[</span><span class="nx">f</span><span class="p">](</span><span class="k">this</span><span class="p">,</span></div><div class='line' id='LC30'><span class="k">this</span><span class="p">.</span><span class="nx">sessionid</span><span class="p">);</span><span class="k">return</span> <span class="kc">null</span><span class="p">};</span><span class="nx">c</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">connect</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">connecting</span><span class="p">)</span><span class="k">return</span> <span class="k">this</span><span class="p">;</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">handshake</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">f</span><span class="p">,</span><span class="nx">j</span><span class="p">,</span><span class="nx">k</span><span class="p">,</span><span class="nx">o</span><span class="p">){</span><span class="kd">function</span> <span class="nx">p</span><span class="p">(</span><span class="nx">n</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">transport</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">transport</span><span class="p">.</span><span class="nx">clearTimeouts</span><span class="p">();</span><span class="nx">a</span><span class="p">.</span><span class="nx">transport</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">getTransport</span><span class="p">(</span><span class="nx">n</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">a</span><span class="p">.</span><span class="nx">transport</span><span class="p">)</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">publish</span><span class="p">(</span><span class="s2">&quot;connect_failed&quot;</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">transport</span><span class="p">.</span><span class="nx">ready</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="nx">a</span><span class="p">.</span><span class="nx">connecting</span><span class="o">=</span><span class="kc">true</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">publish</span><span class="p">(</span><span class="s2">&quot;connecting&quot;</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">transport</span><span class="p">.</span><span class="nx">name</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">transport</span><span class="p">.</span><span class="nx">open</span><span class="p">();</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">options</span><span class="p">[</span><span class="s2">&quot;connect timeout&quot;</span><span class="p">])</span><span class="nx">a</span><span class="p">.</span><span class="nx">connectTimeoutTimer</span><span class="o">=</span><span class="nx">setTimeout</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">a</span><span class="p">.</span><span class="nx">connected</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">connecting</span><span class="o">=</span><span class="kc">false</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">options</span><span class="p">[</span><span class="s2">&quot;try multiple transports&quot;</span><span class="p">]){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">a</span><span class="p">.</span><span class="nx">remainingTransports</span><span class="p">)</span><span class="nx">a</span><span class="p">.</span><span class="nx">remainingTransports</span><span class="o">=</span></div><div class='line' id='LC31'><span class="nx">a</span><span class="p">.</span><span class="nx">transports</span><span class="p">.</span><span class="nx">slice</span><span class="p">(</span><span class="mi">0</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">z</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">remainingTransports</span><span class="p">;</span><span class="nx">z</span><span class="p">.</span><span class="nx">length</span><span class="o">&gt;</span><span class="mi">0</span><span class="o">&amp;&amp;</span><span class="nx">z</span><span class="p">.</span><span class="nx">splice</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">)[</span><span class="mi">0</span><span class="p">]</span><span class="o">!=</span><span class="nx">a</span><span class="p">.</span><span class="nx">transport</span><span class="p">.</span><span class="nx">name</span><span class="p">;);</span><span class="nx">z</span><span class="p">.</span><span class="nx">length</span><span class="o">?</span><span class="nx">p</span><span class="p">(</span><span class="nx">z</span><span class="p">)</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">publish</span><span class="p">(</span><span class="s2">&quot;connect_failed&quot;</span><span class="p">)}}},</span><span class="nx">a</span><span class="p">.</span><span class="nx">options</span><span class="p">[</span><span class="s2">&quot;connect timeout&quot;</span><span class="p">])})}</span><span class="nx">a</span><span class="p">.</span><span class="nx">sessionid</span><span class="o">=</span><span class="nx">f</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">closeTimeout</span><span class="o">=</span><span class="nx">k</span><span class="o">*</span><span class="mi">1</span><span class="nx">E3</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">heartbeatTimeout</span><span class="o">=</span><span class="nx">j</span><span class="o">*</span><span class="mi">1</span><span class="nx">E3</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">transports</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">intersect</span><span class="p">(</span><span class="nx">o</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot;,&quot;</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">transports</span><span class="p">);</span><span class="nx">p</span><span class="p">();</span><span class="nx">a</span><span class="p">.</span><span class="nx">once</span><span class="p">(</span><span class="s2">&quot;connect&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="nx">clearTimeout</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">connectTimeoutTimer</span><span class="p">);</span><span class="nx">e</span><span class="o">&amp;&amp;</span><span class="k">typeof</span> <span class="nx">e</span><span class="o">==</span><span class="s2">&quot;function&quot;</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">()})});</span><span class="k">return</span> <span class="k">this</span><span class="p">};</span><span class="nx">c</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">packet</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">connected</span><span class="o">&amp;&amp;!</span><span class="k">this</span><span class="p">.</span><span class="nx">doBuffer</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">transport</span><span class="p">.</span><span class="nx">packet</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span><span class="o">:</span></div><div class='line' id='LC32'><span class="k">this</span><span class="p">.</span><span class="nx">buffer</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">e</span><span class="p">);</span><span class="k">return</span> <span class="k">this</span><span class="p">};</span><span class="nx">c</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">setBuffer</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">doBuffer</span><span class="o">=</span><span class="nx">e</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">e</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">connected</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">buffer</span><span class="p">.</span><span class="nx">length</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">transport</span><span class="p">.</span><span class="nx">payload</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">buffer</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">buffer</span><span class="o">=</span><span class="p">[]}};</span><span class="nx">c</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">disconnect</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">connected</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">open</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">of</span><span class="p">(</span><span class="s2">&quot;&quot;</span><span class="p">).</span><span class="nx">packet</span><span class="p">({</span><span class="nx">type</span><span class="o">:</span><span class="s2">&quot;disconnect&quot;</span><span class="p">});</span><span class="k">this</span><span class="p">.</span><span class="nx">onDisconnect</span><span class="p">(</span><span class="s2">&quot;booted&quot;</span><span class="p">)}</span><span class="k">return</span> <span class="k">this</span><span class="p">};</span><span class="nx">c</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">disconnectSync</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="nx">b</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">request</span><span class="p">().</span><span class="nx">open</span><span class="p">(</span><span class="s2">&quot;GET&quot;</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">resource</span><span class="o">+</span><span class="s2">&quot;/&quot;</span><span class="o">+</span><span class="nx">b</span><span class="p">.</span><span class="nx">protocol</span><span class="o">+</span><span class="s2">&quot;/&quot;</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">sessionid</span><span class="p">,</span><span class="kc">true</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">onDisconnect</span><span class="p">(</span><span class="s2">&quot;booted&quot;</span><span class="p">)};</span><span class="nx">c</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">isXDomain</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span></div><div class='line' id='LC33'><span class="nb">window</span><span class="p">.</span><span class="nx">location</span><span class="p">.</span><span class="nx">port</span><span class="o">||</span><span class="p">(</span><span class="s2">&quot;https:&quot;</span><span class="o">==</span><span class="nb">window</span><span class="p">.</span><span class="nx">location</span><span class="p">.</span><span class="nx">protocol</span><span class="o">?</span><span class="mi">443</span><span class="o">:</span><span class="mi">80</span><span class="p">);</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">host</span><span class="o">!==</span><span class="nb">document</span><span class="p">.</span><span class="nx">domain</span><span class="o">||</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">port</span><span class="o">!=</span><span class="nx">e</span><span class="p">};</span><span class="nx">c</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">onConnect</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="k">this</span><span class="p">.</span><span class="nx">connected</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">connected</span><span class="o">=</span><span class="kc">true</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">connecting</span><span class="o">=</span><span class="kc">false</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">doBuffer</span><span class="o">||</span><span class="k">this</span><span class="p">.</span><span class="nx">setBuffer</span><span class="p">(</span><span class="kc">false</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">emit</span><span class="p">(</span><span class="s2">&quot;connect&quot;</span><span class="p">)}};</span><span class="nx">c</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">onOpen</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">open</span><span class="o">=</span><span class="kc">true</span><span class="p">};</span><span class="nx">c</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">onClose</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">open</span><span class="o">=</span><span class="kc">false</span><span class="p">};</span><span class="nx">c</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">onPacket</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">of</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">endpoint</span><span class="p">).</span><span class="nx">onPacket</span><span class="p">(</span><span class="nx">e</span><span class="p">)};</span><span class="nx">c</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">onError</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">e</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">.</span><span class="nx">advice</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">advice</span><span class="o">===</span></div><div class='line' id='LC34'><span class="s2">&quot;reconnect&quot;</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">connected</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">disconnect</span><span class="p">();</span><span class="k">this</span><span class="p">.</span><span class="nx">reconnect</span><span class="p">()}</span><span class="k">this</span><span class="p">.</span><span class="nx">publish</span><span class="p">(</span><span class="s2">&quot;error&quot;</span><span class="p">,</span><span class="nx">e</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">.</span><span class="nx">reason</span><span class="o">?</span><span class="nx">e</span><span class="p">.</span><span class="nx">reason</span><span class="o">:</span><span class="nx">e</span><span class="p">)};</span><span class="nx">c</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">onDisconnect</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">connected</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">open</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">connecting</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">connected</span><span class="o">=</span><span class="kc">false</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">transport</span><span class="p">.</span><span class="nx">close</span><span class="p">();</span><span class="k">this</span><span class="p">.</span><span class="nx">transport</span><span class="p">.</span><span class="nx">clearTimeouts</span><span class="p">();</span><span class="k">this</span><span class="p">.</span><span class="nx">publish</span><span class="p">(</span><span class="s2">&quot;disconnect&quot;</span><span class="p">,</span><span class="nx">e</span><span class="p">);</span><span class="s2">&quot;booted&quot;</span><span class="o">!=</span><span class="nx">e</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">reconnect</span><span class="o">&amp;&amp;!</span><span class="k">this</span><span class="p">.</span><span class="nx">reconnecting</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">reconnect</span><span class="p">()}};</span><span class="nx">c</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">reconnect</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">function</span> <span class="nx">e</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="nx">f</span><span class="p">.</span><span class="nx">connected</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">p</span> <span class="k">in</span> <span class="nx">f</span><span class="p">.</span><span class="nx">namespaces</span><span class="p">)</span><span class="nx">f</span><span class="p">.</span><span class="nx">namespaces</span><span class="p">.</span><span class="nx">hasOwnProperty</span><span class="p">(</span><span class="nx">p</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="s2">&quot;&quot;</span><span class="o">!==</span></div><div class='line' id='LC35'><span class="nx">p</span><span class="o">&amp;&amp;</span><span class="nx">f</span><span class="p">.</span><span class="nx">namespaces</span><span class="p">[</span><span class="nx">p</span><span class="p">].</span><span class="nx">packet</span><span class="p">({</span><span class="nx">type</span><span class="o">:</span><span class="s2">&quot;connect&quot;</span><span class="p">});</span><span class="nx">f</span><span class="p">.</span><span class="nx">publish</span><span class="p">(</span><span class="s2">&quot;reconnect&quot;</span><span class="p">,</span><span class="nx">f</span><span class="p">.</span><span class="nx">transport</span><span class="p">.</span><span class="nx">name</span><span class="p">,</span><span class="nx">f</span><span class="p">.</span><span class="nx">reconnectionAttempts</span><span class="p">)}</span><span class="nx">f</span><span class="p">.</span><span class="nx">removeListener</span><span class="p">(</span><span class="s2">&quot;connect_failed&quot;</span><span class="p">,</span><span class="nx">a</span><span class="p">);</span><span class="nx">f</span><span class="p">.</span><span class="nx">removeListener</span><span class="p">(</span><span class="s2">&quot;connect&quot;</span><span class="p">,</span><span class="nx">a</span><span class="p">);</span><span class="nx">f</span><span class="p">.</span><span class="nx">reconnecting</span><span class="o">=</span><span class="kc">false</span><span class="p">;</span><span class="k">delete</span> <span class="nx">f</span><span class="p">.</span><span class="nx">reconnectionAttempts</span><span class="p">;</span><span class="k">delete</span> <span class="nx">f</span><span class="p">.</span><span class="nx">reconnectionDelay</span><span class="p">;</span><span class="k">delete</span> <span class="nx">f</span><span class="p">.</span><span class="nx">reconnectionTimer</span><span class="p">;</span><span class="k">delete</span> <span class="nx">f</span><span class="p">.</span><span class="nx">redoTransports</span><span class="p">;</span><span class="nx">f</span><span class="p">.</span><span class="nx">options</span><span class="p">[</span><span class="s2">&quot;try multiple transports&quot;</span><span class="p">]</span><span class="o">=</span><span class="nx">k</span><span class="p">}</span><span class="kd">function</span> <span class="nx">a</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="nx">f</span><span class="p">.</span><span class="nx">reconnecting</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">f</span><span class="p">.</span><span class="nx">connected</span><span class="p">)</span><span class="k">return</span> <span class="nx">e</span><span class="p">();</span><span class="k">if</span><span class="p">(</span><span class="nx">f</span><span class="p">.</span><span class="nx">connecting</span><span class="o">&amp;&amp;</span><span class="nx">f</span><span class="p">.</span><span class="nx">reconnecting</span><span class="p">)</span><span class="k">return</span> <span class="nx">f</span><span class="p">.</span><span class="nx">reconnectionTimer</span><span class="o">=</span><span class="nx">setTimeout</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="mi">1</span><span class="nx">E3</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">f</span><span class="p">.</span><span class="nx">reconnectionAttempts</span><span class="o">++&gt;=</span></div><div class='line' id='LC36'><span class="nx">j</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">f</span><span class="p">.</span><span class="nx">redoTransports</span><span class="p">){</span><span class="nx">f</span><span class="p">.</span><span class="nx">publish</span><span class="p">(</span><span class="s2">&quot;reconnect_failed&quot;</span><span class="p">);</span><span class="nx">e</span><span class="p">()}</span><span class="k">else</span><span class="p">{</span><span class="nx">f</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="s2">&quot;connect_failed&quot;</span><span class="p">,</span><span class="nx">a</span><span class="p">);</span><span class="nx">f</span><span class="p">.</span><span class="nx">options</span><span class="p">[</span><span class="s2">&quot;try multiple transports&quot;</span><span class="p">]</span><span class="o">=</span><span class="kc">true</span><span class="p">;</span><span class="nx">f</span><span class="p">.</span><span class="nx">transport</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">getTransport</span><span class="p">();</span><span class="nx">f</span><span class="p">.</span><span class="nx">redoTransports</span><span class="o">=</span><span class="kc">true</span><span class="p">;</span><span class="nx">f</span><span class="p">.</span><span class="nx">connect</span><span class="p">()}</span><span class="k">else</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="nx">f</span><span class="p">.</span><span class="nx">reconnectionDelay</span><span class="o">&lt;</span><span class="nx">o</span><span class="p">)</span><span class="nx">f</span><span class="p">.</span><span class="nx">reconnectionDelay</span><span class="o">*=</span><span class="mi">2</span><span class="p">;</span><span class="nx">f</span><span class="p">.</span><span class="nx">connect</span><span class="p">();</span><span class="nx">f</span><span class="p">.</span><span class="nx">publish</span><span class="p">(</span><span class="s2">&quot;reconnecting&quot;</span><span class="p">,</span><span class="nx">f</span><span class="p">.</span><span class="nx">reconnectionDelay</span><span class="p">,</span><span class="nx">f</span><span class="p">.</span><span class="nx">reconnectionAttempts</span><span class="p">);</span><span class="nx">f</span><span class="p">.</span><span class="nx">reconnectionTimer</span><span class="o">=</span><span class="nx">setTimeout</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">f</span><span class="p">.</span><span class="nx">reconnectionDelay</span><span class="p">)}}}</span><span class="k">this</span><span class="p">.</span><span class="nx">reconnecting</span><span class="o">=</span><span class="kc">true</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">reconnectionAttempts</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">reconnectionDelay</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">[</span><span class="s2">&quot;reconnection delay&quot;</span><span class="p">];</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="k">this</span><span class="p">,</span></div><div class='line' id='LC37'><span class="nx">j</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">[</span><span class="s2">&quot;max reconnection attempts&quot;</span><span class="p">],</span><span class="nx">k</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">[</span><span class="s2">&quot;try multiple transports&quot;</span><span class="p">],</span><span class="nx">o</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">[</span><span class="s2">&quot;reconnection limit&quot;</span><span class="p">];</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">[</span><span class="s2">&quot;try multiple transports&quot;</span><span class="p">]</span><span class="o">=</span><span class="kc">false</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">reconnectionTimer</span><span class="o">=</span><span class="nx">setTimeout</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">reconnectionDelay</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="s2">&quot;connect&quot;</span><span class="p">,</span><span class="nx">a</span><span class="p">)}})(</span><span class="s2">&quot;undefined&quot;</span><span class="o">!=</span><span class="k">typeof</span> <span class="nx">io</span><span class="o">?</span><span class="nx">io</span><span class="o">:</span><span class="nx">module</span><span class="p">.</span><span class="nx">exports</span><span class="p">,</span><span class="s2">&quot;undefined&quot;</span><span class="o">!=</span><span class="k">typeof</span> <span class="nx">io</span><span class="o">?</span><span class="nx">io</span><span class="o">:</span><span class="nx">module</span><span class="p">.</span><span class="nx">parent</span><span class="p">.</span><span class="nx">exports</span><span class="p">,</span><span class="k">this</span><span class="p">);</span></div><div class='line' id='LC38'><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">m</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">function</span> <span class="nx">d</span><span class="p">(</span><span class="nx">h</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">socket</span><span class="o">=</span><span class="nx">h</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">name</span><span class="o">=</span><span class="nx">e</span><span class="o">||</span><span class="s2">&quot;&quot;</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">flags</span><span class="o">=</span><span class="p">{};</span><span class="k">this</span><span class="p">.</span><span class="nx">json</span><span class="o">=</span><span class="k">new</span> <span class="nx">c</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="s2">&quot;json&quot;</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">ackPackets</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">acks</span><span class="o">=</span><span class="p">{}}</span><span class="kd">function</span> <span class="nx">c</span><span class="p">(</span><span class="nx">h</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">namespace</span><span class="o">=</span><span class="nx">h</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">name</span><span class="o">=</span><span class="nx">e</span><span class="p">}</span><span class="nx">m</span><span class="p">.</span><span class="nx">SocketNamespace</span><span class="o">=</span><span class="nx">d</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">mixin</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">EventEmitter</span><span class="p">);</span><span class="nx">d</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">$emit</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">EventEmitter</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">emit</span><span class="p">;</span><span class="nx">d</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">of</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">socket</span><span class="p">.</span><span class="nx">of</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">socket</span><span class="p">,</span><span class="nx">arguments</span><span class="p">)};</span><span class="nx">d</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">packet</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">h</span><span class="p">){</span><span class="nx">h</span><span class="p">.</span><span class="nx">endpoint</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">name</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">socket</span><span class="p">.</span><span class="nx">packet</span><span class="p">(</span><span class="nx">h</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">flags</span><span class="o">=</span><span class="p">{};</span><span class="k">return</span> <span class="k">this</span><span class="p">};</span><span class="nx">d</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">send</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">h</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="p">{</span><span class="nx">type</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">flags</span><span class="p">.</span><span class="nx">json</span><span class="o">?</span></div><div class='line' id='LC39'><span class="s2">&quot;json&quot;</span><span class="o">:</span><span class="s2">&quot;message&quot;</span><span class="p">,</span><span class="nx">data</span><span class="o">:</span><span class="nx">h</span><span class="p">};</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;function&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">e</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">id</span><span class="o">=++</span><span class="k">this</span><span class="p">.</span><span class="nx">ackPackets</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">ack</span><span class="o">=</span><span class="kc">true</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">acks</span><span class="p">[</span><span class="nx">a</span><span class="p">.</span><span class="nx">id</span><span class="p">]</span><span class="o">=</span><span class="nx">e</span><span class="p">}</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">packet</span><span class="p">(</span><span class="nx">a</span><span class="p">)};</span><span class="nx">d</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">emit</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">h</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nb">Array</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">slice</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">arguments</span><span class="p">,</span><span class="mi">1</span><span class="p">),</span><span class="nx">a</span><span class="o">=</span><span class="nx">e</span><span class="p">[</span><span class="nx">e</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">],</span><span class="nx">f</span><span class="o">=</span><span class="p">{</span><span class="nx">type</span><span class="o">:</span><span class="s2">&quot;event&quot;</span><span class="p">,</span><span class="nx">name</span><span class="o">:</span><span class="nx">h</span><span class="p">};</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;function&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">a</span><span class="p">){</span><span class="nx">f</span><span class="p">.</span><span class="nx">id</span><span class="o">=++</span><span class="k">this</span><span class="p">.</span><span class="nx">ackPackets</span><span class="p">;</span><span class="nx">f</span><span class="p">.</span><span class="nx">ack</span><span class="o">=</span><span class="s2">&quot;data&quot;</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">acks</span><span class="p">[</span><span class="nx">f</span><span class="p">.</span><span class="nx">id</span><span class="p">]</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="nx">e</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">slice</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="nx">e</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">)}</span><span class="nx">f</span><span class="p">.</span><span class="nx">args</span><span class="o">=</span><span class="nx">e</span><span class="p">;</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">packet</span><span class="p">(</span><span class="nx">f</span><span class="p">)};</span><span class="nx">d</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">disconnect</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">name</span><span class="o">===</span><span class="s2">&quot;&quot;</span><span class="p">)</span><span class="k">this</span><span class="p">.</span><span class="nx">socket</span><span class="p">.</span><span class="nx">disconnect</span><span class="p">();</span><span class="k">else</span><span class="p">{</span><span class="k">this</span><span class="p">.</span><span class="nx">packet</span><span class="p">({</span><span class="nx">type</span><span class="o">:</span><span class="s2">&quot;disconnect&quot;</span><span class="p">});</span><span class="k">this</span><span class="p">.</span><span class="nx">$emit</span><span class="p">(</span><span class="s2">&quot;disconnect&quot;</span><span class="p">)}</span><span class="k">return</span> <span class="k">this</span><span class="p">};</span></div><div class='line' id='LC40'><span class="nx">d</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">onPacket</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">h</span><span class="p">){</span><span class="kd">function</span> <span class="nx">e</span><span class="p">(){</span><span class="nx">a</span><span class="p">.</span><span class="nx">packet</span><span class="p">({</span><span class="nx">type</span><span class="o">:</span><span class="s2">&quot;ack&quot;</span><span class="p">,</span><span class="nx">args</span><span class="o">:</span><span class="nx">b</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">toArray</span><span class="p">(</span><span class="nx">arguments</span><span class="p">),</span><span class="nx">ackId</span><span class="o">:</span><span class="nx">h</span><span class="p">.</span><span class="nx">id</span><span class="p">})}</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">;</span><span class="k">switch</span><span class="p">(</span><span class="nx">h</span><span class="p">.</span><span class="nx">type</span><span class="p">){</span><span class="k">case</span> <span class="s2">&quot;connect&quot;</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">$emit</span><span class="p">(</span><span class="s2">&quot;connect&quot;</span><span class="p">);</span><span class="k">break</span><span class="p">;</span><span class="k">case</span> <span class="s2">&quot;disconnect&quot;</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">name</span><span class="o">===</span><span class="s2">&quot;&quot;</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">socket</span><span class="p">.</span><span class="nx">onDisconnect</span><span class="p">(</span><span class="nx">h</span><span class="p">.</span><span class="nx">reason</span><span class="o">||</span><span class="s2">&quot;booted&quot;</span><span class="p">)</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">$emit</span><span class="p">(</span><span class="s2">&quot;disconnect&quot;</span><span class="p">,</span><span class="nx">h</span><span class="p">.</span><span class="nx">reason</span><span class="p">);</span><span class="k">break</span><span class="p">;</span><span class="k">case</span> <span class="s2">&quot;message&quot;</span><span class="o">:</span><span class="k">case</span> <span class="s2">&quot;json&quot;</span><span class="o">:</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="p">[</span><span class="s2">&quot;message&quot;</span><span class="p">,</span><span class="nx">h</span><span class="p">.</span><span class="nx">data</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="nx">h</span><span class="p">.</span><span class="nx">ack</span><span class="o">==</span><span class="s2">&quot;data&quot;</span><span class="p">)</span><span class="nx">f</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">e</span><span class="p">);</span><span class="k">else</span> <span class="nx">h</span><span class="p">.</span><span class="nx">ack</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">packet</span><span class="p">({</span><span class="nx">type</span><span class="o">:</span><span class="s2">&quot;ack&quot;</span><span class="p">,</span><span class="nx">ackId</span><span class="o">:</span><span class="nx">h</span><span class="p">.</span><span class="nx">id</span><span class="p">});</span><span class="k">this</span><span class="p">.</span><span class="nx">$emit</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">f</span><span class="p">);</span><span class="k">break</span><span class="p">;</span><span class="k">case</span> <span class="s2">&quot;event&quot;</span><span class="o">:</span><span class="nx">f</span><span class="o">=</span><span class="p">[</span><span class="nx">h</span><span class="p">.</span><span class="nx">name</span><span class="p">].</span><span class="nx">concat</span><span class="p">(</span><span class="nx">h</span><span class="p">.</span><span class="nx">args</span><span class="p">);</span><span class="nx">h</span><span class="p">.</span><span class="nx">ack</span><span class="o">==</span></div><div class='line' id='LC41'><span class="s2">&quot;data&quot;</span><span class="o">&amp;&amp;</span><span class="nx">f</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">e</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">$emit</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">f</span><span class="p">);</span><span class="k">break</span><span class="p">;</span><span class="k">case</span> <span class="s2">&quot;ack&quot;</span><span class="o">:</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">acks</span><span class="p">[</span><span class="nx">h</span><span class="p">.</span><span class="nx">ackId</span><span class="p">]){</span><span class="k">this</span><span class="p">.</span><span class="nx">acks</span><span class="p">[</span><span class="nx">h</span><span class="p">.</span><span class="nx">ackId</span><span class="p">].</span><span class="nx">apply</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">h</span><span class="p">.</span><span class="nx">args</span><span class="p">);</span><span class="k">delete</span> <span class="k">this</span><span class="p">.</span><span class="nx">acks</span><span class="p">[</span><span class="nx">h</span><span class="p">.</span><span class="nx">ackId</span><span class="p">]}</span><span class="k">break</span><span class="p">;</span><span class="k">case</span> <span class="s2">&quot;error&quot;</span><span class="o">:</span><span class="k">if</span><span class="p">(</span><span class="nx">h</span><span class="p">.</span><span class="nx">advice</span><span class="p">)</span><span class="k">this</span><span class="p">.</span><span class="nx">socket</span><span class="p">.</span><span class="nx">onError</span><span class="p">(</span><span class="nx">h</span><span class="p">);</span><span class="k">else</span> <span class="nx">h</span><span class="p">.</span><span class="nx">reason</span><span class="o">==</span><span class="s2">&quot;unauthorized&quot;</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">$emit</span><span class="p">(</span><span class="s2">&quot;connect_failed&quot;</span><span class="p">,</span><span class="nx">h</span><span class="p">.</span><span class="nx">reason</span><span class="p">)</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">$emit</span><span class="p">(</span><span class="s2">&quot;error&quot;</span><span class="p">,</span><span class="nx">h</span><span class="p">.</span><span class="nx">reason</span><span class="p">);</span><span class="k">break</span><span class="p">}};</span><span class="nx">c</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">send</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">namespace</span><span class="p">.</span><span class="nx">flags</span><span class="p">[</span><span class="k">this</span><span class="p">.</span><span class="nx">name</span><span class="p">]</span><span class="o">=</span><span class="kc">true</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">namespace</span><span class="p">.</span><span class="nx">send</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">namespace</span><span class="p">,</span><span class="nx">arguments</span><span class="p">)};</span><span class="nx">c</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">emit</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">namespace</span><span class="p">.</span><span class="nx">flags</span><span class="p">[</span><span class="k">this</span><span class="p">.</span><span class="nx">name</span><span class="p">]</span><span class="o">=</span><span class="kc">true</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">namespace</span><span class="p">.</span><span class="nx">emit</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">namespace</span><span class="p">,</span></div><div class='line' id='LC42'><span class="nx">arguments</span><span class="p">)}})(</span><span class="s2">&quot;undefined&quot;</span><span class="o">!=</span><span class="k">typeof</span> <span class="nx">io</span><span class="o">?</span><span class="nx">io</span><span class="o">:</span><span class="nx">module</span><span class="p">.</span><span class="nx">exports</span><span class="p">,</span><span class="s2">&quot;undefined&quot;</span><span class="o">!=</span><span class="k">typeof</span> <span class="nx">io</span><span class="o">?</span><span class="nx">io</span><span class="o">:</span><span class="nx">module</span><span class="p">.</span><span class="nx">parent</span><span class="p">.</span><span class="nx">exports</span><span class="p">);</span></div><div class='line' id='LC43'><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">m</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">function</span> <span class="nx">d</span><span class="p">(){</span><span class="nx">b</span><span class="p">.</span><span class="nx">Transport</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">arguments</span><span class="p">)}</span><span class="nx">m</span><span class="p">.</span><span class="nx">websocket</span><span class="o">=</span><span class="nx">d</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">inherit</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">Transport</span><span class="p">);</span><span class="nx">d</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">name</span><span class="o">=</span><span class="s2">&quot;websocket&quot;</span><span class="p">;</span><span class="nx">d</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">open</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">query</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">socket</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">query</span><span class="p">),</span><span class="nx">h</span><span class="o">=</span><span class="k">this</span><span class="p">,</span><span class="nx">e</span><span class="p">;</span><span class="nx">e</span><span class="o">||</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="nb">window</span><span class="p">.</span><span class="nx">MozWebSocket</span><span class="o">||</span><span class="nb">window</span><span class="p">.</span><span class="nx">WebSocket</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">websocket</span><span class="o">=</span><span class="k">new</span> <span class="nx">e</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">prepareUrl</span><span class="p">()</span><span class="o">+</span><span class="nx">c</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">websocket</span><span class="p">.</span><span class="nx">onopen</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="nx">h</span><span class="p">.</span><span class="nx">onOpen</span><span class="p">();</span><span class="nx">h</span><span class="p">.</span><span class="nx">socket</span><span class="p">.</span><span class="nx">setBuffer</span><span class="p">(</span><span class="kc">false</span><span class="p">)};</span><span class="k">this</span><span class="p">.</span><span class="nx">websocket</span><span class="p">.</span><span class="nx">onmessage</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">h</span><span class="p">.</span><span class="nx">onData</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">data</span><span class="p">)};</span><span class="k">this</span><span class="p">.</span><span class="nx">websocket</span><span class="p">.</span><span class="nx">onclose</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="nx">h</span><span class="p">.</span><span class="nx">onClose</span><span class="p">();</span><span class="nx">h</span><span class="p">.</span><span class="nx">socket</span><span class="p">.</span><span class="nx">setBuffer</span><span class="p">(</span><span class="kc">true</span><span class="p">)};</span></div><div class='line' id='LC44'><span class="k">this</span><span class="p">.</span><span class="nx">websocket</span><span class="p">.</span><span class="nx">onerror</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">h</span><span class="p">.</span><span class="nx">onError</span><span class="p">(</span><span class="nx">a</span><span class="p">)};</span><span class="k">return</span> <span class="k">this</span><span class="p">};</span><span class="nx">d</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">send</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">c</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">websocket</span><span class="p">.</span><span class="nx">send</span><span class="p">(</span><span class="nx">c</span><span class="p">);</span><span class="k">return</span> <span class="k">this</span><span class="p">};</span><span class="nx">d</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">payload</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">c</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">h</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">h</span><span class="o">&lt;</span><span class="nx">e</span><span class="p">;</span><span class="nx">h</span><span class="o">++</span><span class="p">)</span><span class="k">this</span><span class="p">.</span><span class="nx">packet</span><span class="p">(</span><span class="nx">c</span><span class="p">[</span><span class="nx">h</span><span class="p">]);</span><span class="k">return</span> <span class="k">this</span><span class="p">};</span><span class="nx">d</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">close</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">websocket</span><span class="p">.</span><span class="nx">close</span><span class="p">();</span><span class="k">return</span> <span class="k">this</span><span class="p">};</span><span class="nx">d</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">onError</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">c</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">socket</span><span class="p">.</span><span class="nx">onError</span><span class="p">(</span><span class="nx">c</span><span class="p">)};</span><span class="nx">d</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">scheme</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">socket</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">secure</span><span class="o">?</span><span class="s2">&quot;wss&quot;</span><span class="o">:</span><span class="s2">&quot;ws&quot;</span><span class="p">};</span><span class="nx">d</span><span class="p">.</span><span class="nx">check</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="s2">&quot;WebSocket&quot;</span><span class="k">in</span> <span class="nb">window</span><span class="o">&amp;&amp;!</span><span class="p">(</span><span class="s2">&quot;__addTask&quot;</span><span class="k">in</span> <span class="nx">WebSocket</span><span class="p">)</span><span class="o">||</span><span class="s2">&quot;MozWebSocket&quot;</span><span class="k">in</span></div><div class='line' id='LC45'><span class="nb">window</span><span class="p">};</span><span class="nx">d</span><span class="p">.</span><span class="nx">xdomainCheck</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="kc">true</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">transports</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="s2">&quot;websocket&quot;</span><span class="p">)})(</span><span class="s2">&quot;undefined&quot;</span><span class="o">!=</span><span class="k">typeof</span> <span class="nx">io</span><span class="o">?</span><span class="nx">io</span><span class="p">.</span><span class="nx">Transport</span><span class="o">:</span><span class="nx">module</span><span class="p">.</span><span class="nx">exports</span><span class="p">,</span><span class="s2">&quot;undefined&quot;</span><span class="o">!=</span><span class="k">typeof</span> <span class="nx">io</span><span class="o">?</span><span class="nx">io</span><span class="o">:</span><span class="nx">module</span><span class="p">.</span><span class="nx">parent</span><span class="p">.</span><span class="nx">exports</span><span class="p">);</span></div><div class='line' id='LC46'><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">m</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">function</span> <span class="nx">d</span><span class="p">(){</span><span class="nx">b</span><span class="p">.</span><span class="nx">Transport</span><span class="p">.</span><span class="nx">websocket</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">arguments</span><span class="p">)}</span><span class="nx">m</span><span class="p">.</span><span class="nx">flashsocket</span><span class="o">=</span><span class="nx">d</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">inherit</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">Transport</span><span class="p">.</span><span class="nx">websocket</span><span class="p">);</span><span class="nx">d</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">name</span><span class="o">=</span><span class="s2">&quot;flashsocket&quot;</span><span class="p">;</span><span class="nx">d</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">open</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="nx">arguments</span><span class="p">;</span><span class="nx">WebSocket</span><span class="p">.</span><span class="nx">__addTask</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">b</span><span class="p">.</span><span class="nx">Transport</span><span class="p">.</span><span class="nx">websocket</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">open</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">h</span><span class="p">)});</span><span class="k">return</span> <span class="k">this</span><span class="p">};</span><span class="nx">d</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">send</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="nx">arguments</span><span class="p">;</span><span class="nx">WebSocket</span><span class="p">.</span><span class="nx">__addTask</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">b</span><span class="p">.</span><span class="nx">Transport</span><span class="p">.</span><span class="nx">websocket</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">send</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">h</span><span class="p">)});</span><span class="k">return</span> <span class="k">this</span><span class="p">};</span><span class="nx">d</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">close</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="nx">WebSocket</span><span class="p">.</span><span class="nx">__tasks</span><span class="p">.</span><span class="nx">length</span><span class="o">=</span></div><div class='line' id='LC47'><span class="mi">0</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">Transport</span><span class="p">.</span><span class="nx">websocket</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">close</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">);</span><span class="k">return</span> <span class="k">this</span><span class="p">};</span><span class="nx">d</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">ready</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">h</span><span class="p">){</span><span class="kd">function</span> <span class="nx">e</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">options</span><span class="p">,</span><span class="nx">j</span><span class="o">=</span><span class="nx">f</span><span class="p">[</span><span class="s2">&quot;flash policy port&quot;</span><span class="p">],</span><span class="nx">k</span><span class="o">=</span><span class="p">[</span><span class="s2">&quot;http&quot;</span><span class="o">+</span><span class="p">(</span><span class="nx">f</span><span class="p">.</span><span class="nx">secure</span><span class="o">?</span><span class="s2">&quot;s&quot;</span><span class="o">:</span><span class="s2">&quot;&quot;</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot;:/&quot;</span><span class="p">,</span><span class="nx">f</span><span class="p">.</span><span class="nx">host</span><span class="o">+</span><span class="s2">&quot;:&quot;</span><span class="o">+</span><span class="nx">f</span><span class="p">.</span><span class="nx">port</span><span class="p">,</span><span class="nx">f</span><span class="p">.</span><span class="nx">resource</span><span class="p">,</span><span class="s2">&quot;static/flashsocket&quot;</span><span class="p">,</span><span class="s2">&quot;WebSocketMain&quot;</span><span class="o">+</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">isXDomain</span><span class="p">()</span><span class="o">?</span><span class="s2">&quot;Insecure&quot;</span><span class="o">:</span><span class="s2">&quot;&quot;</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot;.swf&quot;</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">d</span><span class="p">.</span><span class="nx">loaded</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">WEB_SOCKET_SWF_LOCATION</span><span class="o">===</span><span class="s2">&quot;undefined&quot;</span><span class="p">)</span><span class="nx">WEB_SOCKET_SWF_LOCATION</span><span class="o">=</span><span class="nx">k</span><span class="p">.</span><span class="nx">join</span><span class="p">(</span><span class="s2">&quot;/&quot;</span><span class="p">);</span><span class="nx">j</span><span class="o">!==</span><span class="mi">843</span><span class="o">&amp;&amp;</span><span class="nx">WebSocket</span><span class="p">.</span><span class="nx">loadFlashPolicyFile</span><span class="p">(</span><span class="s2">&quot;xmlsocket://&quot;</span><span class="o">+</span><span class="nx">f</span><span class="p">.</span><span class="nx">host</span><span class="o">+</span><span class="s2">&quot;:&quot;</span><span class="o">+</span><span class="nx">j</span><span class="p">);</span><span class="nx">WebSocket</span><span class="p">.</span><span class="nx">__initialize</span><span class="p">();</span><span class="nx">d</span><span class="p">.</span><span class="nx">loaded</span><span class="o">=</span><span class="kc">true</span><span class="p">}</span><span class="nx">h</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">a</span><span class="p">)}</span></div><div class='line' id='LC48'><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nb">document</span><span class="p">.</span><span class="nx">body</span><span class="p">)</span><span class="k">return</span> <span class="nx">e</span><span class="p">();</span><span class="nx">b</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">load</span><span class="p">(</span><span class="nx">e</span><span class="p">)};</span><span class="nx">d</span><span class="p">.</span><span class="nx">check</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">WebSocket</span><span class="o">==</span><span class="s2">&quot;undefined&quot;</span><span class="o">||!</span><span class="p">(</span><span class="s2">&quot;__initialize&quot;</span><span class="k">in</span> <span class="nx">WebSocket</span><span class="p">)</span><span class="o">||!</span><span class="nx">swfobject</span><span class="p">)</span><span class="k">return</span> <span class="kc">false</span><span class="p">;</span><span class="k">return</span> <span class="nx">swfobject</span><span class="p">.</span><span class="nx">getFlashPlayerVersion</span><span class="p">().</span><span class="nx">major</span><span class="o">&gt;=</span><span class="mi">10</span><span class="p">};</span><span class="nx">d</span><span class="p">.</span><span class="nx">xdomainCheck</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="kc">true</span><span class="p">};</span><span class="k">if</span><span class="p">(</span><span class="k">typeof</span> <span class="nb">window</span><span class="o">!=</span><span class="s2">&quot;undefined&quot;</span><span class="p">)</span><span class="nx">WEB_SOCKET_DISABLE_AUTO_INITIALIZATION</span><span class="o">=</span><span class="kc">true</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">transports</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="s2">&quot;flashsocket&quot;</span><span class="p">)})(</span><span class="s2">&quot;undefined&quot;</span><span class="o">!=</span><span class="k">typeof</span> <span class="nx">io</span><span class="o">?</span><span class="nx">io</span><span class="p">.</span><span class="nx">Transport</span><span class="o">:</span><span class="nx">module</span><span class="p">.</span><span class="nx">exports</span><span class="p">,</span><span class="s2">&quot;undefined&quot;</span><span class="o">!=</span><span class="k">typeof</span> <span class="nx">io</span><span class="o">?</span><span class="nx">io</span><span class="o">:</span><span class="nx">module</span><span class="p">.</span><span class="nx">parent</span><span class="p">.</span><span class="nx">exports</span><span class="p">);</span></div><div class='line' id='LC49'><span class="kd">var</span> <span class="nx">swfobject</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">function</span> <span class="nx">m</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">M</span><span class="p">){</span><span class="k">try</span><span class="p">{</span><span class="kd">var</span> <span class="nx">g</span><span class="o">=</span><span class="nx">u</span><span class="p">.</span><span class="nx">getElementsByTagName</span><span class="p">(</span><span class="s2">&quot;body&quot;</span><span class="p">)[</span><span class="mi">0</span><span class="p">].</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">u</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;span&quot;</span><span class="p">));</span><span class="nx">g</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">.</span><span class="nx">removeChild</span><span class="p">(</span><span class="nx">g</span><span class="p">)}</span><span class="k">catch</span><span class="p">(</span><span class="nx">i</span><span class="p">){</span><span class="k">return</span><span class="p">}</span><span class="nx">M</span><span class="o">=</span><span class="kc">true</span><span class="p">;</span><span class="nx">g</span><span class="o">=</span><span class="nx">Q</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">l</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">l</span><span class="o">&lt;</span><span class="nx">g</span><span class="p">;</span><span class="nx">l</span><span class="o">++</span><span class="p">)</span><span class="nx">Q</span><span class="p">[</span><span class="nx">l</span><span class="p">]()}}</span><span class="kd">function</span> <span class="nx">b</span><span class="p">(</span><span class="nx">g</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">M</span><span class="p">)</span><span class="nx">g</span><span class="p">();</span><span class="k">else</span> <span class="nx">Q</span><span class="p">[</span><span class="nx">Q</span><span class="p">.</span><span class="nx">length</span><span class="p">]</span><span class="o">=</span><span class="nx">g</span><span class="p">}</span><span class="kd">function</span> <span class="nx">d</span><span class="p">(</span><span class="nx">g</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">F</span><span class="p">.</span><span class="nx">addEventListener</span><span class="o">!=</span><span class="nx">w</span><span class="p">)</span><span class="nx">F</span><span class="p">.</span><span class="nx">addEventListener</span><span class="p">(</span><span class="s2">&quot;load&quot;</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="kc">false</span><span class="p">);</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">u</span><span class="p">.</span><span class="nx">addEventListener</span><span class="o">!=</span><span class="nx">w</span><span class="p">)</span><span class="nx">u</span><span class="p">.</span><span class="nx">addEventListener</span><span class="p">(</span><span class="s2">&quot;load&quot;</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="kc">false</span><span class="p">);</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">F</span><span class="p">.</span><span class="nx">attachEvent</span><span class="o">!=</span><span class="nx">w</span><span class="p">)</span><span class="nx">z</span><span class="p">(</span><span class="nx">F</span><span class="p">,</span><span class="s2">&quot;onload&quot;</span><span class="p">,</span><span class="nx">g</span><span class="p">);</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">F</span><span class="p">.</span><span class="nx">onload</span><span class="o">==</span><span class="s2">&quot;function&quot;</span><span class="p">){</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span></div><div class='line' id='LC50'><span class="nx">F</span><span class="p">.</span><span class="nx">onload</span><span class="p">;</span><span class="nx">F</span><span class="p">.</span><span class="nx">onload</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="nx">i</span><span class="p">();</span><span class="nx">g</span><span class="p">()}}</span><span class="k">else</span> <span class="nx">F</span><span class="p">.</span><span class="nx">onload</span><span class="o">=</span><span class="nx">g</span><span class="p">}</span><span class="kd">function</span> <span class="nx">c</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">g</span><span class="o">=</span><span class="nx">u</span><span class="p">.</span><span class="nx">getElementsByTagName</span><span class="p">(</span><span class="s2">&quot;body&quot;</span><span class="p">)[</span><span class="mi">0</span><span class="p">],</span><span class="nx">i</span><span class="o">=</span><span class="nx">u</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="nx">A</span><span class="p">);</span><span class="nx">i</span><span class="p">.</span><span class="nx">setAttribute</span><span class="p">(</span><span class="s2">&quot;type&quot;</span><span class="p">,</span><span class="nx">y</span><span class="p">);</span><span class="kd">var</span> <span class="nx">l</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">i</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">l</span><span class="p">){</span><span class="kd">var</span> <span class="nx">q</span><span class="o">=</span><span class="mi">0</span><span class="p">;(</span><span class="kd">function</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">l</span><span class="p">.</span><span class="nx">GetVariable</span><span class="o">!=</span><span class="nx">w</span><span class="p">){</span><span class="kd">var</span> <span class="nx">r</span><span class="o">=</span><span class="nx">l</span><span class="p">.</span><span class="nx">GetVariable</span><span class="p">(</span><span class="s2">&quot;$version&quot;</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">r</span><span class="p">){</span><span class="nx">r</span><span class="o">=</span><span class="nx">r</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot; &quot;</span><span class="p">)[</span><span class="mi">1</span><span class="p">].</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot;,&quot;</span><span class="p">);</span><span class="nx">s</span><span class="p">.</span><span class="nx">pv</span><span class="o">=</span><span class="p">[</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">r</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="mi">10</span><span class="p">),</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">r</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="mi">10</span><span class="p">),</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">r</span><span class="p">[</span><span class="mi">2</span><span class="p">],</span><span class="mi">10</span><span class="p">)]}}</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">q</span><span class="o">&lt;</span><span class="mi">10</span><span class="p">){</span><span class="nx">q</span><span class="o">++</span><span class="p">;</span><span class="nx">setTimeout</span><span class="p">(</span><span class="nx">arguments</span><span class="p">.</span><span class="nx">callee</span><span class="p">,</span><span class="mi">10</span><span class="p">);</span><span class="k">return</span><span class="p">}</span><span class="nx">g</span><span class="p">.</span><span class="nx">removeChild</span><span class="p">(</span><span class="nx">i</span><span class="p">);</span><span class="nx">l</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="nx">h</span><span class="p">()})()}</span><span class="k">else</span> <span class="nx">h</span><span class="p">()}</span><span class="kd">function</span> <span class="nx">h</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">g</span><span class="o">=</span><span class="nx">J</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">g</span><span class="o">&gt;</span><span class="mi">0</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span></div><div class='line' id='LC51'><span class="mi">0</span><span class="p">;</span><span class="nx">i</span><span class="o">&lt;</span><span class="nx">g</span><span class="p">;</span><span class="nx">i</span><span class="o">++</span><span class="p">){</span><span class="kd">var</span> <span class="nx">l</span><span class="o">=</span><span class="nx">J</span><span class="p">[</span><span class="nx">i</span><span class="p">].</span><span class="nx">id</span><span class="p">,</span><span class="nx">q</span><span class="o">=</span><span class="nx">J</span><span class="p">[</span><span class="nx">i</span><span class="p">].</span><span class="nx">callbackFn</span><span class="p">,</span><span class="nx">r</span><span class="o">=</span><span class="p">{</span><span class="nx">success</span><span class="o">:</span><span class="kc">false</span><span class="p">,</span><span class="nx">id</span><span class="o">:</span><span class="nx">l</span><span class="p">};</span><span class="k">if</span><span class="p">(</span><span class="nx">s</span><span class="p">.</span><span class="nx">pv</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">&gt;</span><span class="mi">0</span><span class="p">){</span><span class="kd">var</span> <span class="nx">x</span><span class="o">=</span><span class="nx">n</span><span class="p">(</span><span class="nx">l</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">x</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">t</span><span class="p">(</span><span class="nx">J</span><span class="p">[</span><span class="nx">i</span><span class="p">].</span><span class="nx">swfVersion</span><span class="p">)</span><span class="o">&amp;&amp;!</span><span class="p">(</span><span class="nx">s</span><span class="p">.</span><span class="nx">wk</span><span class="o">&amp;&amp;</span><span class="nx">s</span><span class="p">.</span><span class="nx">wk</span><span class="o">&lt;</span><span class="mi">312</span><span class="p">)){</span><span class="nx">C</span><span class="p">(</span><span class="nx">l</span><span class="p">,</span><span class="kc">true</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">q</span><span class="p">){</span><span class="nx">r</span><span class="p">.</span><span class="nx">success</span><span class="o">=</span><span class="kc">true</span><span class="p">;</span><span class="nx">r</span><span class="p">.</span><span class="nx">ref</span><span class="o">=</span><span class="nx">e</span><span class="p">(</span><span class="nx">l</span><span class="p">);</span><span class="nx">q</span><span class="p">(</span><span class="nx">r</span><span class="p">)}}</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">J</span><span class="p">[</span><span class="nx">i</span><span class="p">].</span><span class="nx">expressInstall</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">()){</span><span class="nx">r</span><span class="o">=</span><span class="p">{};</span><span class="nx">r</span><span class="p">.</span><span class="nx">data</span><span class="o">=</span><span class="nx">J</span><span class="p">[</span><span class="nx">i</span><span class="p">].</span><span class="nx">expressInstall</span><span class="p">;</span><span class="nx">r</span><span class="p">.</span><span class="nx">width</span><span class="o">=</span><span class="nx">x</span><span class="p">.</span><span class="nx">getAttribute</span><span class="p">(</span><span class="s2">&quot;width&quot;</span><span class="p">)</span><span class="o">||</span><span class="s2">&quot;0&quot;</span><span class="p">;</span><span class="nx">r</span><span class="p">.</span><span class="nx">height</span><span class="o">=</span><span class="nx">x</span><span class="p">.</span><span class="nx">getAttribute</span><span class="p">(</span><span class="s2">&quot;height&quot;</span><span class="p">)</span><span class="o">||</span><span class="s2">&quot;0&quot;</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">x</span><span class="p">.</span><span class="nx">getAttribute</span><span class="p">(</span><span class="s2">&quot;class&quot;</span><span class="p">))</span><span class="nx">r</span><span class="p">.</span><span class="nx">styleclass</span><span class="o">=</span><span class="nx">x</span><span class="p">.</span><span class="nx">getAttribute</span><span class="p">(</span><span class="s2">&quot;class&quot;</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">x</span><span class="p">.</span><span class="nx">getAttribute</span><span class="p">(</span><span class="s2">&quot;align&quot;</span><span class="p">))</span><span class="nx">r</span><span class="p">.</span><span class="nx">align</span><span class="o">=</span><span class="nx">x</span><span class="p">.</span><span class="nx">getAttribute</span><span class="p">(</span><span class="s2">&quot;align&quot;</span><span class="p">);</span><span class="kd">var</span> <span class="nx">v</span><span class="o">=</span><span class="p">{};</span><span class="nx">x</span><span class="o">=</span><span class="nx">x</span><span class="p">.</span><span class="nx">getElementsByTagName</span><span class="p">(</span><span class="s2">&quot;param&quot;</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">D</span><span class="o">=</span></div><div class='line' id='LC52'><span class="nx">x</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">E</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">E</span><span class="o">&lt;</span><span class="nx">D</span><span class="p">;</span><span class="nx">E</span><span class="o">++</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">x</span><span class="p">[</span><span class="nx">E</span><span class="p">].</span><span class="nx">getAttribute</span><span class="p">(</span><span class="s2">&quot;name&quot;</span><span class="p">).</span><span class="nx">toLowerCase</span><span class="p">()</span><span class="o">!=</span><span class="s2">&quot;movie&quot;</span><span class="p">)</span><span class="nx">v</span><span class="p">[</span><span class="nx">x</span><span class="p">[</span><span class="nx">E</span><span class="p">].</span><span class="nx">getAttribute</span><span class="p">(</span><span class="s2">&quot;name&quot;</span><span class="p">)]</span><span class="o">=</span><span class="nx">x</span><span class="p">[</span><span class="nx">E</span><span class="p">].</span><span class="nx">getAttribute</span><span class="p">(</span><span class="s2">&quot;value&quot;</span><span class="p">);</span><span class="nx">f</span><span class="p">(</span><span class="nx">r</span><span class="p">,</span><span class="nx">v</span><span class="p">,</span><span class="nx">l</span><span class="p">,</span><span class="nx">q</span><span class="p">)}</span><span class="k">else</span><span class="p">{</span><span class="nx">j</span><span class="p">(</span><span class="nx">x</span><span class="p">);</span><span class="nx">q</span><span class="o">&amp;&amp;</span><span class="nx">q</span><span class="p">(</span><span class="nx">r</span><span class="p">)}}</span><span class="k">else</span><span class="p">{</span><span class="nx">C</span><span class="p">(</span><span class="nx">l</span><span class="p">,</span><span class="kc">true</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">q</span><span class="p">){</span><span class="k">if</span><span class="p">((</span><span class="nx">l</span><span class="o">=</span><span class="nx">e</span><span class="p">(</span><span class="nx">l</span><span class="p">))</span><span class="o">&amp;&amp;</span><span class="k">typeof</span> <span class="nx">l</span><span class="p">.</span><span class="nx">SetVariable</span><span class="o">!=</span><span class="nx">w</span><span class="p">){</span><span class="nx">r</span><span class="p">.</span><span class="nx">success</span><span class="o">=</span><span class="kc">true</span><span class="p">;</span><span class="nx">r</span><span class="p">.</span><span class="nx">ref</span><span class="o">=</span><span class="nx">l</span><span class="p">}</span><span class="nx">q</span><span class="p">(</span><span class="nx">r</span><span class="p">)}}}}</span><span class="kd">function</span> <span class="nx">e</span><span class="p">(</span><span class="nx">g</span><span class="p">){</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="k">if</span><span class="p">((</span><span class="nx">g</span><span class="o">=</span><span class="nx">n</span><span class="p">(</span><span class="nx">g</span><span class="p">))</span><span class="o">&amp;&amp;</span><span class="nx">g</span><span class="p">.</span><span class="nx">nodeName</span><span class="o">==</span><span class="s2">&quot;OBJECT&quot;</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">g</span><span class="p">.</span><span class="nx">SetVariable</span><span class="o">!=</span><span class="nx">w</span><span class="p">)</span><span class="nx">i</span><span class="o">=</span><span class="nx">g</span><span class="p">;</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">g</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">getElementsByTagName</span><span class="p">(</span><span class="nx">A</span><span class="p">)[</span><span class="mi">0</span><span class="p">])</span><span class="nx">i</span><span class="o">=</span><span class="nx">g</span><span class="p">;</span><span class="k">return</span> <span class="nx">i</span><span class="p">}</span><span class="kd">function</span> <span class="nx">a</span><span class="p">(){</span><span class="k">return</span><span class="o">!</span><span class="nx">R</span><span class="o">&amp;&amp;</span><span class="nx">t</span><span class="p">(</span><span class="s2">&quot;6.0.65&quot;</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">s</span><span class="p">.</span><span class="nx">win</span><span class="o">||</span><span class="nx">s</span><span class="p">.</span><span class="nx">mac</span><span class="p">)</span><span class="o">&amp;&amp;!</span><span class="p">(</span><span class="nx">s</span><span class="p">.</span><span class="nx">wk</span><span class="o">&amp;&amp;</span><span class="nx">s</span><span class="p">.</span><span class="nx">wk</span><span class="o">&lt;</span><span class="mi">312</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">f</span><span class="p">(</span><span class="nx">g</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">l</span><span class="p">,</span><span class="nx">q</span><span class="p">){</span><span class="nx">R</span><span class="o">=</span><span class="kc">true</span><span class="p">;</span><span class="nx">X</span><span class="o">=</span><span class="nx">q</span><span class="o">||</span><span class="kc">null</span><span class="p">;</span><span class="nx">Z</span><span class="o">=</span><span class="p">{</span><span class="nx">success</span><span class="o">:</span><span class="kc">false</span><span class="p">,</span></div><div class='line' id='LC53'><span class="nx">id</span><span class="o">:</span><span class="nx">l</span><span class="p">};</span><span class="kd">var</span> <span class="nx">r</span><span class="o">=</span><span class="nx">n</span><span class="p">(</span><span class="nx">l</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">r</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">r</span><span class="p">.</span><span class="nx">nodeName</span><span class="o">==</span><span class="s2">&quot;OBJECT&quot;</span><span class="p">){</span><span class="nx">O</span><span class="o">=</span><span class="nx">k</span><span class="p">(</span><span class="nx">r</span><span class="p">);</span><span class="nx">S</span><span class="o">=</span><span class="kc">null</span><span class="p">}</span><span class="k">else</span><span class="p">{</span><span class="nx">O</span><span class="o">=</span><span class="nx">r</span><span class="p">;</span><span class="nx">S</span><span class="o">=</span><span class="nx">l</span><span class="p">}</span><span class="nx">g</span><span class="p">.</span><span class="nx">id</span><span class="o">=</span><span class="nx">$</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">g</span><span class="p">.</span><span class="nx">width</span><span class="o">==</span><span class="nx">w</span><span class="o">||!</span><span class="sr">/%$/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">g</span><span class="p">.</span><span class="nx">width</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">g</span><span class="p">.</span><span class="nx">width</span><span class="p">,</span><span class="mi">10</span><span class="p">)</span><span class="o">&lt;</span><span class="mi">310</span><span class="p">)</span><span class="nx">g</span><span class="p">.</span><span class="nx">width</span><span class="o">=</span><span class="s2">&quot;310&quot;</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">g</span><span class="p">.</span><span class="nx">height</span><span class="o">==</span><span class="nx">w</span><span class="o">||!</span><span class="sr">/%$/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">g</span><span class="p">.</span><span class="nx">height</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">g</span><span class="p">.</span><span class="nx">height</span><span class="p">,</span><span class="mi">10</span><span class="p">)</span><span class="o">&lt;</span><span class="mi">137</span><span class="p">)</span><span class="nx">g</span><span class="p">.</span><span class="nx">height</span><span class="o">=</span><span class="s2">&quot;137&quot;</span><span class="p">;</span><span class="nx">u</span><span class="p">.</span><span class="nx">title</span><span class="o">=</span><span class="nx">u</span><span class="p">.</span><span class="nx">title</span><span class="p">.</span><span class="nx">slice</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">47</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot; - Flash Player Installation&quot;</span><span class="p">;</span><span class="nx">q</span><span class="o">=</span><span class="nx">s</span><span class="p">.</span><span class="nx">ie</span><span class="o">&amp;&amp;</span><span class="nx">s</span><span class="p">.</span><span class="nx">win</span><span class="o">?</span><span class="s2">&quot;ActiveX&quot;</span><span class="o">:</span><span class="s2">&quot;PlugIn&quot;</span><span class="p">;</span><span class="nx">q</span><span class="o">=</span><span class="s2">&quot;MMredirectURL=&quot;</span><span class="o">+</span><span class="nx">F</span><span class="p">.</span><span class="nx">location</span><span class="p">.</span><span class="nx">toString</span><span class="p">().</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/&amp;/g</span><span class="p">,</span><span class="s2">&quot;%26&quot;</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot;&amp;MMplayerType=&quot;</span><span class="o">+</span><span class="nx">q</span><span class="o">+</span><span class="s2">&quot;&amp;MMdoctitle=&quot;</span><span class="o">+</span><span class="nx">u</span><span class="p">.</span><span class="nx">title</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">i</span><span class="p">.</span><span class="nx">flashvars</span><span class="o">!=</span><span class="nx">w</span><span class="p">)</span><span class="nx">i</span><span class="p">.</span><span class="nx">flashvars</span><span class="o">+=</span><span class="s2">&quot;&amp;&quot;</span><span class="o">+</span><span class="nx">q</span><span class="p">;</span><span class="k">else</span> <span class="nx">i</span><span class="p">.</span><span class="nx">flashvars</span><span class="o">=</span></div><div class='line' id='LC54'><span class="nx">q</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">s</span><span class="p">.</span><span class="nx">ie</span><span class="o">&amp;&amp;</span><span class="nx">s</span><span class="p">.</span><span class="nx">win</span><span class="o">&amp;&amp;</span><span class="nx">r</span><span class="p">.</span><span class="nx">readyState</span><span class="o">!=</span><span class="mi">4</span><span class="p">){</span><span class="nx">q</span><span class="o">=</span><span class="nx">u</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;div&quot;</span><span class="p">);</span><span class="nx">l</span><span class="o">+=</span><span class="s2">&quot;SWFObjectNew&quot;</span><span class="p">;</span><span class="nx">q</span><span class="p">.</span><span class="nx">setAttribute</span><span class="p">(</span><span class="s2">&quot;id&quot;</span><span class="p">,</span><span class="nx">l</span><span class="p">);</span><span class="nx">r</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">.</span><span class="nx">insertBefore</span><span class="p">(</span><span class="nx">q</span><span class="p">,</span><span class="nx">r</span><span class="p">);</span><span class="nx">r</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">display</span><span class="o">=</span><span class="s2">&quot;none&quot;</span><span class="p">;(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">r</span><span class="p">.</span><span class="nx">readyState</span><span class="o">==</span><span class="mi">4</span><span class="o">?</span><span class="nx">r</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">.</span><span class="nx">removeChild</span><span class="p">(</span><span class="nx">r</span><span class="p">)</span><span class="o">:</span><span class="nx">setTimeout</span><span class="p">(</span><span class="nx">arguments</span><span class="p">.</span><span class="nx">callee</span><span class="p">,</span><span class="mi">10</span><span class="p">)})()}</span><span class="nx">o</span><span class="p">(</span><span class="nx">g</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">l</span><span class="p">)}}</span><span class="kd">function</span> <span class="nx">j</span><span class="p">(</span><span class="nx">g</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">s</span><span class="p">.</span><span class="nx">ie</span><span class="o">&amp;&amp;</span><span class="nx">s</span><span class="p">.</span><span class="nx">win</span><span class="o">&amp;&amp;</span><span class="nx">g</span><span class="p">.</span><span class="nx">readyState</span><span class="o">!=</span><span class="mi">4</span><span class="p">){</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="nx">u</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;div&quot;</span><span class="p">);</span><span class="nx">g</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">.</span><span class="nx">insertBefore</span><span class="p">(</span><span class="nx">i</span><span class="p">,</span><span class="nx">g</span><span class="p">);</span><span class="nx">i</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">.</span><span class="nx">replaceChild</span><span class="p">(</span><span class="nx">k</span><span class="p">(</span><span class="nx">g</span><span class="p">),</span><span class="nx">i</span><span class="p">);</span><span class="nx">g</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">display</span><span class="o">=</span><span class="s2">&quot;none&quot;</span><span class="p">;(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">g</span><span class="p">.</span><span class="nx">readyState</span><span class="o">==</span><span class="mi">4</span><span class="o">?</span><span class="nx">g</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">.</span><span class="nx">removeChild</span><span class="p">(</span><span class="nx">g</span><span class="p">)</span><span class="o">:</span><span class="nx">setTimeout</span><span class="p">(</span><span class="nx">arguments</span><span class="p">.</span><span class="nx">callee</span><span class="p">,</span></div><div class='line' id='LC55'><span class="mi">10</span><span class="p">)})()}</span><span class="k">else</span> <span class="nx">g</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">.</span><span class="nx">replaceChild</span><span class="p">(</span><span class="nx">k</span><span class="p">(</span><span class="nx">g</span><span class="p">),</span><span class="nx">g</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">k</span><span class="p">(</span><span class="nx">g</span><span class="p">){</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="nx">u</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;div&quot;</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">s</span><span class="p">.</span><span class="nx">win</span><span class="o">&amp;&amp;</span><span class="nx">s</span><span class="p">.</span><span class="nx">ie</span><span class="p">)</span><span class="nx">i</span><span class="p">.</span><span class="nx">innerHTML</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">innerHTML</span><span class="p">;</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">g</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">getElementsByTagName</span><span class="p">(</span><span class="nx">A</span><span class="p">)[</span><span class="mi">0</span><span class="p">])</span><span class="k">if</span><span class="p">(</span><span class="nx">g</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">childNodes</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">l</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">q</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">q</span><span class="o">&lt;</span><span class="nx">l</span><span class="p">;</span><span class="nx">q</span><span class="o">++</span><span class="p">)</span><span class="o">!</span><span class="p">(</span><span class="nx">g</span><span class="p">[</span><span class="nx">q</span><span class="p">].</span><span class="nx">nodeType</span><span class="o">==</span><span class="mi">1</span><span class="o">&amp;&amp;</span><span class="nx">g</span><span class="p">[</span><span class="nx">q</span><span class="p">].</span><span class="nx">nodeName</span><span class="o">==</span><span class="s2">&quot;PARAM&quot;</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">g</span><span class="p">[</span><span class="nx">q</span><span class="p">].</span><span class="nx">nodeType</span><span class="o">!=</span><span class="mi">8</span><span class="o">&amp;&amp;</span><span class="nx">i</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">g</span><span class="p">[</span><span class="nx">q</span><span class="p">].</span><span class="nx">cloneNode</span><span class="p">(</span><span class="kc">true</span><span class="p">));</span><span class="k">return</span> <span class="nx">i</span><span class="p">}</span><span class="kd">function</span> <span class="nx">o</span><span class="p">(</span><span class="nx">g</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">l</span><span class="p">){</span><span class="kd">var</span> <span class="nx">q</span><span class="p">,</span><span class="nx">r</span><span class="o">=</span><span class="nx">n</span><span class="p">(</span><span class="nx">l</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">s</span><span class="p">.</span><span class="nx">wk</span><span class="o">&amp;&amp;</span><span class="nx">s</span><span class="p">.</span><span class="nx">wk</span><span class="o">&lt;</span><span class="mi">312</span><span class="p">)</span><span class="k">return</span> <span class="nx">q</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">r</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">g</span><span class="p">.</span><span class="nx">id</span><span class="o">==</span><span class="nx">w</span><span class="p">)</span><span class="nx">g</span><span class="p">.</span><span class="nx">id</span><span class="o">=</span><span class="nx">l</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">s</span><span class="p">.</span><span class="nx">ie</span><span class="o">&amp;&amp;</span><span class="nx">s</span><span class="p">.</span><span class="nx">win</span><span class="p">){</span><span class="kd">var</span> <span class="nx">x</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">v</span> <span class="k">in</span> <span class="nx">g</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">g</span><span class="p">[</span><span class="nx">v</span><span class="p">]</span><span class="o">!=</span><span class="nb">Object</span><span class="p">.</span><span class="nx">prototype</span><span class="p">[</span><span class="nx">v</span><span class="p">])</span><span class="k">if</span><span class="p">(</span><span class="nx">v</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">()</span><span class="o">==</span></div><div class='line' id='LC56'><span class="s2">&quot;data&quot;</span><span class="p">)</span><span class="nx">i</span><span class="p">.</span><span class="nx">movie</span><span class="o">=</span><span class="nx">g</span><span class="p">[</span><span class="nx">v</span><span class="p">];</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">v</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">()</span><span class="o">==</span><span class="s2">&quot;styleclass&quot;</span><span class="p">)</span><span class="nx">x</span><span class="o">+=</span><span class="s1">&#39; class=&quot;&#39;</span><span class="o">+</span><span class="nx">g</span><span class="p">[</span><span class="nx">v</span><span class="p">]</span><span class="o">+</span><span class="s1">&#39;&quot;&#39;</span><span class="p">;</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">v</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">()</span><span class="o">!=</span><span class="s2">&quot;classid&quot;</span><span class="p">)</span><span class="nx">x</span><span class="o">+=</span><span class="s2">&quot; &quot;</span><span class="o">+</span><span class="nx">v</span><span class="o">+</span><span class="s1">&#39;=&quot;&#39;</span><span class="o">+</span><span class="nx">g</span><span class="p">[</span><span class="nx">v</span><span class="p">]</span><span class="o">+</span><span class="s1">&#39;&quot;&#39;</span><span class="p">;</span><span class="nx">v</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">D</span> <span class="k">in</span> <span class="nx">i</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">i</span><span class="p">[</span><span class="nx">D</span><span class="p">]</span><span class="o">!=</span><span class="nb">Object</span><span class="p">.</span><span class="nx">prototype</span><span class="p">[</span><span class="nx">D</span><span class="p">])</span><span class="nx">v</span><span class="o">+=</span><span class="s1">&#39;&lt;param name=&quot;&#39;</span><span class="o">+</span><span class="nx">D</span><span class="o">+</span><span class="s1">&#39;&quot; value=&quot;&#39;</span><span class="o">+</span><span class="nx">i</span><span class="p">[</span><span class="nx">D</span><span class="p">]</span><span class="o">+</span><span class="s1">&#39;&quot; /&gt;&#39;</span><span class="p">;</span><span class="nx">r</span><span class="p">.</span><span class="nx">outerHTML</span><span class="o">=</span><span class="s1">&#39;&lt;object classid=&quot;clsid:D27CDB6E-AE6D-11cf-96B8-444553540000&quot;&#39;</span><span class="o">+</span><span class="nx">x</span><span class="o">+</span><span class="s2">&quot;&gt;&quot;</span><span class="o">+</span><span class="nx">v</span><span class="o">+</span><span class="s2">&quot;&lt;/object&gt;&quot;</span><span class="p">;</span><span class="nx">T</span><span class="p">[</span><span class="nx">T</span><span class="p">.</span><span class="nx">length</span><span class="p">]</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">id</span><span class="p">;</span><span class="nx">q</span><span class="o">=</span><span class="nx">n</span><span class="p">(</span><span class="nx">g</span><span class="p">.</span><span class="nx">id</span><span class="p">)}</span><span class="k">else</span><span class="p">{</span><span class="nx">D</span><span class="o">=</span><span class="nx">u</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="nx">A</span><span class="p">);</span><span class="nx">D</span><span class="p">.</span><span class="nx">setAttribute</span><span class="p">(</span><span class="s2">&quot;type&quot;</span><span class="p">,</span><span class="nx">y</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">E</span> <span class="k">in</span> <span class="nx">g</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">g</span><span class="p">[</span><span class="nx">E</span><span class="p">]</span><span class="o">!=</span><span class="nb">Object</span><span class="p">.</span><span class="nx">prototype</span><span class="p">[</span><span class="nx">E</span><span class="p">])</span><span class="k">if</span><span class="p">(</span><span class="nx">E</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">()</span><span class="o">==</span><span class="s2">&quot;styleclass&quot;</span><span class="p">)</span><span class="nx">D</span><span class="p">.</span><span class="nx">setAttribute</span><span class="p">(</span><span class="s2">&quot;class&quot;</span><span class="p">,</span></div><div class='line' id='LC57'><span class="nx">g</span><span class="p">[</span><span class="nx">E</span><span class="p">]);</span><span class="k">else</span> <span class="nx">E</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">()</span><span class="o">!=</span><span class="s2">&quot;classid&quot;</span><span class="o">&amp;&amp;</span><span class="nx">D</span><span class="p">.</span><span class="nx">setAttribute</span><span class="p">(</span><span class="nx">E</span><span class="p">,</span><span class="nx">g</span><span class="p">[</span><span class="nx">E</span><span class="p">]);</span><span class="k">for</span><span class="p">(</span><span class="nx">x</span> <span class="k">in</span> <span class="nx">i</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">i</span><span class="p">[</span><span class="nx">x</span><span class="p">]</span><span class="o">!=</span><span class="nb">Object</span><span class="p">.</span><span class="nx">prototype</span><span class="p">[</span><span class="nx">x</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="nx">x</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">()</span><span class="o">!=</span><span class="s2">&quot;movie&quot;</span><span class="p">){</span><span class="nx">g</span><span class="o">=</span><span class="nx">D</span><span class="p">;</span><span class="nx">v</span><span class="o">=</span><span class="nx">x</span><span class="p">;</span><span class="nx">E</span><span class="o">=</span><span class="nx">i</span><span class="p">[</span><span class="nx">x</span><span class="p">];</span><span class="nx">l</span><span class="o">=</span><span class="nx">u</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;param&quot;</span><span class="p">);</span><span class="nx">l</span><span class="p">.</span><span class="nx">setAttribute</span><span class="p">(</span><span class="s2">&quot;name&quot;</span><span class="p">,</span><span class="nx">v</span><span class="p">);</span><span class="nx">l</span><span class="p">.</span><span class="nx">setAttribute</span><span class="p">(</span><span class="s2">&quot;value&quot;</span><span class="p">,</span><span class="nx">E</span><span class="p">);</span><span class="nx">g</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">l</span><span class="p">)}</span><span class="nx">r</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">.</span><span class="nx">replaceChild</span><span class="p">(</span><span class="nx">D</span><span class="p">,</span><span class="nx">r</span><span class="p">);</span><span class="nx">q</span><span class="o">=</span><span class="nx">D</span><span class="p">}}</span><span class="k">return</span> <span class="nx">q</span><span class="p">}</span><span class="kd">function</span> <span class="nx">p</span><span class="p">(</span><span class="nx">g</span><span class="p">){</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="nx">n</span><span class="p">(</span><span class="nx">g</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">i</span><span class="o">&amp;&amp;</span><span class="nx">i</span><span class="p">.</span><span class="nx">nodeName</span><span class="o">==</span><span class="s2">&quot;OBJECT&quot;</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">s</span><span class="p">.</span><span class="nx">ie</span><span class="o">&amp;&amp;</span><span class="nx">s</span><span class="p">.</span><span class="nx">win</span><span class="p">){</span><span class="nx">i</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">display</span><span class="o">=</span><span class="s2">&quot;none&quot;</span><span class="p">;(</span><span class="kd">function</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="nx">i</span><span class="p">.</span><span class="nx">readyState</span><span class="o">==</span><span class="mi">4</span><span class="p">){</span><span class="kd">var</span> <span class="nx">l</span><span class="o">=</span><span class="nx">n</span><span class="p">(</span><span class="nx">g</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">l</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">q</span> <span class="k">in</span> <span class="nx">l</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">l</span><span class="p">[</span><span class="nx">q</span><span class="p">]</span><span class="o">==</span><span class="s2">&quot;function&quot;</span><span class="p">)</span><span class="nx">l</span><span class="p">[</span><span class="nx">q</span><span class="p">]</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="nx">l</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">.</span><span class="nx">removeChild</span><span class="p">(</span><span class="nx">l</span><span class="p">)}}</span><span class="k">else</span> <span class="nx">setTimeout</span><span class="p">(</span><span class="nx">arguments</span><span class="p">.</span><span class="nx">callee</span><span class="p">,</span></div><div class='line' id='LC58'><span class="mi">10</span><span class="p">)})()}</span><span class="k">else</span> <span class="nx">i</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">.</span><span class="nx">removeChild</span><span class="p">(</span><span class="nx">i</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">n</span><span class="p">(</span><span class="nx">g</span><span class="p">){</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="k">try</span><span class="p">{</span><span class="nx">i</span><span class="o">=</span><span class="nx">u</span><span class="p">.</span><span class="nx">getElementById</span><span class="p">(</span><span class="nx">g</span><span class="p">)}</span><span class="k">catch</span><span class="p">(</span><span class="nx">l</span><span class="p">){}</span><span class="k">return</span> <span class="nx">i</span><span class="p">}</span><span class="kd">function</span> <span class="nx">z</span><span class="p">(</span><span class="nx">g</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">l</span><span class="p">){</span><span class="nx">g</span><span class="p">.</span><span class="nx">attachEvent</span><span class="p">(</span><span class="nx">i</span><span class="p">,</span><span class="nx">l</span><span class="p">);</span><span class="nx">N</span><span class="p">[</span><span class="nx">N</span><span class="p">.</span><span class="nx">length</span><span class="p">]</span><span class="o">=</span><span class="p">[</span><span class="nx">g</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">l</span><span class="p">]}</span><span class="kd">function</span> <span class="nx">t</span><span class="p">(</span><span class="nx">g</span><span class="p">){</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="nx">s</span><span class="p">.</span><span class="nx">pv</span><span class="p">;</span><span class="nx">g</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot;.&quot;</span><span class="p">);</span><span class="nx">g</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">=</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">g</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="mi">10</span><span class="p">);</span><span class="nx">g</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">=</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">g</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="mi">10</span><span class="p">)</span><span class="o">||</span><span class="mi">0</span><span class="p">;</span><span class="nx">g</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">=</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">g</span><span class="p">[</span><span class="mi">2</span><span class="p">],</span><span class="mi">10</span><span class="p">)</span><span class="o">||</span><span class="mi">0</span><span class="p">;</span><span class="k">return</span> <span class="nx">i</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">&gt;</span><span class="nx">g</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">||</span><span class="nx">i</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">==</span><span class="nx">g</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="nx">i</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">&gt;</span><span class="nx">g</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">||</span><span class="nx">i</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">==</span><span class="nx">g</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="nx">i</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">==</span><span class="nx">g</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="nx">i</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">&gt;=</span><span class="nx">g</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">?</span><span class="kc">true</span><span class="o">:</span><span class="kc">false</span><span class="p">}</span><span class="kd">function</span> <span class="nx">B</span><span class="p">(</span><span class="nx">g</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">l</span><span class="p">,</span><span class="nx">q</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="p">(</span><span class="nx">s</span><span class="p">.</span><span class="nx">ie</span><span class="o">&amp;&amp;</span><span class="nx">s</span><span class="p">.</span><span class="nx">mac</span><span class="p">)){</span><span class="kd">var</span> <span class="nx">r</span><span class="o">=</span><span class="nx">u</span><span class="p">.</span><span class="nx">getElementsByTagName</span><span class="p">(</span><span class="s2">&quot;head&quot;</span><span class="p">)[</span><span class="mi">0</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="nx">r</span><span class="p">){</span><span class="nx">l</span><span class="o">=</span><span class="nx">l</span><span class="o">&amp;&amp;</span><span class="k">typeof</span> <span class="nx">l</span><span class="o">==</span><span class="s2">&quot;string&quot;</span><span class="o">?</span><span class="nx">l</span><span class="o">:</span><span class="s2">&quot;screen&quot;</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">q</span><span class="p">)</span><span class="nx">Y</span><span class="o">=</span><span class="nx">H</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span></div><div class='line' id='LC59'><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">H</span><span class="o">||</span><span class="nx">Y</span><span class="o">!=</span><span class="nx">l</span><span class="p">){</span><span class="nx">q</span><span class="o">=</span><span class="nx">u</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;style&quot;</span><span class="p">);</span><span class="nx">q</span><span class="p">.</span><span class="nx">setAttribute</span><span class="p">(</span><span class="s2">&quot;type&quot;</span><span class="p">,</span><span class="s2">&quot;text/css&quot;</span><span class="p">);</span><span class="nx">q</span><span class="p">.</span><span class="nx">setAttribute</span><span class="p">(</span><span class="s2">&quot;media&quot;</span><span class="p">,</span><span class="nx">l</span><span class="p">);</span><span class="nx">H</span><span class="o">=</span><span class="nx">r</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">q</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">s</span><span class="p">.</span><span class="nx">ie</span><span class="o">&amp;&amp;</span><span class="nx">s</span><span class="p">.</span><span class="nx">win</span><span class="o">&amp;&amp;</span><span class="k">typeof</span> <span class="nx">u</span><span class="p">.</span><span class="nx">styleSheets</span><span class="o">!=</span><span class="nx">w</span><span class="o">&amp;&amp;</span><span class="nx">u</span><span class="p">.</span><span class="nx">styleSheets</span><span class="p">.</span><span class="nx">length</span><span class="o">&gt;</span><span class="mi">0</span><span class="p">)</span><span class="nx">H</span><span class="o">=</span><span class="nx">u</span><span class="p">.</span><span class="nx">styleSheets</span><span class="p">[</span><span class="nx">u</span><span class="p">.</span><span class="nx">styleSheets</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">];</span><span class="nx">Y</span><span class="o">=</span><span class="nx">l</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="nx">s</span><span class="p">.</span><span class="nx">ie</span><span class="o">&amp;&amp;</span><span class="nx">s</span><span class="p">.</span><span class="nx">win</span><span class="p">)</span><span class="nx">H</span><span class="o">&amp;&amp;</span><span class="k">typeof</span> <span class="nx">H</span><span class="p">.</span><span class="nx">addRule</span><span class="o">==</span><span class="nx">A</span><span class="o">&amp;&amp;</span><span class="nx">H</span><span class="p">.</span><span class="nx">addRule</span><span class="p">(</span><span class="nx">g</span><span class="p">,</span><span class="nx">i</span><span class="p">);</span><span class="k">else</span> <span class="nx">H</span><span class="o">&amp;&amp;</span><span class="k">typeof</span> <span class="nx">u</span><span class="p">.</span><span class="nx">createTextNode</span><span class="o">!=</span><span class="nx">w</span><span class="o">&amp;&amp;</span><span class="nx">H</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">u</span><span class="p">.</span><span class="nx">createTextNode</span><span class="p">(</span><span class="nx">g</span><span class="o">+</span><span class="s2">&quot; {&quot;</span><span class="o">+</span><span class="nx">i</span><span class="o">+</span><span class="s2">&quot;}&quot;</span><span class="p">))}}}</span><span class="kd">function</span> <span class="nx">C</span><span class="p">(</span><span class="nx">g</span><span class="p">,</span><span class="nx">i</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">aa</span><span class="p">){</span><span class="kd">var</span> <span class="nx">l</span><span class="o">=</span><span class="nx">i</span><span class="o">?</span><span class="s2">&quot;visible&quot;</span><span class="o">:</span><span class="s2">&quot;hidden&quot;</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">M</span><span class="o">&amp;&amp;</span><span class="nx">n</span><span class="p">(</span><span class="nx">g</span><span class="p">))</span><span class="nx">n</span><span class="p">(</span><span class="nx">g</span><span class="p">).</span><span class="nx">style</span><span class="p">.</span><span class="nx">visibility</span><span class="o">=</span><span class="nx">l</span><span class="p">;</span><span class="k">else</span> <span class="nx">B</span><span class="p">(</span><span class="s2">&quot;#&quot;</span><span class="o">+</span><span class="nx">g</span><span class="p">,</span><span class="s2">&quot;visibility:&quot;</span><span class="o">+</span><span class="nx">l</span><span class="p">)}}</span><span class="kd">function</span> <span class="nx">G</span><span class="p">(</span><span class="nx">g</span><span class="p">){</span><span class="k">return</span><span class="sr">/[\\\&quot;&lt;&gt;\.;]/</span><span class="p">.</span><span class="nx">exec</span><span class="p">(</span><span class="nx">g</span><span class="p">)</span><span class="o">!=</span></div><div class='line' id='LC60'><span class="kc">null</span><span class="o">&amp;&amp;</span><span class="k">typeof</span> <span class="nb">encodeURIComponent</span><span class="o">!=</span><span class="nx">w</span><span class="o">?</span><span class="nb">encodeURIComponent</span><span class="p">(</span><span class="nx">g</span><span class="p">)</span><span class="o">:</span><span class="nx">g</span><span class="p">}</span><span class="kd">var</span> <span class="nx">w</span><span class="o">=</span><span class="s2">&quot;undefined&quot;</span><span class="p">,</span><span class="nx">A</span><span class="o">=</span><span class="s2">&quot;object&quot;</span><span class="p">,</span><span class="nx">y</span><span class="o">=</span><span class="s2">&quot;application/x-shockwave-flash&quot;</span><span class="p">,</span><span class="nx">$</span><span class="o">=</span><span class="s2">&quot;SWFObjectExprInst&quot;</span><span class="p">,</span><span class="nx">F</span><span class="o">=</span><span class="nb">window</span><span class="p">,</span><span class="nx">u</span><span class="o">=</span><span class="nb">document</span><span class="p">,</span><span class="nx">K</span><span class="o">=</span><span class="nx">navigator</span><span class="p">,</span><span class="nx">ba</span><span class="o">=</span><span class="kc">false</span><span class="p">,</span><span class="nx">Q</span><span class="o">=</span><span class="p">[</span><span class="kd">function</span><span class="p">(){</span><span class="nx">ba</span><span class="o">?</span><span class="nx">c</span><span class="p">()</span><span class="o">:</span><span class="nx">h</span><span class="p">()}],</span><span class="nx">J</span><span class="o">=</span><span class="p">[],</span><span class="nx">T</span><span class="o">=</span><span class="p">[],</span><span class="nx">N</span><span class="o">=</span><span class="p">[],</span><span class="nx">O</span><span class="p">,</span><span class="nx">S</span><span class="p">,</span><span class="nx">X</span><span class="p">,</span><span class="nx">Z</span><span class="p">,</span><span class="nx">M</span><span class="o">=</span><span class="kc">false</span><span class="p">,</span><span class="nx">R</span><span class="o">=</span><span class="kc">false</span><span class="p">,</span><span class="nx">H</span><span class="p">,</span><span class="nx">Y</span><span class="p">,</span><span class="nx">aa</span><span class="o">=</span><span class="kc">true</span><span class="p">,</span><span class="nx">s</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">g</span><span class="o">=</span><span class="k">typeof</span> <span class="nx">u</span><span class="p">.</span><span class="nx">getElementById</span><span class="o">!=</span><span class="nx">w</span><span class="o">&amp;&amp;</span><span class="k">typeof</span> <span class="nx">u</span><span class="p">.</span><span class="nx">getElementsByTagName</span><span class="o">!=</span><span class="nx">w</span><span class="o">&amp;&amp;</span><span class="k">typeof</span> <span class="nx">u</span><span class="p">.</span><span class="nx">createElement</span><span class="o">!=</span><span class="nx">w</span><span class="p">,</span><span class="nx">i</span><span class="o">=</span><span class="nx">K</span><span class="p">.</span><span class="nx">userAgent</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">(),</span><span class="nx">l</span><span class="o">=</span><span class="nx">K</span><span class="p">.</span><span class="nx">platform</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">(),</span><span class="nx">q</span><span class="o">=</span><span class="nx">l</span><span class="o">?</span><span class="sr">/win/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">l</span><span class="p">)</span><span class="o">:</span><span class="sr">/win/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">i</span><span class="p">);</span><span class="nx">l</span><span class="o">=</span><span class="nx">l</span><span class="o">?</span><span class="sr">/mac/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">l</span><span class="p">)</span><span class="o">:</span><span class="sr">/mac/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">i</span><span class="p">);</span><span class="nx">i</span><span class="o">=</span><span class="sr">/webkit/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">i</span><span class="p">)</span><span class="o">?</span></div><div class='line' id='LC61'><span class="nb">parseFloat</span><span class="p">(</span><span class="nx">i</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/^.*webkit\/(\d+(\.\d+)?).*$/</span><span class="p">,</span><span class="s2">&quot;$1&quot;</span><span class="p">))</span><span class="o">:</span><span class="kc">false</span><span class="p">;</span><span class="kd">var</span> <span class="nx">r</span><span class="o">=!+</span><span class="s2">&quot;\u000b1&quot;</span><span class="p">,</span><span class="nx">x</span><span class="o">=</span><span class="p">[</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">],</span><span class="nx">v</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">K</span><span class="p">.</span><span class="nx">plugins</span><span class="o">!=</span><span class="nx">w</span><span class="o">&amp;&amp;</span><span class="k">typeof</span> <span class="nx">K</span><span class="p">.</span><span class="nx">plugins</span><span class="p">[</span><span class="s2">&quot;Shockwave Flash&quot;</span><span class="p">]</span><span class="o">==</span><span class="nx">A</span><span class="p">){</span><span class="k">if</span><span class="p">((</span><span class="nx">v</span><span class="o">=</span><span class="nx">K</span><span class="p">.</span><span class="nx">plugins</span><span class="p">[</span><span class="s2">&quot;Shockwave Flash&quot;</span><span class="p">].</span><span class="nx">description</span><span class="p">)</span><span class="o">&amp;&amp;!</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">K</span><span class="p">.</span><span class="nx">mimeTypes</span><span class="o">!=</span><span class="nx">w</span><span class="o">&amp;&amp;</span><span class="nx">K</span><span class="p">.</span><span class="nx">mimeTypes</span><span class="p">[</span><span class="nx">y</span><span class="p">]</span><span class="o">&amp;&amp;!</span><span class="nx">K</span><span class="p">.</span><span class="nx">mimeTypes</span><span class="p">[</span><span class="nx">y</span><span class="p">].</span><span class="nx">enabledPlugin</span><span class="p">)){</span><span class="nx">ba</span><span class="o">=</span><span class="kc">true</span><span class="p">;</span><span class="nx">r</span><span class="o">=</span><span class="kc">false</span><span class="p">;</span><span class="nx">v</span><span class="o">=</span><span class="nx">v</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/^.*\s+(\S+\s+\S+$)/</span><span class="p">,</span><span class="s2">&quot;$1&quot;</span><span class="p">);</span><span class="nx">x</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">=</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">v</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/^(.*)\..*$/</span><span class="p">,</span><span class="s2">&quot;$1&quot;</span><span class="p">),</span><span class="mi">10</span><span class="p">);</span><span class="nx">x</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">=</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">v</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/^.*\.(.*)\s.*$/</span><span class="p">,</span><span class="s2">&quot;$1&quot;</span><span class="p">),</span><span class="mi">10</span><span class="p">);</span><span class="nx">x</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">=</span><span class="sr">/[a-zA-Z]/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">v</span><span class="p">)</span><span class="o">?</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">v</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/^.*[a-zA-Z]+(.*)$/</span><span class="p">,</span></div><div class='line' id='LC62'><span class="s2">&quot;$1&quot;</span><span class="p">),</span><span class="mi">10</span><span class="p">)</span><span class="o">:</span><span class="mi">0</span><span class="p">}}</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">F</span><span class="p">.</span><span class="nx">ActiveXObject</span><span class="o">!=</span><span class="nx">w</span><span class="p">)</span><span class="k">try</span><span class="p">{</span><span class="kd">var</span> <span class="nx">D</span><span class="o">=</span><span class="k">new</span> <span class="nx">ActiveXObject</span><span class="p">(</span><span class="s2">&quot;ShockwaveFlash.ShockwaveFlash&quot;</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">D</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">v</span><span class="o">=</span><span class="nx">D</span><span class="p">.</span><span class="nx">GetVariable</span><span class="p">(</span><span class="s2">&quot;$version&quot;</span><span class="p">)){</span><span class="nx">r</span><span class="o">=</span><span class="kc">true</span><span class="p">;</span><span class="nx">v</span><span class="o">=</span><span class="nx">v</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot; &quot;</span><span class="p">)[</span><span class="mi">1</span><span class="p">].</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot;,&quot;</span><span class="p">);</span><span class="nx">x</span><span class="o">=</span><span class="p">[</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">v</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="mi">10</span><span class="p">),</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">v</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="mi">10</span><span class="p">),</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">v</span><span class="p">[</span><span class="mi">2</span><span class="p">],</span><span class="mi">10</span><span class="p">)]}}</span><span class="k">catch</span><span class="p">(</span><span class="nx">E</span><span class="p">){}</span><span class="k">return</span><span class="p">{</span><span class="nx">w3</span><span class="o">:</span><span class="nx">g</span><span class="p">,</span><span class="nx">pv</span><span class="o">:</span><span class="nx">x</span><span class="p">,</span><span class="nx">wk</span><span class="o">:</span><span class="nx">i</span><span class="p">,</span><span class="nx">ie</span><span class="o">:</span><span class="nx">r</span><span class="p">,</span><span class="nx">win</span><span class="o">:</span><span class="nx">q</span><span class="p">,</span><span class="nx">mac</span><span class="o">:</span><span class="nx">l</span><span class="p">}}();(</span><span class="kd">function</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="nx">s</span><span class="p">.</span><span class="nx">w3</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">u</span><span class="p">.</span><span class="nx">readyState</span><span class="o">!=</span><span class="nx">w</span><span class="o">&amp;&amp;</span><span class="nx">u</span><span class="p">.</span><span class="nx">readyState</span><span class="o">==</span><span class="s2">&quot;complete&quot;</span><span class="o">||</span><span class="k">typeof</span> <span class="nx">u</span><span class="p">.</span><span class="nx">readyState</span><span class="o">==</span><span class="nx">w</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">u</span><span class="p">.</span><span class="nx">getElementsByTagName</span><span class="p">(</span><span class="s2">&quot;body&quot;</span><span class="p">)[</span><span class="mi">0</span><span class="p">]</span><span class="o">||</span><span class="nx">u</span><span class="p">.</span><span class="nx">body</span><span class="p">))</span><span class="nx">m</span><span class="p">();</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">M</span><span class="p">){</span><span class="k">typeof</span> <span class="nx">u</span><span class="p">.</span><span class="nx">addEventListener</span><span class="o">!=</span><span class="nx">w</span><span class="o">&amp;&amp;</span><span class="nx">u</span><span class="p">.</span><span class="nx">addEventListener</span><span class="p">(</span><span class="s2">&quot;DOMContentLoaded&quot;</span><span class="p">,</span></div><div class='line' id='LC63'><span class="nx">m</span><span class="p">,</span><span class="kc">false</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">s</span><span class="p">.</span><span class="nx">ie</span><span class="o">&amp;&amp;</span><span class="nx">s</span><span class="p">.</span><span class="nx">win</span><span class="p">){</span><span class="nx">u</span><span class="p">.</span><span class="nx">attachEvent</span><span class="p">(</span><span class="s2">&quot;onreadystatechange&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="nx">u</span><span class="p">.</span><span class="nx">readyState</span><span class="o">==</span><span class="s2">&quot;complete&quot;</span><span class="p">){</span><span class="nx">u</span><span class="p">.</span><span class="nx">detachEvent</span><span class="p">(</span><span class="s2">&quot;onreadystatechange&quot;</span><span class="p">,</span><span class="nx">arguments</span><span class="p">.</span><span class="nx">callee</span><span class="p">);</span><span class="nx">m</span><span class="p">()}});</span><span class="nx">F</span><span class="o">==</span><span class="nx">top</span><span class="o">&amp;&amp;</span><span class="kd">function</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">M</span><span class="p">){</span><span class="k">try</span><span class="p">{</span><span class="nx">u</span><span class="p">.</span><span class="nx">documentElement</span><span class="p">.</span><span class="nx">doScroll</span><span class="p">(</span><span class="s2">&quot;left&quot;</span><span class="p">)}</span><span class="k">catch</span><span class="p">(</span><span class="nx">g</span><span class="p">){</span><span class="nx">setTimeout</span><span class="p">(</span><span class="nx">arguments</span><span class="p">.</span><span class="nx">callee</span><span class="p">,</span><span class="mi">0</span><span class="p">);</span><span class="k">return</span><span class="p">}</span><span class="nx">m</span><span class="p">()}}()}</span><span class="nx">s</span><span class="p">.</span><span class="nx">wk</span><span class="o">&amp;&amp;</span><span class="kd">function</span><span class="p">(){</span><span class="nx">M</span><span class="o">||</span><span class="p">(</span><span class="sr">/loaded|complete/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">u</span><span class="p">.</span><span class="nx">readyState</span><span class="p">)</span><span class="o">?</span><span class="nx">m</span><span class="p">()</span><span class="o">:</span><span class="nx">setTimeout</span><span class="p">(</span><span class="nx">arguments</span><span class="p">.</span><span class="nx">callee</span><span class="p">,</span><span class="mi">0</span><span class="p">))}();</span><span class="nx">d</span><span class="p">(</span><span class="nx">m</span><span class="p">)}}})();(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">s</span><span class="p">.</span><span class="nx">ie</span><span class="o">&amp;&amp;</span><span class="nx">s</span><span class="p">.</span><span class="nx">win</span><span class="o">&amp;&amp;</span><span class="nb">window</span><span class="p">.</span><span class="nx">attachEvent</span><span class="p">(</span><span class="s2">&quot;onunload&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">g</span><span class="o">=</span><span class="nx">N</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">i</span><span class="o">&lt;</span><span class="nx">g</span><span class="p">;</span><span class="nx">i</span><span class="o">++</span><span class="p">)</span><span class="nx">N</span><span class="p">[</span><span class="nx">i</span><span class="p">][</span><span class="mi">0</span><span class="p">].</span><span class="nx">detachEvent</span><span class="p">(</span><span class="nx">N</span><span class="p">[</span><span class="nx">i</span><span class="p">][</span><span class="mi">1</span><span class="p">],</span></div><div class='line' id='LC64'><span class="nx">N</span><span class="p">[</span><span class="nx">i</span><span class="p">][</span><span class="mi">2</span><span class="p">]);</span><span class="nx">g</span><span class="o">=</span><span class="nx">T</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">i</span><span class="o">&lt;</span><span class="nx">g</span><span class="p">;</span><span class="nx">i</span><span class="o">++</span><span class="p">)</span><span class="nx">p</span><span class="p">(</span><span class="nx">T</span><span class="p">[</span><span class="nx">i</span><span class="p">]);</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">l</span> <span class="k">in</span> <span class="nx">s</span><span class="p">)</span><span class="nx">s</span><span class="p">[</span><span class="nx">l</span><span class="p">]</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="nx">s</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">q</span> <span class="k">in</span> <span class="nx">swfobject</span><span class="p">)</span><span class="nx">swfobject</span><span class="p">[</span><span class="nx">q</span><span class="p">]</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="nx">swfobject</span><span class="o">=</span><span class="kc">null</span><span class="p">})})();</span><span class="k">return</span><span class="p">{</span><span class="nx">registerObject</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">g</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">l</span><span class="p">,</span><span class="nx">q</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">s</span><span class="p">.</span><span class="nx">w3</span><span class="o">&amp;&amp;</span><span class="nx">g</span><span class="o">&amp;&amp;</span><span class="nx">i</span><span class="p">){</span><span class="kd">var</span> <span class="nx">r</span><span class="o">=</span><span class="p">{};</span><span class="nx">r</span><span class="p">.</span><span class="nx">id</span><span class="o">=</span><span class="nx">g</span><span class="p">;</span><span class="nx">r</span><span class="p">.</span><span class="nx">swfVersion</span><span class="o">=</span><span class="nx">i</span><span class="p">;</span><span class="nx">r</span><span class="p">.</span><span class="nx">expressInstall</span><span class="o">=</span><span class="nx">l</span><span class="p">;</span><span class="nx">r</span><span class="p">.</span><span class="nx">callbackFn</span><span class="o">=</span><span class="nx">q</span><span class="p">;</span><span class="nx">J</span><span class="p">[</span><span class="nx">J</span><span class="p">.</span><span class="nx">length</span><span class="p">]</span><span class="o">=</span><span class="nx">r</span><span class="p">;</span><span class="nx">C</span><span class="p">(</span><span class="nx">g</span><span class="p">,</span><span class="kc">false</span><span class="p">)}</span><span class="k">else</span> <span class="nx">q</span><span class="o">&amp;&amp;</span><span class="nx">q</span><span class="p">({</span><span class="nx">success</span><span class="o">:</span><span class="kc">false</span><span class="p">,</span><span class="nx">id</span><span class="o">:</span><span class="nx">g</span><span class="p">})},</span><span class="nx">getObjectById</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">g</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">s</span><span class="p">.</span><span class="nx">w3</span><span class="p">)</span><span class="k">return</span> <span class="nx">e</span><span class="p">(</span><span class="nx">g</span><span class="p">)},</span><span class="nx">embedSWF</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">g</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">l</span><span class="p">,</span><span class="nx">q</span><span class="p">,</span><span class="nx">r</span><span class="p">,</span><span class="nx">x</span><span class="p">,</span><span class="nx">v</span><span class="p">,</span><span class="nx">D</span><span class="p">,</span><span class="nx">E</span><span class="p">,</span><span class="nx">P</span><span class="p">){</span><span class="kd">var</span> <span class="nx">U</span><span class="o">=</span><span class="p">{</span><span class="nx">success</span><span class="o">:</span><span class="kc">false</span><span class="p">,</span><span class="nx">id</span><span class="o">:</span><span class="nx">i</span><span class="p">};</span><span class="k">if</span><span class="p">(</span><span class="nx">s</span><span class="p">.</span><span class="nx">w3</span><span class="o">&amp;&amp;!</span><span class="p">(</span><span class="nx">s</span><span class="p">.</span><span class="nx">wk</span><span class="o">&amp;&amp;</span><span class="nx">s</span><span class="p">.</span><span class="nx">wk</span><span class="o">&lt;</span><span class="mi">312</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">g</span><span class="o">&amp;&amp;</span><span class="nx">i</span><span class="o">&amp;&amp;</span><span class="nx">l</span><span class="o">&amp;&amp;</span><span class="nx">q</span><span class="o">&amp;&amp;</span><span class="nx">r</span><span class="p">){</span><span class="nx">C</span><span class="p">(</span><span class="nx">i</span><span class="p">,</span><span class="kc">false</span><span class="p">);</span><span class="nx">b</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">l</span><span class="o">+=</span><span class="s2">&quot;&quot;</span><span class="p">;</span></div><div class='line' id='LC65'><span class="nx">q</span><span class="o">+=</span><span class="s2">&quot;&quot;</span><span class="p">;</span><span class="kd">var</span> <span class="nx">L</span><span class="o">=</span><span class="p">{};</span><span class="k">if</span><span class="p">(</span><span class="nx">E</span><span class="o">&amp;&amp;</span><span class="k">typeof</span> <span class="nx">E</span><span class="o">===</span><span class="nx">A</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">I</span> <span class="k">in</span> <span class="nx">E</span><span class="p">)</span><span class="nx">L</span><span class="p">[</span><span class="nx">I</span><span class="p">]</span><span class="o">=</span><span class="nx">E</span><span class="p">[</span><span class="nx">I</span><span class="p">];</span><span class="nx">L</span><span class="p">.</span><span class="nx">data</span><span class="o">=</span><span class="nx">g</span><span class="p">;</span><span class="nx">L</span><span class="p">.</span><span class="nx">width</span><span class="o">=</span><span class="nx">l</span><span class="p">;</span><span class="nx">L</span><span class="p">.</span><span class="nx">height</span><span class="o">=</span><span class="nx">q</span><span class="p">;</span><span class="nx">I</span><span class="o">=</span><span class="p">{};</span><span class="k">if</span><span class="p">(</span><span class="nx">D</span><span class="o">&amp;&amp;</span><span class="k">typeof</span> <span class="nx">D</span><span class="o">===</span><span class="nx">A</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">V</span> <span class="k">in</span> <span class="nx">D</span><span class="p">)</span><span class="nx">I</span><span class="p">[</span><span class="nx">V</span><span class="p">]</span><span class="o">=</span><span class="nx">D</span><span class="p">[</span><span class="nx">V</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="nx">v</span><span class="o">&amp;&amp;</span><span class="k">typeof</span> <span class="nx">v</span><span class="o">===</span><span class="nx">A</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">W</span> <span class="k">in</span> <span class="nx">v</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">I</span><span class="p">.</span><span class="nx">flashvars</span><span class="o">!=</span><span class="nx">w</span><span class="p">)</span><span class="nx">I</span><span class="p">.</span><span class="nx">flashvars</span><span class="o">+=</span><span class="s2">&quot;&amp;&quot;</span><span class="o">+</span><span class="nx">W</span><span class="o">+</span><span class="s2">&quot;=&quot;</span><span class="o">+</span><span class="nx">v</span><span class="p">[</span><span class="nx">W</span><span class="p">];</span><span class="k">else</span> <span class="nx">I</span><span class="p">.</span><span class="nx">flashvars</span><span class="o">=</span><span class="nx">W</span><span class="o">+</span><span class="s2">&quot;=&quot;</span><span class="o">+</span><span class="nx">v</span><span class="p">[</span><span class="nx">W</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="nx">t</span><span class="p">(</span><span class="nx">r</span><span class="p">)){</span><span class="nx">V</span><span class="o">=</span><span class="nx">o</span><span class="p">(</span><span class="nx">L</span><span class="p">,</span><span class="nx">I</span><span class="p">,</span><span class="nx">i</span><span class="p">);</span><span class="nx">L</span><span class="p">.</span><span class="nx">id</span><span class="o">==</span><span class="nx">i</span><span class="o">&amp;&amp;</span><span class="nx">C</span><span class="p">(</span><span class="nx">i</span><span class="p">,</span><span class="kc">true</span><span class="p">);</span><span class="nx">U</span><span class="p">.</span><span class="nx">success</span><span class="o">=</span><span class="kc">true</span><span class="p">;</span><span class="nx">U</span><span class="p">.</span><span class="nx">ref</span><span class="o">=</span><span class="nx">V</span><span class="p">}</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">x</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">()){</span><span class="nx">L</span><span class="p">.</span><span class="nx">data</span><span class="o">=</span><span class="nx">x</span><span class="p">;</span><span class="nx">f</span><span class="p">(</span><span class="nx">L</span><span class="p">,</span><span class="nx">I</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">P</span><span class="p">);</span><span class="k">return</span><span class="p">}</span><span class="k">else</span> <span class="nx">C</span><span class="p">(</span><span class="nx">i</span><span class="p">,</span><span class="kc">true</span><span class="p">);</span><span class="nx">P</span><span class="o">&amp;&amp;</span><span class="nx">P</span><span class="p">(</span><span class="nx">U</span><span class="p">)})}</span><span class="k">else</span> <span class="nx">P</span><span class="o">&amp;&amp;</span><span class="nx">P</span><span class="p">(</span><span class="nx">U</span><span class="p">)},</span><span class="nx">switchOffAutoHideShow</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="nx">aa</span><span class="o">=</span><span class="kc">false</span><span class="p">},</span><span class="nx">ua</span><span class="o">:</span><span class="nx">s</span><span class="p">,</span><span class="nx">getFlashPlayerVersion</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="p">{</span><span class="nx">major</span><span class="o">:</span><span class="nx">s</span><span class="p">.</span><span class="nx">pv</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">minor</span><span class="o">:</span><span class="nx">s</span><span class="p">.</span><span class="nx">pv</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span></div><div class='line' id='LC66'><span class="nx">release</span><span class="o">:</span><span class="nx">s</span><span class="p">.</span><span class="nx">pv</span><span class="p">[</span><span class="mi">2</span><span class="p">]}},</span><span class="nx">hasFlashPlayerVersion</span><span class="o">:</span><span class="nx">t</span><span class="p">,</span><span class="nx">createSWF</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">g</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">l</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">s</span><span class="p">.</span><span class="nx">w3</span><span class="p">)</span><span class="k">return</span> <span class="nx">o</span><span class="p">(</span><span class="nx">g</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">l</span><span class="p">)},</span><span class="nx">showExpressInstall</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">g</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">l</span><span class="p">,</span><span class="nx">q</span><span class="p">){</span><span class="nx">s</span><span class="p">.</span><span class="nx">w3</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">()</span><span class="o">&amp;&amp;</span><span class="nx">f</span><span class="p">(</span><span class="nx">g</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">l</span><span class="p">,</span><span class="nx">q</span><span class="p">)},</span><span class="nx">removeSWF</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">g</span><span class="p">){</span><span class="nx">s</span><span class="p">.</span><span class="nx">w3</span><span class="o">&amp;&amp;</span><span class="nx">p</span><span class="p">(</span><span class="nx">g</span><span class="p">)},</span><span class="nx">createCSS</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">g</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">l</span><span class="p">,</span><span class="nx">q</span><span class="p">){</span><span class="nx">s</span><span class="p">.</span><span class="nx">w3</span><span class="o">&amp;&amp;</span><span class="nx">B</span><span class="p">(</span><span class="nx">g</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">l</span><span class="p">,</span><span class="nx">q</span><span class="p">)},</span><span class="nx">addDomLoadEvent</span><span class="o">:</span><span class="nx">b</span><span class="p">,</span><span class="nx">addLoadEvent</span><span class="o">:</span><span class="nx">d</span><span class="p">,</span><span class="nx">getQueryParamValue</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">g</span><span class="p">){</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="nx">u</span><span class="p">.</span><span class="nx">location</span><span class="p">.</span><span class="nx">search</span><span class="o">||</span><span class="nx">u</span><span class="p">.</span><span class="nx">location</span><span class="p">.</span><span class="nx">hash</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">i</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="sr">/\?/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">i</span><span class="p">))</span><span class="nx">i</span><span class="o">=</span><span class="nx">i</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot;?&quot;</span><span class="p">)[</span><span class="mi">1</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="nx">g</span><span class="o">==</span><span class="kc">null</span><span class="p">)</span><span class="k">return</span> <span class="nx">G</span><span class="p">(</span><span class="nx">i</span><span class="p">);</span><span class="nx">i</span><span class="o">=</span><span class="nx">i</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot;&amp;&quot;</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">l</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">l</span><span class="o">&lt;</span><span class="nx">i</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">l</span><span class="o">++</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">i</span><span class="p">[</span><span class="nx">l</span><span class="p">].</span><span class="nx">substring</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="nx">i</span><span class="p">[</span><span class="nx">l</span><span class="p">].</span><span class="nx">indexOf</span><span class="p">(</span><span class="s2">&quot;=&quot;</span><span class="p">))</span><span class="o">==</span><span class="nx">g</span><span class="p">)</span><span class="k">return</span> <span class="nx">G</span><span class="p">(</span><span class="nx">i</span><span class="p">[</span><span class="nx">l</span><span class="p">].</span><span class="nx">substring</span><span class="p">(</span><span class="nx">i</span><span class="p">[</span><span class="nx">l</span><span class="p">].</span><span class="nx">indexOf</span><span class="p">(</span><span class="s2">&quot;=&quot;</span><span class="p">)</span><span class="o">+</span></div><div class='line' id='LC67'><span class="mi">1</span><span class="p">))}</span><span class="k">return</span><span class="s2">&quot;&quot;</span><span class="p">},</span><span class="nx">expressInstallCallback</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="nx">R</span><span class="p">){</span><span class="kd">var</span> <span class="nx">g</span><span class="o">=</span><span class="nx">n</span><span class="p">(</span><span class="nx">$</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">g</span><span class="o">&amp;&amp;</span><span class="nx">O</span><span class="p">){</span><span class="nx">g</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">.</span><span class="nx">replaceChild</span><span class="p">(</span><span class="nx">O</span><span class="p">,</span><span class="nx">g</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">S</span><span class="p">){</span><span class="nx">C</span><span class="p">(</span><span class="nx">S</span><span class="p">,</span><span class="kc">true</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">s</span><span class="p">.</span><span class="nx">ie</span><span class="o">&amp;&amp;</span><span class="nx">s</span><span class="p">.</span><span class="nx">win</span><span class="p">)</span><span class="nx">O</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">display</span><span class="o">=</span><span class="s2">&quot;block&quot;</span><span class="p">}</span><span class="nx">X</span><span class="o">&amp;&amp;</span><span class="nx">X</span><span class="p">(</span><span class="nx">Z</span><span class="p">)}</span><span class="nx">R</span><span class="o">=</span><span class="kc">false</span><span class="p">}}}}();</span></div><div class='line' id='LC68'><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nb">window</span><span class="p">.</span><span class="nx">WebSocket</span><span class="p">){</span><span class="kd">var</span> <span class="nx">m</span><span class="o">=</span><span class="nb">window</span><span class="p">.</span><span class="nx">console</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">m</span><span class="o">||!</span><span class="nx">m</span><span class="p">.</span><span class="nx">log</span><span class="o">||!</span><span class="nx">m</span><span class="p">.</span><span class="nx">error</span><span class="p">)</span><span class="nx">m</span><span class="o">=</span><span class="p">{</span><span class="nx">log</span><span class="o">:</span><span class="kd">function</span><span class="p">(){},</span><span class="nx">error</span><span class="o">:</span><span class="kd">function</span><span class="p">(){}};</span><span class="k">if</span><span class="p">(</span><span class="nx">swfobject</span><span class="p">.</span><span class="nx">hasFlashPlayerVersion</span><span class="p">(</span><span class="s2">&quot;10.0.0&quot;</span><span class="p">)){</span><span class="nx">location</span><span class="p">.</span><span class="nx">protocol</span><span class="o">==</span><span class="s2">&quot;file:&quot;</span><span class="o">&amp;&amp;</span><span class="nx">m</span><span class="p">.</span><span class="nx">error</span><span class="p">(</span><span class="s2">&quot;WARNING: web-socket-js doesn&#39;t work in file:///... URL unless you set Flash Security Settings properly. Open the page via Web server i.e. http://...&quot;</span><span class="p">);</span><span class="nx">WebSocket</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">__id</span><span class="o">=</span><span class="nx">WebSocket</span><span class="p">.</span><span class="nx">__nextId</span><span class="o">++</span><span class="p">;</span><span class="nx">WebSocket</span><span class="p">.</span><span class="nx">__instances</span><span class="p">[</span><span class="nx">a</span><span class="p">.</span><span class="nx">__id</span><span class="p">]</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">readyState</span><span class="o">=</span><span class="nx">WebSocket</span><span class="p">.</span><span class="nx">CONNECTING</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">bufferedAmount</span><span class="o">=</span></div><div class='line' id='LC69'><span class="mi">0</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">__events</span><span class="o">=</span><span class="p">{};</span><span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">d</span><span class="o">==</span><span class="s2">&quot;string&quot;</span><span class="p">)</span><span class="nx">d</span><span class="o">=</span><span class="p">[</span><span class="nx">d</span><span class="p">]}</span><span class="k">else</span> <span class="nx">d</span><span class="o">=</span><span class="p">[];</span><span class="nx">setTimeout</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">WebSocket</span><span class="p">.</span><span class="nx">__addTask</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">WebSocket</span><span class="p">.</span><span class="nx">__flash</span><span class="p">.</span><span class="nx">create</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">__id</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">c</span><span class="o">||</span><span class="kc">null</span><span class="p">,</span><span class="nx">h</span><span class="o">||</span><span class="mi">0</span><span class="p">,</span><span class="nx">e</span><span class="o">||</span><span class="kc">null</span><span class="p">)})},</span><span class="mi">0</span><span class="p">)};</span><span class="nx">WebSocket</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">send</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">readyState</span><span class="o">==</span><span class="nx">WebSocket</span><span class="p">.</span><span class="nx">CONNECTING</span><span class="p">)</span><span class="k">throw</span><span class="s2">&quot;INVALID_STATE_ERR: Web Socket connection has not been established&quot;</span><span class="p">;</span><span class="nx">b</span><span class="o">=</span><span class="nx">WebSocket</span><span class="p">.</span><span class="nx">__flash</span><span class="p">.</span><span class="nx">send</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">__id</span><span class="p">,</span><span class="nb">encodeURIComponent</span><span class="p">(</span><span class="nx">b</span><span class="p">));</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="o">&lt;</span><span class="mi">0</span><span class="p">)</span><span class="k">return</span> <span class="kc">true</span><span class="p">;</span><span class="k">else</span><span class="p">{</span><span class="k">this</span><span class="p">.</span><span class="nx">bufferedAmount</span><span class="o">+=</span><span class="nx">b</span><span class="p">;</span><span class="k">return</span> <span class="kc">false</span><span class="p">}};</span><span class="nx">WebSocket</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">close</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">readyState</span><span class="o">==</span></div><div class='line' id='LC70'><span class="nx">WebSocket</span><span class="p">.</span><span class="nx">CLOSED</span><span class="o">||</span><span class="k">this</span><span class="p">.</span><span class="nx">readyState</span><span class="o">==</span><span class="nx">WebSocket</span><span class="p">.</span><span class="nx">CLOSING</span><span class="p">)){</span><span class="k">this</span><span class="p">.</span><span class="nx">readyState</span><span class="o">=</span><span class="nx">WebSocket</span><span class="p">.</span><span class="nx">CLOSING</span><span class="p">;</span><span class="nx">WebSocket</span><span class="p">.</span><span class="nx">__flash</span><span class="p">.</span><span class="nx">close</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">__id</span><span class="p">)}};</span><span class="nx">WebSocket</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">addEventListener</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="nx">b</span> <span class="k">in</span> <span class="k">this</span><span class="p">.</span><span class="nx">__events</span><span class="o">||</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">__events</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">=</span><span class="p">[]);</span><span class="k">this</span><span class="p">.</span><span class="nx">__events</span><span class="p">[</span><span class="nx">b</span><span class="p">].</span><span class="nx">push</span><span class="p">(</span><span class="nx">d</span><span class="p">)};</span><span class="nx">WebSocket</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">removeEventListener</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span> <span class="k">in</span> <span class="k">this</span><span class="p">.</span><span class="nx">__events</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">__events</span><span class="p">[</span><span class="nx">b</span><span class="p">],</span><span class="nx">h</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">;</span><span class="nx">h</span><span class="o">&gt;=</span><span class="mi">0</span><span class="p">;</span><span class="o">--</span><span class="nx">h</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="p">[</span><span class="nx">h</span><span class="p">]</span><span class="o">===</span><span class="nx">d</span><span class="p">){</span><span class="nx">c</span><span class="p">.</span><span class="nx">splice</span><span class="p">(</span><span class="nx">h</span><span class="p">,</span><span class="mi">1</span><span class="p">);</span><span class="k">break</span><span class="p">}};</span><span class="nx">WebSocket</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">dispatchEvent</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">__events</span><span class="p">[</span><span class="nx">b</span><span class="p">.</span><span class="nx">type</span><span class="p">]</span><span class="o">||</span><span class="p">[],</span><span class="nx">c</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">c</span><span class="o">&lt;</span><span class="nx">d</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="o">++</span><span class="nx">c</span><span class="p">)</span><span class="nx">d</span><span class="p">[</span><span class="nx">c</span><span class="p">](</span><span class="nx">b</span><span class="p">);</span></div><div class='line' id='LC71'><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="p">[</span><span class="s2">&quot;on&quot;</span><span class="o">+</span><span class="nx">b</span><span class="p">.</span><span class="nx">type</span><span class="p">])</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="p">(</span><span class="nx">b</span><span class="p">)};</span><span class="nx">WebSocket</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">__handleEvent</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;readyState&quot;</span><span class="k">in</span> <span class="nx">b</span><span class="p">)</span><span class="k">this</span><span class="p">.</span><span class="nx">readyState</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">readyState</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;protocol&quot;</span><span class="k">in</span> <span class="nx">b</span><span class="p">)</span><span class="k">this</span><span class="p">.</span><span class="nx">protocol</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">protocol</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">type</span><span class="o">==</span><span class="s2">&quot;open&quot;</span><span class="o">||</span><span class="nx">b</span><span class="p">.</span><span class="nx">type</span><span class="o">==</span><span class="s2">&quot;error&quot;</span><span class="p">)</span><span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">__createSimpleEvent</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">type</span><span class="p">);</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">type</span><span class="o">==</span><span class="s2">&quot;close&quot;</span><span class="p">)</span><span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">__createSimpleEvent</span><span class="p">(</span><span class="s2">&quot;close&quot;</span><span class="p">);</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">type</span><span class="o">==</span><span class="s2">&quot;message&quot;</span><span class="p">)</span><span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">__createMessageEvent</span><span class="p">(</span><span class="s2">&quot;message&quot;</span><span class="p">,</span><span class="nb">decodeURIComponent</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">message</span><span class="p">));</span><span class="k">else</span> <span class="k">throw</span><span class="s2">&quot;unknown event type: &quot;</span><span class="o">+</span><span class="nx">b</span><span class="p">.</span><span class="nx">type</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">dispatchEvent</span><span class="p">(</span><span class="nx">b</span><span class="p">)};</span><span class="nx">WebSocket</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">__createSimpleEvent</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nb">document</span><span class="p">.</span><span class="nx">createEvent</span><span class="o">&amp;&amp;</span></div><div class='line' id='LC72'><span class="nb">window</span><span class="p">.</span><span class="nx">Event</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nb">document</span><span class="p">.</span><span class="nx">createEvent</span><span class="p">(</span><span class="s2">&quot;Event&quot;</span><span class="p">);</span><span class="nx">d</span><span class="p">.</span><span class="nx">initEvent</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="kc">false</span><span class="p">,</span><span class="kc">false</span><span class="p">);</span><span class="k">return</span> <span class="nx">d</span><span class="p">}</span><span class="k">else</span> <span class="k">return</span><span class="p">{</span><span class="nx">type</span><span class="o">:</span><span class="nx">b</span><span class="p">,</span><span class="nx">bubbles</span><span class="o">:</span><span class="kc">false</span><span class="p">,</span><span class="nx">cancelable</span><span class="o">:</span><span class="kc">false</span><span class="p">}};</span><span class="nx">WebSocket</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">__createMessageEvent</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nb">document</span><span class="p">.</span><span class="nx">createEvent</span><span class="o">&amp;&amp;</span><span class="nb">window</span><span class="p">.</span><span class="nx">MessageEvent</span><span class="o">&amp;&amp;!</span><span class="nb">window</span><span class="p">.</span><span class="nx">opera</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nb">document</span><span class="p">.</span><span class="nx">createEvent</span><span class="p">(</span><span class="s2">&quot;MessageEvent&quot;</span><span class="p">);</span><span class="nx">c</span><span class="p">.</span><span class="nx">initMessageEvent</span><span class="p">(</span><span class="s2">&quot;message&quot;</span><span class="p">,</span><span class="kc">false</span><span class="p">,</span><span class="kc">false</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="kc">null</span><span class="p">,</span><span class="kc">null</span><span class="p">,</span><span class="nb">window</span><span class="p">,</span><span class="kc">null</span><span class="p">);</span><span class="k">return</span> <span class="nx">c</span><span class="p">}</span><span class="k">else</span> <span class="k">return</span><span class="p">{</span><span class="nx">type</span><span class="o">:</span><span class="nx">b</span><span class="p">,</span><span class="nx">data</span><span class="o">:</span><span class="nx">d</span><span class="p">,</span><span class="nx">bubbles</span><span class="o">:</span><span class="kc">false</span><span class="p">,</span><span class="nx">cancelable</span><span class="o">:</span><span class="kc">false</span><span class="p">}};</span><span class="nx">WebSocket</span><span class="p">.</span><span class="nx">CONNECTING</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">WebSocket</span><span class="p">.</span><span class="nx">OPEN</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="nx">WebSocket</span><span class="p">.</span><span class="nx">CLOSING</span><span class="o">=</span><span class="mi">2</span><span class="p">;</span><span class="nx">WebSocket</span><span class="p">.</span><span class="nx">CLOSED</span><span class="o">=</span></div><div class='line' id='LC73'><span class="mi">3</span><span class="p">;</span><span class="nx">WebSocket</span><span class="p">.</span><span class="nx">__flash</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="nx">WebSocket</span><span class="p">.</span><span class="nx">__instances</span><span class="o">=</span><span class="p">{};</span><span class="nx">WebSocket</span><span class="p">.</span><span class="nx">__tasks</span><span class="o">=</span><span class="p">[];</span><span class="nx">WebSocket</span><span class="p">.</span><span class="nx">__nextId</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">WebSocket</span><span class="p">.</span><span class="nx">loadFlashPolicyFile</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="nx">WebSocket</span><span class="p">.</span><span class="nx">__addTask</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">WebSocket</span><span class="p">.</span><span class="nx">__flash</span><span class="p">.</span><span class="nx">loadManualPolicyFile</span><span class="p">(</span><span class="nx">b</span><span class="p">)})};</span><span class="nx">WebSocket</span><span class="p">.</span><span class="nx">__initialize</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">WebSocket</span><span class="p">.</span><span class="nx">__flash</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">WebSocket</span><span class="p">.</span><span class="nx">__swfLocation</span><span class="p">)</span><span class="nb">window</span><span class="p">.</span><span class="nx">WEB_SOCKET_SWF_LOCATION</span><span class="o">=</span><span class="nx">WebSocket</span><span class="p">.</span><span class="nx">__swfLocation</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nb">window</span><span class="p">.</span><span class="nx">WEB_SOCKET_SWF_LOCATION</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nb">document</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;div&quot;</span><span class="p">);</span><span class="nx">b</span><span class="p">.</span><span class="nx">id</span><span class="o">=</span><span class="s2">&quot;webSocketContainer&quot;</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">position</span><span class="o">=</span><span class="s2">&quot;absolute&quot;</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">WebSocket</span><span class="p">.</span><span class="nx">__isFlashLite</span><span class="p">()){</span><span class="nx">b</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">left</span><span class="o">=</span></div><div class='line' id='LC74'><span class="s2">&quot;0px&quot;</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">top</span><span class="o">=</span><span class="s2">&quot;0px&quot;</span><span class="p">}</span><span class="k">else</span><span class="p">{</span><span class="nx">b</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">left</span><span class="o">=</span><span class="s2">&quot;-100px&quot;</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">top</span><span class="o">=</span><span class="s2">&quot;-100px&quot;</span><span class="p">}</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nb">document</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;div&quot;</span><span class="p">);</span><span class="nx">d</span><span class="p">.</span><span class="nx">id</span><span class="o">=</span><span class="s2">&quot;webSocketFlash&quot;</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">d</span><span class="p">);</span><span class="nb">document</span><span class="p">.</span><span class="nx">body</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">b</span><span class="p">);</span><span class="nx">swfobject</span><span class="p">.</span><span class="nx">embedSWF</span><span class="p">(</span><span class="nx">WEB_SOCKET_SWF_LOCATION</span><span class="p">,</span><span class="s2">&quot;webSocketFlash&quot;</span><span class="p">,</span><span class="s2">&quot;1&quot;</span><span class="p">,</span><span class="s2">&quot;1&quot;</span><span class="p">,</span><span class="s2">&quot;10.0.0&quot;</span><span class="p">,</span><span class="kc">null</span><span class="p">,</span><span class="kc">null</span><span class="p">,{</span><span class="nx">hasPriority</span><span class="o">:</span><span class="kc">true</span><span class="p">,</span><span class="nx">swliveconnect</span><span class="o">:</span><span class="kc">true</span><span class="p">,</span><span class="nx">allowScriptAccess</span><span class="o">:</span><span class="s2">&quot;always&quot;</span><span class="p">},</span><span class="kc">null</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">c</span><span class="p">){</span><span class="nx">c</span><span class="p">.</span><span class="nx">success</span><span class="o">||</span><span class="nx">m</span><span class="p">.</span><span class="nx">error</span><span class="p">(</span><span class="s2">&quot;[WebSocket] swfobject.embedSWF failed&quot;</span><span class="p">)})}</span><span class="k">else</span> <span class="nx">m</span><span class="p">.</span><span class="nx">error</span><span class="p">(</span><span class="s2">&quot;[WebSocket] set WEB_SOCKET_SWF_LOCATION to location of WebSocketMain.swf&quot;</span><span class="p">)}};</span><span class="nx">WebSocket</span><span class="p">.</span><span class="nx">__onFlashInitialized</span><span class="o">=</span></div><div class='line' id='LC75'><span class="kd">function</span><span class="p">(){</span><span class="nx">setTimeout</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">WebSocket</span><span class="p">.</span><span class="nx">__flash</span><span class="o">=</span><span class="nb">document</span><span class="p">.</span><span class="nx">getElementById</span><span class="p">(</span><span class="s2">&quot;webSocketFlash&quot;</span><span class="p">);</span><span class="nx">WebSocket</span><span class="p">.</span><span class="nx">__flash</span><span class="p">.</span><span class="nx">setCallerUrl</span><span class="p">(</span><span class="nx">location</span><span class="p">.</span><span class="nx">href</span><span class="p">);</span><span class="nx">WebSocket</span><span class="p">.</span><span class="nx">__flash</span><span class="p">.</span><span class="nx">setDebug</span><span class="p">(</span><span class="o">!!</span><span class="nb">window</span><span class="p">.</span><span class="nx">WEB_SOCKET_DEBUG</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">b</span><span class="o">&lt;</span><span class="nx">WebSocket</span><span class="p">.</span><span class="nx">__tasks</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="o">++</span><span class="nx">b</span><span class="p">)</span><span class="nx">WebSocket</span><span class="p">.</span><span class="nx">__tasks</span><span class="p">[</span><span class="nx">b</span><span class="p">]();</span><span class="nx">WebSocket</span><span class="p">.</span><span class="nx">__tasks</span><span class="o">=</span><span class="p">[]},</span><span class="mi">0</span><span class="p">)};</span><span class="nx">WebSocket</span><span class="p">.</span><span class="nx">__onFlashEvent</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="nx">setTimeout</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="k">try</span><span class="p">{</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">WebSocket</span><span class="p">.</span><span class="nx">__flash</span><span class="p">.</span><span class="nx">receiveEvents</span><span class="p">(),</span><span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">d</span><span class="o">&lt;</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="o">++</span><span class="nx">d</span><span class="p">)</span><span class="nx">WebSocket</span><span class="p">.</span><span class="nx">__instances</span><span class="p">[</span><span class="nx">b</span><span class="p">[</span><span class="nx">d</span><span class="p">].</span><span class="nx">webSocketId</span><span class="p">].</span><span class="nx">__handleEvent</span><span class="p">(</span><span class="nx">b</span><span class="p">[</span><span class="nx">d</span><span class="p">])}</span><span class="k">catch</span><span class="p">(</span><span class="nx">c</span><span class="p">){</span><span class="nx">m</span><span class="p">.</span><span class="nx">error</span><span class="p">(</span><span class="nx">c</span><span class="p">)}},</span><span class="mi">0</span><span class="p">);</span><span class="k">return</span> <span class="kc">true</span><span class="p">};</span></div><div class='line' id='LC76'><span class="nx">WebSocket</span><span class="p">.</span><span class="nx">__log</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="nx">m</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nb">decodeURIComponent</span><span class="p">(</span><span class="nx">b</span><span class="p">))};</span><span class="nx">WebSocket</span><span class="p">.</span><span class="nx">__error</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="nx">m</span><span class="p">.</span><span class="nx">error</span><span class="p">(</span><span class="nb">decodeURIComponent</span><span class="p">(</span><span class="nx">b</span><span class="p">))};</span><span class="nx">WebSocket</span><span class="p">.</span><span class="nx">__addTask</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="nx">WebSocket</span><span class="p">.</span><span class="nx">__flash</span><span class="o">?</span><span class="nx">b</span><span class="p">()</span><span class="o">:</span><span class="nx">WebSocket</span><span class="p">.</span><span class="nx">__tasks</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">b</span><span class="p">)};</span><span class="nx">WebSocket</span><span class="p">.</span><span class="nx">__isFlashLite</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nb">window</span><span class="p">.</span><span class="nx">navigator</span><span class="o">||!</span><span class="nb">window</span><span class="p">.</span><span class="nx">navigator</span><span class="p">.</span><span class="nx">mimeTypes</span><span class="p">)</span><span class="k">return</span> <span class="kc">false</span><span class="p">;</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nb">window</span><span class="p">.</span><span class="nx">navigator</span><span class="p">.</span><span class="nx">mimeTypes</span><span class="p">[</span><span class="s2">&quot;application/x-shockwave-flash&quot;</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">b</span><span class="o">||!</span><span class="nx">b</span><span class="p">.</span><span class="nx">enabledPlugin</span><span class="o">||!</span><span class="nx">b</span><span class="p">.</span><span class="nx">enabledPlugin</span><span class="p">.</span><span class="nx">filename</span><span class="p">)</span><span class="k">return</span> <span class="kc">false</span><span class="p">;</span><span class="k">return</span> <span class="nx">b</span><span class="p">.</span><span class="nx">enabledPlugin</span><span class="p">.</span><span class="nx">filename</span><span class="p">.</span><span class="nx">match</span><span class="p">(</span><span class="sr">/flashlite/i</span><span class="p">)</span><span class="o">?</span><span class="kc">true</span><span class="o">:</span><span class="kc">false</span><span class="p">};</span><span class="nb">window</span><span class="p">.</span><span class="nx">WEB_SOCKET_DISABLE_AUTO_INITIALIZATION</span><span class="o">||</span></div><div class='line' id='LC77'><span class="p">(</span><span class="nb">window</span><span class="p">.</span><span class="nx">addEventListener</span><span class="o">?</span><span class="nb">window</span><span class="p">.</span><span class="nx">addEventListener</span><span class="p">(</span><span class="s2">&quot;load&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="nx">WebSocket</span><span class="p">.</span><span class="nx">__initialize</span><span class="p">()},</span><span class="kc">false</span><span class="p">)</span><span class="o">:</span><span class="nb">window</span><span class="p">.</span><span class="nx">attachEvent</span><span class="p">(</span><span class="s2">&quot;onload&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="nx">WebSocket</span><span class="p">.</span><span class="nx">__initialize</span><span class="p">()}))}</span><span class="k">else</span> <span class="nx">m</span><span class="p">.</span><span class="nx">error</span><span class="p">(</span><span class="s2">&quot;Flash Player &gt;= 10.0.0 is required.&quot;</span><span class="p">)}})();</span></div><div class='line' id='LC78'><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">m</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="kd">function</span> <span class="nx">c</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="nx">b</span><span class="p">.</span><span class="nx">Transport</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">arguments</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">sendBuffer</span><span class="o">=</span><span class="p">[]}}</span><span class="kd">function</span> <span class="nx">h</span><span class="p">(){}</span><span class="nx">m</span><span class="p">.</span><span class="nx">XHR</span><span class="o">=</span><span class="nx">c</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">inherit</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">Transport</span><span class="p">);</span><span class="nx">c</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">open</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">socket</span><span class="p">.</span><span class="nx">setBuffer</span><span class="p">(</span><span class="kc">false</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">onOpen</span><span class="p">();</span><span class="k">this</span><span class="p">.</span><span class="nx">get</span><span class="p">();</span><span class="k">this</span><span class="p">.</span><span class="nx">setCloseTimeout</span><span class="p">();</span><span class="k">return</span> <span class="k">this</span><span class="p">};</span><span class="nx">c</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">payload</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="p">[],</span><span class="nx">f</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">j</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">f</span><span class="o">&lt;</span><span class="nx">j</span><span class="p">;</span><span class="nx">f</span><span class="o">++</span><span class="p">)</span><span class="nx">a</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">parser</span><span class="p">.</span><span class="nx">encodePacket</span><span class="p">(</span><span class="nx">e</span><span class="p">[</span><span class="nx">f</span><span class="p">]));</span><span class="k">this</span><span class="p">.</span><span class="nx">send</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">parser</span><span class="p">.</span><span class="nx">encodePayload</span><span class="p">(</span><span class="nx">a</span><span class="p">))};</span><span class="nx">c</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">send</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">post</span><span class="p">(</span><span class="nx">e</span><span class="p">);</span><span class="k">return</span> <span class="k">this</span><span class="p">};</span><span class="nx">c</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">post</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="kd">function</span> <span class="nx">a</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">readyState</span><span class="o">==</span></div><div class='line' id='LC79'><span class="mi">4</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">onreadystatechange</span><span class="o">=</span><span class="nx">h</span><span class="p">;</span><span class="nx">j</span><span class="p">.</span><span class="nx">posting</span><span class="o">=</span><span class="kc">false</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">status</span><span class="o">==</span><span class="mi">200</span><span class="o">?</span><span class="nx">j</span><span class="p">.</span><span class="nx">socket</span><span class="p">.</span><span class="nx">setBuffer</span><span class="p">(</span><span class="kc">false</span><span class="p">)</span><span class="o">:</span><span class="nx">j</span><span class="p">.</span><span class="nx">onClose</span><span class="p">()}}</span><span class="kd">function</span> <span class="nx">f</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">onload</span><span class="o">=</span><span class="nx">h</span><span class="p">;</span><span class="nx">j</span><span class="p">.</span><span class="nx">socket</span><span class="p">.</span><span class="nx">setBuffer</span><span class="p">(</span><span class="kc">false</span><span class="p">)}</span><span class="kd">var</span> <span class="nx">j</span><span class="o">=</span><span class="k">this</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">socket</span><span class="p">.</span><span class="nx">setBuffer</span><span class="p">(</span><span class="kc">true</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">sendXHR</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">request</span><span class="p">(</span><span class="s2">&quot;POST&quot;</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">XDomainRequest</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">sendXHR</span> <span class="k">instanceof</span> <span class="nx">XDomainRequest</span><span class="p">)</span><span class="k">this</span><span class="p">.</span><span class="nx">sendXHR</span><span class="p">.</span><span class="nx">onload</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">sendXHR</span><span class="p">.</span><span class="nx">onerror</span><span class="o">=</span><span class="nx">f</span><span class="p">;</span><span class="k">else</span> <span class="k">this</span><span class="p">.</span><span class="nx">sendXHR</span><span class="p">.</span><span class="nx">onreadystatechange</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">sendXHR</span><span class="p">.</span><span class="nx">send</span><span class="p">(</span><span class="nx">e</span><span class="p">)};</span><span class="nx">c</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">close</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">onClose</span><span class="p">();</span><span class="k">return</span> <span class="k">this</span><span class="p">};</span><span class="nx">c</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">request</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">request</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">socket</span><span class="p">.</span><span class="nx">isXDomain</span><span class="p">()),</span></div><div class='line' id='LC80'><span class="nx">f</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">query</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">socket</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">query</span><span class="p">,</span><span class="s2">&quot;t=&quot;</span><span class="o">+</span> <span class="o">+</span><span class="k">new</span> <span class="nb">Date</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">open</span><span class="p">(</span><span class="nx">e</span><span class="o">||</span><span class="s2">&quot;GET&quot;</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">prepareUrl</span><span class="p">()</span><span class="o">+</span><span class="nx">f</span><span class="p">,</span><span class="kc">true</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">e</span><span class="o">==</span><span class="s2">&quot;POST&quot;</span><span class="p">)</span><span class="k">try</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">setRequestHeader</span><span class="p">)</span><span class="nx">a</span><span class="p">.</span><span class="nx">setRequestHeader</span><span class="p">(</span><span class="s2">&quot;Content-type&quot;</span><span class="p">,</span><span class="s2">&quot;text/plain;charset=UTF-8&quot;</span><span class="p">);</span><span class="k">else</span> <span class="nx">a</span><span class="p">.</span><span class="nx">contentType</span><span class="o">=</span><span class="s2">&quot;text/plain&quot;</span><span class="p">}</span><span class="k">catch</span><span class="p">(</span><span class="nx">j</span><span class="p">){}</span><span class="k">return</span> <span class="nx">a</span><span class="p">};</span><span class="nx">c</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">scheme</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">socket</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">secure</span><span class="o">?</span><span class="s2">&quot;https&quot;</span><span class="o">:</span><span class="s2">&quot;http&quot;</span><span class="p">};</span><span class="nx">c</span><span class="p">.</span><span class="nx">check</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">a</span><span class="p">){</span><span class="k">try</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">request</span><span class="p">(</span><span class="nx">a</span><span class="p">))</span><span class="k">return</span> <span class="kc">true</span><span class="p">}</span><span class="k">catch</span><span class="p">(</span><span class="nx">f</span><span class="p">){}</span><span class="k">return</span> <span class="kc">false</span><span class="p">};</span><span class="nx">c</span><span class="p">.</span><span class="nx">xdomainCheck</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">c</span><span class="p">.</span><span class="nx">check</span><span class="p">(</span><span class="kc">null</span><span class="p">,</span><span class="kc">true</span><span class="p">)}})(</span><span class="s2">&quot;undefined&quot;</span><span class="o">!=</span><span class="k">typeof</span> <span class="nx">io</span><span class="o">?</span><span class="nx">io</span><span class="p">.</span><span class="nx">Transport</span><span class="o">:</span></div><div class='line' id='LC81'><span class="nx">module</span><span class="p">.</span><span class="nx">exports</span><span class="p">,</span><span class="s2">&quot;undefined&quot;</span><span class="o">!=</span><span class="k">typeof</span> <span class="nx">io</span><span class="o">?</span><span class="nx">io</span><span class="o">:</span><span class="nx">module</span><span class="p">.</span><span class="nx">parent</span><span class="p">.</span><span class="nx">exports</span><span class="p">,</span><span class="k">this</span><span class="p">);</span></div><div class='line' id='LC82'><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">m</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">function</span> <span class="nx">d</span><span class="p">(){</span><span class="nx">b</span><span class="p">.</span><span class="nx">Transport</span><span class="p">.</span><span class="nx">XHR</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">arguments</span><span class="p">)}</span><span class="nx">m</span><span class="p">.</span><span class="nx">htmlfile</span><span class="o">=</span><span class="nx">d</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">inherit</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">Transport</span><span class="p">.</span><span class="nx">XHR</span><span class="p">);</span><span class="nx">d</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">name</span><span class="o">=</span><span class="s2">&quot;htmlfile&quot;</span><span class="p">;</span><span class="nx">d</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">get</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">doc</span><span class="o">=</span><span class="k">new</span> <span class="nx">ActiveXObject</span><span class="p">(</span><span class="s2">&quot;htmlfile&quot;</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">doc</span><span class="p">.</span><span class="nx">open</span><span class="p">();</span><span class="k">this</span><span class="p">.</span><span class="nx">doc</span><span class="p">.</span><span class="nx">write</span><span class="p">(</span><span class="s2">&quot;&lt;html&gt;&lt;/html&gt;&quot;</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">doc</span><span class="p">.</span><span class="nx">close</span><span class="p">();</span><span class="k">this</span><span class="p">.</span><span class="nx">doc</span><span class="p">.</span><span class="nx">parentWindow</span><span class="p">.</span><span class="nx">s</span><span class="o">=</span><span class="k">this</span><span class="p">;</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">doc</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;div&quot;</span><span class="p">);</span><span class="nx">c</span><span class="p">.</span><span class="nx">className</span><span class="o">=</span><span class="s2">&quot;socketio&quot;</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">doc</span><span class="p">.</span><span class="nx">body</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">c</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">iframe</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">doc</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;iframe&quot;</span><span class="p">);</span><span class="nx">c</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">iframe</span><span class="p">);</span><span class="kd">var</span> <span class="nx">h</span><span class="o">=</span><span class="k">this</span><span class="p">;</span><span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">query</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">socket</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">query</span><span class="p">,</span></div><div class='line' id='LC83'><span class="s2">&quot;t=&quot;</span><span class="o">+</span> <span class="o">+</span><span class="k">new</span> <span class="nb">Date</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">iframe</span><span class="p">.</span><span class="nx">src</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">prepareUrl</span><span class="p">()</span><span class="o">+</span><span class="nx">c</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="nb">window</span><span class="p">,</span><span class="s2">&quot;unload&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="nx">h</span><span class="p">.</span><span class="nx">destroy</span><span class="p">()})};</span><span class="nx">d</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">_</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">h</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">onData</span><span class="p">(</span><span class="nx">c</span><span class="p">);</span><span class="k">try</span><span class="p">{</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">h</span><span class="p">.</span><span class="nx">getElementsByTagName</span><span class="p">(</span><span class="s2">&quot;script&quot;</span><span class="p">)[</span><span class="mi">0</span><span class="p">];</span><span class="nx">e</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">.</span><span class="nx">removeChild</span><span class="p">(</span><span class="nx">e</span><span class="p">)}</span><span class="k">catch</span><span class="p">(</span><span class="nx">a</span><span class="p">){}};</span><span class="nx">d</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">destroy</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">iframe</span><span class="p">){</span><span class="k">try</span><span class="p">{</span><span class="k">this</span><span class="p">.</span><span class="nx">iframe</span><span class="p">.</span><span class="nx">src</span><span class="o">=</span><span class="s2">&quot;about:blank&quot;</span><span class="p">}</span><span class="k">catch</span><span class="p">(</span><span class="nx">c</span><span class="p">){}</span><span class="k">this</span><span class="p">.</span><span class="nx">doc</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">iframe</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">.</span><span class="nx">removeChild</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">iframe</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">iframe</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="nx">CollectGarbage</span><span class="p">()}};</span><span class="nx">d</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">close</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">destroy</span><span class="p">();</span><span class="k">return</span> <span class="nx">b</span><span class="p">.</span><span class="nx">Transport</span><span class="p">.</span><span class="nx">XHR</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">close</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">)};</span></div><div class='line' id='LC84'><span class="nx">d</span><span class="p">.</span><span class="nx">check</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;ActiveXObject&quot;</span><span class="k">in</span> <span class="nb">window</span><span class="p">)</span><span class="k">try</span><span class="p">{</span><span class="k">return</span> <span class="k">new</span> <span class="nx">ActiveXObject</span><span class="p">(</span><span class="s2">&quot;htmlfile&quot;</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">Transport</span><span class="p">.</span><span class="nx">XHR</span><span class="p">.</span><span class="nx">check</span><span class="p">()}</span><span class="k">catch</span><span class="p">(</span><span class="nx">c</span><span class="p">){}</span><span class="k">return</span> <span class="kc">false</span><span class="p">};</span><span class="nx">d</span><span class="p">.</span><span class="nx">xdomainCheck</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="kc">false</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">transports</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="s2">&quot;htmlfile&quot;</span><span class="p">)})(</span><span class="s2">&quot;undefined&quot;</span><span class="o">!=</span><span class="k">typeof</span> <span class="nx">io</span><span class="o">?</span><span class="nx">io</span><span class="p">.</span><span class="nx">Transport</span><span class="o">:</span><span class="nx">module</span><span class="p">.</span><span class="nx">exports</span><span class="p">,</span><span class="s2">&quot;undefined&quot;</span><span class="o">!=</span><span class="k">typeof</span> <span class="nx">io</span><span class="o">?</span><span class="nx">io</span><span class="o">:</span><span class="nx">module</span><span class="p">.</span><span class="nx">parent</span><span class="p">.</span><span class="nx">exports</span><span class="p">);</span></div><div class='line' id='LC85'><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">m</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="kd">function</span> <span class="nx">c</span><span class="p">(){</span><span class="nx">b</span><span class="p">.</span><span class="nx">Transport</span><span class="p">.</span><span class="nx">XHR</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">arguments</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">h</span><span class="p">(){}</span><span class="nx">m</span><span class="p">[</span><span class="s2">&quot;xhr-polling&quot;</span><span class="p">]</span><span class="o">=</span><span class="nx">c</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">inherit</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">Transport</span><span class="p">.</span><span class="nx">XHR</span><span class="p">);</span><span class="nx">b</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">merge</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">Transport</span><span class="p">.</span><span class="nx">XHR</span><span class="p">);</span><span class="nx">c</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">name</span><span class="o">=</span><span class="s2">&quot;xhr-polling&quot;</span><span class="p">;</span><span class="nx">c</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">open</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="nx">b</span><span class="p">.</span><span class="nx">Transport</span><span class="p">.</span><span class="nx">XHR</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">open</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">);</span><span class="k">return</span> <span class="kc">false</span><span class="p">};</span><span class="nx">c</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">get</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">function</span> <span class="nx">e</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">readyState</span><span class="o">==</span><span class="mi">4</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">onreadystatechange</span><span class="o">=</span><span class="nx">h</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">status</span><span class="o">==</span><span class="mi">200</span><span class="p">){</span><span class="nx">f</span><span class="p">.</span><span class="nx">onData</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">responseText</span><span class="p">);</span><span class="nx">f</span><span class="p">.</span><span class="nx">get</span><span class="p">()}</span><span class="k">else</span> <span class="nx">f</span><span class="p">.</span><span class="nx">onClose</span><span class="p">()}}</span><span class="kd">function</span> <span class="nx">a</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">onload</span><span class="o">=</span><span class="nx">h</span><span class="p">;</span><span class="nx">f</span><span class="p">.</span><span class="nx">onData</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">responseText</span><span class="p">);</span></div><div class='line' id='LC86'><span class="nx">f</span><span class="p">.</span><span class="nx">get</span><span class="p">()}</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">open</span><span class="p">){</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="k">this</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">xhr</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">request</span><span class="p">();</span><span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">XDomainRequest</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">xhr</span> <span class="k">instanceof</span> <span class="nx">XDomainRequest</span><span class="p">)</span><span class="k">this</span><span class="p">.</span><span class="nx">xhr</span><span class="p">.</span><span class="nx">onload</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">xhr</span><span class="p">.</span><span class="nx">onerror</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="k">else</span> <span class="k">this</span><span class="p">.</span><span class="nx">xhr</span><span class="p">.</span><span class="nx">onreadystatechange</span><span class="o">=</span><span class="nx">e</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">xhr</span><span class="p">.</span><span class="nx">send</span><span class="p">(</span><span class="kc">null</span><span class="p">)}};</span><span class="nx">c</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">onClose</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="nx">b</span><span class="p">.</span><span class="nx">Transport</span><span class="p">.</span><span class="nx">XHR</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">onClose</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">xhr</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">xhr</span><span class="p">.</span><span class="nx">onreadystatechange</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">xhr</span><span class="p">.</span><span class="nx">onload</span><span class="o">=</span><span class="nx">h</span><span class="p">;</span><span class="k">try</span><span class="p">{</span><span class="k">this</span><span class="p">.</span><span class="nx">xhr</span><span class="p">.</span><span class="nx">abort</span><span class="p">()}</span><span class="k">catch</span><span class="p">(</span><span class="nx">e</span><span class="p">){}</span><span class="k">this</span><span class="p">.</span><span class="nx">xhr</span><span class="o">=</span><span class="kc">null</span><span class="p">}};</span><span class="nx">c</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">ready</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="k">this</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">defer</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">a</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">f</span><span class="p">)})};</span><span class="nx">b</span><span class="p">.</span><span class="nx">transports</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="s2">&quot;xhr-polling&quot;</span><span class="p">)})(</span><span class="s2">&quot;undefined&quot;</span><span class="o">!=</span></div><div class='line' id='LC87'><span class="k">typeof</span> <span class="nx">io</span><span class="o">?</span><span class="nx">io</span><span class="p">.</span><span class="nx">Transport</span><span class="o">:</span><span class="nx">module</span><span class="p">.</span><span class="nx">exports</span><span class="p">,</span><span class="s2">&quot;undefined&quot;</span><span class="o">!=</span><span class="k">typeof</span> <span class="nx">io</span><span class="o">?</span><span class="nx">io</span><span class="o">:</span><span class="nx">module</span><span class="p">.</span><span class="nx">parent</span><span class="p">.</span><span class="nx">exports</span><span class="p">,</span><span class="k">this</span><span class="p">);</span></div><div class='line' id='LC88'><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">m</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">function</span> <span class="nx">d</span><span class="p">(){</span><span class="nx">b</span><span class="p">.</span><span class="nx">Transport</span><span class="p">[</span><span class="s2">&quot;xhr-polling&quot;</span><span class="p">].</span><span class="nx">apply</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">arguments</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">index</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">j</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">j</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">h</span><span class="p">){</span><span class="nx">c</span><span class="p">.</span><span class="nx">_</span><span class="p">(</span><span class="nx">h</span><span class="p">)})}</span><span class="nx">m</span><span class="p">[</span><span class="s2">&quot;jsonp-polling&quot;</span><span class="p">]</span><span class="o">=</span><span class="nx">d</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">inherit</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">Transport</span><span class="p">[</span><span class="s2">&quot;xhr-polling&quot;</span><span class="p">]);</span><span class="nx">d</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">name</span><span class="o">=</span><span class="s2">&quot;jsonp-polling&quot;</span><span class="p">;</span><span class="nx">d</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">post</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">c</span><span class="p">){</span><span class="kd">function</span> <span class="nx">h</span><span class="p">(){</span><span class="nx">e</span><span class="p">();</span><span class="nx">a</span><span class="p">.</span><span class="nx">socket</span><span class="p">.</span><span class="nx">setBuffer</span><span class="p">(</span><span class="kc">false</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">e</span><span class="p">(){</span><span class="nx">a</span><span class="p">.</span><span class="nx">iframe</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">form</span><span class="p">.</span><span class="nx">removeChild</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">iframe</span><span class="p">);</span><span class="k">try</span><span class="p">{</span><span class="nx">p</span><span class="o">=</span><span class="nb">document</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s1">&#39;&lt;iframe name=&quot;&#39;</span><span class="o">+</span><span class="nx">a</span><span class="p">.</span><span class="nx">iframeId</span><span class="o">+</span><span class="s1">&#39;&quot;&gt;&#39;</span><span class="p">)}</span><span class="k">catch</span><span class="p">(</span><span class="nx">z</span><span class="p">){</span><span class="nx">p</span><span class="o">=</span><span class="nb">document</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;iframe&quot;</span><span class="p">);</span><span class="nx">p</span><span class="p">.</span><span class="nx">name</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">iframeId</span><span class="p">}</span><span class="nx">p</span><span class="p">.</span><span class="nx">id</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">iframeId</span><span class="p">;</span></div><div class='line' id='LC89'><span class="nx">a</span><span class="p">.</span><span class="nx">form</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">p</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">iframe</span><span class="o">=</span><span class="nx">p</span><span class="p">}</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">query</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">socket</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">query</span><span class="p">,</span><span class="s2">&quot;t=&quot;</span><span class="o">+</span> <span class="o">+</span><span class="k">new</span> <span class="nb">Date</span><span class="o">+</span><span class="s2">&quot;&amp;i=&quot;</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">index</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="k">this</span><span class="p">.</span><span class="nx">form</span><span class="p">){</span><span class="kd">var</span> <span class="nx">j</span><span class="o">=</span><span class="nb">document</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;form&quot;</span><span class="p">),</span><span class="nx">k</span><span class="o">=</span><span class="nb">document</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;textarea&quot;</span><span class="p">),</span><span class="nx">o</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">iframeId</span><span class="o">=</span><span class="s2">&quot;socketio_iframe_&quot;</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">index</span><span class="p">,</span><span class="nx">p</span><span class="p">;</span><span class="nx">j</span><span class="p">.</span><span class="nx">className</span><span class="o">=</span><span class="s2">&quot;socketio&quot;</span><span class="p">;</span><span class="nx">j</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">position</span><span class="o">=</span><span class="s2">&quot;absolute&quot;</span><span class="p">;</span><span class="nx">j</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">top</span><span class="o">=</span><span class="s2">&quot;-1000px&quot;</span><span class="p">;</span><span class="nx">j</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">left</span><span class="o">=</span><span class="s2">&quot;-1000px&quot;</span><span class="p">;</span><span class="nx">j</span><span class="p">.</span><span class="nx">target</span><span class="o">=</span><span class="nx">o</span><span class="p">;</span><span class="nx">j</span><span class="p">.</span><span class="nx">method</span><span class="o">=</span><span class="s2">&quot;POST&quot;</span><span class="p">;</span><span class="nx">j</span><span class="p">.</span><span class="nx">setAttribute</span><span class="p">(</span><span class="s2">&quot;accept-charset&quot;</span><span class="p">,</span><span class="s2">&quot;utf-8&quot;</span><span class="p">);</span><span class="nx">k</span><span class="p">.</span><span class="nx">name</span><span class="o">=</span><span class="s2">&quot;d&quot;</span><span class="p">;</span><span class="nx">j</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">k</span><span class="p">);</span><span class="nb">document</span><span class="p">.</span><span class="nx">body</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">j</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">form</span><span class="o">=</span><span class="nx">j</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">area</span><span class="o">=</span><span class="nx">k</span><span class="p">}</span><span class="k">this</span><span class="p">.</span><span class="nx">form</span><span class="p">.</span><span class="nx">action</span><span class="o">=</span></div><div class='line' id='LC90'><span class="k">this</span><span class="p">.</span><span class="nx">prepareUrl</span><span class="p">()</span><span class="o">+</span><span class="nx">f</span><span class="p">;</span><span class="nx">e</span><span class="p">();</span><span class="k">this</span><span class="p">.</span><span class="nx">area</span><span class="p">.</span><span class="nx">value</span><span class="o">=</span><span class="nx">c</span><span class="p">;</span><span class="k">try</span><span class="p">{</span><span class="k">this</span><span class="p">.</span><span class="nx">form</span><span class="p">.</span><span class="nx">submit</span><span class="p">()}</span><span class="k">catch</span><span class="p">(</span><span class="nx">n</span><span class="p">){}</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">iframe</span><span class="p">.</span><span class="nx">attachEvent</span><span class="p">)</span><span class="nx">p</span><span class="p">.</span><span class="nx">onreadystatechange</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="nx">a</span><span class="p">.</span><span class="nx">iframe</span><span class="p">.</span><span class="nx">readyState</span><span class="o">==</span><span class="s2">&quot;complete&quot;</span><span class="o">&amp;&amp;</span><span class="nx">h</span><span class="p">()};</span><span class="k">else</span> <span class="k">this</span><span class="p">.</span><span class="nx">iframe</span><span class="p">.</span><span class="nx">onload</span><span class="o">=</span><span class="nx">h</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">socket</span><span class="p">.</span><span class="nx">setBuffer</span><span class="p">(</span><span class="kc">true</span><span class="p">)};</span><span class="nx">d</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">get</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="nb">document</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;script&quot;</span><span class="p">),</span><span class="nx">e</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">query</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">socket</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">query</span><span class="p">,</span><span class="s2">&quot;t=&quot;</span><span class="o">+</span> <span class="o">+</span><span class="k">new</span> <span class="nb">Date</span><span class="o">+</span><span class="s2">&quot;&amp;i=&quot;</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">index</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">script</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">script</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">.</span><span class="nx">removeChild</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">script</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">script</span><span class="o">=</span><span class="kc">null</span><span class="p">}</span><span class="nx">h</span><span class="p">.</span><span class="nx">async</span><span class="o">=</span><span class="kc">true</span><span class="p">;</span><span class="nx">h</span><span class="p">.</span><span class="nx">src</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">prepareUrl</span><span class="p">()</span><span class="o">+</span><span class="nx">e</span><span class="p">;</span><span class="nx">h</span><span class="p">.</span><span class="nx">onerror</span><span class="o">=</span></div><div class='line' id='LC91'><span class="kd">function</span><span class="p">(){</span><span class="nx">c</span><span class="p">.</span><span class="nx">onClose</span><span class="p">()};</span><span class="nx">e</span><span class="o">=</span><span class="nb">document</span><span class="p">.</span><span class="nx">getElementsByTagName</span><span class="p">(</span><span class="s2">&quot;script&quot;</span><span class="p">)[</span><span class="mi">0</span><span class="p">];</span><span class="nx">e</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">.</span><span class="nx">insertBefore</span><span class="p">(</span><span class="nx">h</span><span class="p">,</span><span class="nx">e</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">script</span><span class="o">=</span><span class="nx">h</span><span class="p">};</span><span class="nx">d</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">_</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">c</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">onData</span><span class="p">(</span><span class="nx">c</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">open</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">get</span><span class="p">();</span><span class="k">return</span> <span class="k">this</span><span class="p">};</span><span class="nx">d</span><span class="p">.</span><span class="nx">check</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="kc">true</span><span class="p">};</span><span class="nx">d</span><span class="p">.</span><span class="nx">xdomainCheck</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="kc">true</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">transports</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="s2">&quot;jsonp-polling&quot;</span><span class="p">)})(</span><span class="s2">&quot;undefined&quot;</span><span class="o">!=</span><span class="k">typeof</span> <span class="nx">io</span><span class="o">?</span><span class="nx">io</span><span class="p">.</span><span class="nx">Transport</span><span class="o">:</span><span class="nx">module</span><span class="p">.</span><span class="nx">exports</span><span class="p">,</span><span class="s2">&quot;undefined&quot;</span><span class="o">!=</span><span class="k">typeof</span> <span class="nx">io</span><span class="o">?</span><span class="nx">io</span><span class="o">:</span><span class="nx">module</span><span class="p">.</span><span class="nx">parent</span><span class="p">.</span><span class="nx">exports</span><span class="p">);</span><span class="nx">EasyWebSocket</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">m</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">url</span><span class="o">=</span><span class="nx">m</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">bufferedAmount</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">readyState</span><span class="o">=</span><span class="nx">EasyWebSocket</span><span class="p">.</span><span class="nx">CONNECTING</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">_clientId</span><span class="o">=</span><span class="s2">&quot;clientid-sio-&quot;</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">url</span><span class="o">+</span><span class="s2">&quot;-&quot;</span><span class="o">+</span><span class="nb">Math</span><span class="p">.</span><span class="nx">floor</span><span class="p">(</span><span class="nb">Math</span><span class="p">.</span><span class="nx">random</span><span class="p">()</span><span class="o">*</span><span class="mi">999999</span><span class="p">).</span><span class="nx">toString</span><span class="p">(</span><span class="mi">36</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">log</span><span class="o">=</span><span class="nx">EasyWebSocket</span><span class="p">.</span><span class="nx">logFunction</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">onopen</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="nx">b</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">&quot;default onopen method&quot;</span><span class="p">)};</span><span class="k">this</span><span class="p">.</span><span class="nx">onmessage</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="nx">b</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">&quot;default onmessage method&quot;</span><span class="p">)};</span><span class="k">this</span><span class="p">.</span><span class="nx">onerror</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="nx">b</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">&quot;default onerror method&quot;</span><span class="p">)};</span><span class="k">this</span><span class="p">.</span><span class="nx">onclose</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="nx">b</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">&quot;default onclose method&quot;</span><span class="p">)};</span><span class="k">this</span><span class="p">.</span><span class="nx">_sioCtor</span><span class="p">()};</span></div><div class='line' id='LC92'><span class="nx">EasyWebSocket</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">_sioCtor</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">m</span><span class="o">=</span><span class="k">this</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">parseUri</span><span class="p">(</span><span class="nx">EasyWebSocket</span><span class="p">.</span><span class="nx">serverUrl</span><span class="p">),</span><span class="nx">d</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">host</span><span class="p">;</span><span class="nx">b</span><span class="o">=</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">port</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">_sockio</span><span class="o">=</span><span class="nx">io</span><span class="p">.</span><span class="nx">connect</span><span class="p">(</span><span class="nx">d</span><span class="o">+</span><span class="s2">&quot;:&quot;</span><span class="o">+</span><span class="nx">b</span><span class="p">,{</span><span class="s2">&quot;force new connection&quot;</span><span class="o">:</span><span class="kc">true</span><span class="p">});</span><span class="k">this</span><span class="p">.</span><span class="nx">_sockio</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="s2">&quot;connect&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="nx">m</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">&quot;socket connected&quot;</span><span class="p">,</span><span class="nx">m</span><span class="p">.</span><span class="nx">_sockio</span><span class="p">,</span><span class="nx">m</span><span class="p">.</span><span class="nx">_clientId</span><span class="p">);</span><span class="nx">m</span><span class="p">.</span><span class="nx">_sockio</span><span class="p">.</span><span class="nx">json</span><span class="p">.</span><span class="nx">send</span><span class="p">({</span><span class="nx">type</span><span class="o">:</span><span class="s2">&quot;connect&quot;</span><span class="p">,</span><span class="nx">data</span><span class="o">:</span><span class="p">{</span><span class="nx">wsUrl</span><span class="o">:</span><span class="nx">m</span><span class="p">.</span><span class="nx">url</span><span class="p">,</span><span class="nx">clientId</span><span class="o">:</span><span class="nx">m</span><span class="p">.</span><span class="nx">_clientId</span><span class="p">}});</span><span class="nx">m</span><span class="p">.</span><span class="nx">readyState</span><span class="o">=</span><span class="nx">EasyWebSocket</span><span class="p">.</span><span class="nx">CONNECTED</span><span class="p">;</span><span class="nx">m</span><span class="p">.</span><span class="nx">onopen</span><span class="p">()});</span><span class="k">this</span><span class="p">.</span><span class="nx">_sockio</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="s2">&quot;connect_failed&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="nx">m</span><span class="p">.</span><span class="nx">onerror</span><span class="p">()});</span><span class="k">this</span><span class="p">.</span><span class="nx">_sockio</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="s2">&quot;message&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">c</span><span class="p">){</span><span class="nx">m</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">&quot;received message&quot;</span><span class="p">,</span></div><div class='line' id='LC93'><span class="nx">c</span><span class="p">);</span><span class="nx">m</span><span class="p">.</span><span class="nx">onmessage</span><span class="p">({</span><span class="nx">data</span><span class="o">:</span><span class="nx">c</span><span class="p">})});</span><span class="k">this</span><span class="p">.</span><span class="nx">_sockio</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="s2">&quot;disconnect&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="nx">m</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">&quot;socket disconnected&quot;</span><span class="p">);</span><span class="nx">m</span><span class="p">.</span><span class="nx">onclose</span><span class="p">()})};</span><span class="nx">EasyWebSocket</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">send</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">m</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">_sockio</span><span class="p">.</span><span class="nx">json</span><span class="p">.</span><span class="nx">send</span><span class="p">({</span><span class="nx">type</span><span class="o">:</span><span class="s2">&quot;message&quot;</span><span class="p">,</span><span class="nx">data</span><span class="o">:</span><span class="p">{</span><span class="nx">clientId</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">_clientId</span><span class="p">,</span><span class="nx">message</span><span class="o">:</span><span class="nx">m</span><span class="p">}})};</span><span class="nx">EasyWebSocket</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">close</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">_sockio</span><span class="p">.</span><span class="nx">disconnect</span><span class="p">()};</span><span class="nx">EasyWebSocket</span><span class="p">.</span><span class="nx">CONNECTING</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">EasyWebSocket</span><span class="p">.</span><span class="nx">OPEN</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="nx">EasyWebSocket</span><span class="p">.</span><span class="nx">CLOSING</span><span class="o">=</span><span class="mi">2</span><span class="p">;</span><span class="nx">EasyWebSocket</span><span class="p">.</span><span class="nx">CLOSED</span><span class="o">=</span><span class="mi">3</span><span class="p">;</span><span class="nx">EasyWebSocket</span><span class="p">.</span><span class="nx">serverUrl</span><span class="o">=</span><span class="s2">&quot;http://88.191.76.230:8950&quot;</span><span class="p">;</span><span class="nx">EasyWebSocket</span><span class="p">.</span><span class="nx">logFunction</span><span class="o">=</span><span class="kd">function</span><span class="p">(){};</span></div><div class='line' id='LC94'><span class="nx">EasyWebSocket</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">parseUri</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">m</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">parseUri</span><span class="p">.</span><span class="nx">options</span><span class="p">;</span><span class="nx">m</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">parser</span><span class="p">[</span><span class="nx">b</span><span class="p">.</span><span class="nx">strictMode</span><span class="o">?</span><span class="s2">&quot;strict&quot;</span><span class="o">:</span><span class="s2">&quot;loose&quot;</span><span class="p">].</span><span class="nx">exec</span><span class="p">(</span><span class="nx">m</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="p">{},</span><span class="nx">c</span><span class="o">=</span><span class="mi">14</span><span class="p">;</span><span class="nx">c</span><span class="o">--</span><span class="p">;)</span><span class="nx">d</span><span class="p">[</span><span class="nx">b</span><span class="p">.</span><span class="nx">key</span><span class="p">[</span><span class="nx">c</span><span class="p">]]</span><span class="o">=</span><span class="nx">m</span><span class="p">[</span><span class="nx">c</span><span class="p">]</span><span class="o">||</span><span class="s2">&quot;&quot;</span><span class="p">;</span><span class="nx">d</span><span class="p">[</span><span class="nx">b</span><span class="p">.</span><span class="nx">q</span><span class="p">.</span><span class="nx">name</span><span class="p">]</span><span class="o">=</span><span class="p">{};</span><span class="nx">d</span><span class="p">[</span><span class="nx">b</span><span class="p">.</span><span class="nx">key</span><span class="p">[</span><span class="mi">12</span><span class="p">]].</span><span class="nx">replace</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">q</span><span class="p">.</span><span class="nx">parser</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">h</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span><span class="nx">d</span><span class="p">[</span><span class="nx">b</span><span class="p">.</span><span class="nx">q</span><span class="p">.</span><span class="nx">name</span><span class="p">][</span><span class="nx">e</span><span class="p">]</span><span class="o">=</span><span class="nx">a</span><span class="p">});</span><span class="k">return</span> <span class="nx">d</span><span class="p">};</span></div><div class='line' id='LC95'><span class="nx">EasyWebSocket</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">parseUri</span><span class="p">.</span><span class="nx">options</span><span class="o">=</span><span class="p">{</span><span class="nx">strictMode</span><span class="o">:</span><span class="kc">false</span><span class="p">,</span><span class="nx">key</span><span class="o">:</span><span class="p">[</span><span class="s2">&quot;source&quot;</span><span class="p">,</span><span class="s2">&quot;protocol&quot;</span><span class="p">,</span><span class="s2">&quot;authority&quot;</span><span class="p">,</span><span class="s2">&quot;userInfo&quot;</span><span class="p">,</span><span class="s2">&quot;user&quot;</span><span class="p">,</span><span class="s2">&quot;password&quot;</span><span class="p">,</span><span class="s2">&quot;host&quot;</span><span class="p">,</span><span class="s2">&quot;port&quot;</span><span class="p">,</span><span class="s2">&quot;relative&quot;</span><span class="p">,</span><span class="s2">&quot;path&quot;</span><span class="p">,</span><span class="s2">&quot;directory&quot;</span><span class="p">,</span><span class="s2">&quot;file&quot;</span><span class="p">,</span><span class="s2">&quot;query&quot;</span><span class="p">,</span><span class="s2">&quot;anchor&quot;</span><span class="p">],</span><span class="nx">q</span><span class="o">:</span><span class="p">{</span><span class="nx">name</span><span class="o">:</span><span class="s2">&quot;queryKey&quot;</span><span class="p">,</span><span class="nx">parser</span><span class="o">:</span><span class="sr">/(?:^|&amp;)([^&amp;=]*)=?([^&amp;]*)/g</span><span class="p">},</span><span class="nx">parser</span><span class="o">:</span><span class="p">{</span><span class="nx">strict</span><span class="o">:</span><span class="sr">/^(?:([^:\/?#]+):)?(?:\/\/((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:\/?#]*)(?::(\d*))?))?((((?:[^?#\/]*\/)*)([^?#]*))(?:\?([^#]*))?(?:#(.*))?)/</span><span class="p">,</span><span class="nx">loose</span><span class="o">:</span><span class="sr">/^(?:(?![^:@]+:[^:@\/]*@)([^:\/?#.]+):)?(?:\/\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:\/?#]*)(?::(\d*))?)(((\/(?:[^?#](?![^?#\/]*\.[^?#\/.]+(?:[?#]|$)))*\/?)?([^?#\/]*))(?:\?([^#]*))?(?:#(.*))?)/</span><span class="p">}};</span></div></pre></div>
          </td>
        </tr>
      </table>
  </div>

          </div>
        </div>
      </div>
    </div>

  </div>

<div class="frame frame-loading large-loading-area" style="display:none;" data-tree-list-url="/jeromeetienne/EasyWebsocket/tree-list/712649aba66932022bf6a15a200410f797dad566" data-blob-url-prefix="/jeromeetienne/EasyWebsocket/blob/712649aba66932022bf6a15a200410f797dad566">
  <img src="https://a248.e.akamai.net/assets.github.com/images/spinners/octocat-spinner-64.gif?1340659530" height="64" width="64">
</div>

        </div>
      </div>
      <div class="context-overlay"></div>
    </div>

      <div id="footer-push"></div><!-- hack for sticky footer -->
    </div><!-- end of wrapper - hack for sticky footer -->

      <!-- footer -->
      <div id="footer" >
        
  <div class="upper_footer">
     <div class="container clearfix">

       <!--[if IE]><h4 id="blacktocat_ie">GitHub Links</h4><![endif]-->
       <![if !IE]><h4 id="blacktocat">GitHub Links</h4><![endif]>

       <ul class="footer_nav">
         <h4>GitHub</h4>
         <li><a href="https://github.com/about">About</a></li>
         <li><a href="https://github.com/blog">Blog</a></li>
         <li><a href="https://github.com/features">Features</a></li>
         <li><a href="https://github.com/contact">Contact &amp; Support</a></li>
         <li><a href="https://github.com/training">Training</a></li>
         <li><a href="http://enterprise.github.com/">GitHub Enterprise</a></li>
         <li><a href="http://status.github.com/">Site Status</a></li>
       </ul>

       <ul class="footer_nav">
         <h4>Clients</h4>
         <li><a href="http://mac.github.com/">GitHub for Mac</a></li>
         <li><a href="http://windows.github.com/">GitHub for Windows</a></li>
         <li><a href="http://eclipse.github.com/">GitHub for Eclipse</a></li>
         <li><a href="http://mobile.github.com/">GitHub Mobile Apps</a></li>
       </ul>

       <ul class="footer_nav">
         <h4>Tools</h4>
         <li><a href="http://get.gaug.es/">Gauges: Web analytics</a></li>
         <li><a href="http://speakerdeck.com">Speaker Deck: Presentations</a></li>
         <li><a href="https://gist.github.com">Gist: Code snippets</a></li>

         <h4 class="second">Extras</h4>
         <li><a href="http://jobs.github.com/">Job Board</a></li>
         <li><a href="http://shop.github.com/">GitHub Shop</a></li>
         <li><a href="http://octodex.github.com/">The Octodex</a></li>
       </ul>

       <ul class="footer_nav">
         <h4>Documentation</h4>
         <li><a href="http://help.github.com/">GitHub Help</a></li>
         <li><a href="http://developer.github.com/">Developer API</a></li>
         <li><a href="http://github.github.com/github-flavored-markdown/">GitHub Flavored Markdown</a></li>
         <li><a href="http://pages.github.com/">GitHub Pages</a></li>
       </ul>

     </div><!-- /.site -->
  </div><!-- /.upper_footer -->

<div class="lower_footer">
  <div class="container clearfix">
    <!--[if IE]><div id="legal_ie"><![endif]-->
    <![if !IE]><div id="legal"><![endif]>
      <ul>
          <li><a href="https://github.com/site/terms">Terms of Service</a></li>
          <li><a href="https://github.com/site/privacy">Privacy</a></li>
          <li><a href="https://github.com/security">Security</a></li>
      </ul>

      <p>&copy; 2012 <span title="0.08028s from fe17.rs.github.com">GitHub</span> Inc. All rights reserved.</p>
    </div><!-- /#legal or /#legal_ie-->

  </div><!-- /.site -->
</div><!-- /.lower_footer -->

      </div><!-- /#footer -->

    

<div id="keyboard_shortcuts_pane" class="instapaper_ignore readability-extra" style="display:none">
  <h2>Keyboard Shortcuts <small><a href="#" class="js-see-all-keyboard-shortcuts">(see all)</a></small></h2>

  <div class="columns threecols">
    <div class="column first">
      <h3>Site wide shortcuts</h3>
      <dl class="keyboard-mappings">
        <dt>s</dt>
        <dd>Focus site search</dd>
      </dl>
      <dl class="keyboard-mappings">
        <dt>?</dt>
        <dd>Bring up this help dialog</dd>
      </dl>
    </div><!-- /.column.first -->

    <div class="column middle" style='display:none'>
      <h3>Commit list</h3>
      <dl class="keyboard-mappings">
        <dt>j</dt>
        <dd>Move selection down</dd>
      </dl>
      <dl class="keyboard-mappings">
        <dt>k</dt>
        <dd>Move selection up</dd>
      </dl>
      <dl class="keyboard-mappings">
        <dt>c <em>or</em> o <em>or</em> enter</dt>
        <dd>Open commit</dd>
      </dl>
      <dl class="keyboard-mappings">
        <dt>y</dt>
        <dd>Expand URL to its canonical form</dd>
      </dl>
    </div><!-- /.column.first -->

    <div class="column last js-hidden-pane" style='display:none'>
      <h3>Pull request list</h3>
      <dl class="keyboard-mappings">
        <dt>j</dt>
        <dd>Move selection down</dd>
      </dl>
      <dl class="keyboard-mappings">
        <dt>k</dt>
        <dd>Move selection up</dd>
      </dl>
      <dl class="keyboard-mappings">
        <dt>o <em>or</em> enter</dt>
        <dd>Open issue</dd>
      </dl>
      <dl class="keyboard-mappings">
        <dt><span class="platform-mac">⌘</span><span class="platform-other">ctrl</span> <em>+</em> enter</dt>
        <dd>Submit comment</dd>
      </dl>
    </div><!-- /.columns.last -->

  </div><!-- /.columns.equacols -->

  <div class="js-hidden-pane" style='display:none'>
    <div class="rule"></div>

    <h3>Issues</h3>

    <div class="columns threecols">
      <div class="column first">
        <dl class="keyboard-mappings">
          <dt>j</dt>
          <dd>Move selection down</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>k</dt>
          <dd>Move selection up</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>x</dt>
          <dd>Toggle selection</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>o <em>or</em> enter</dt>
          <dd>Open issue</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt><span class="platform-mac">⌘</span><span class="platform-other">ctrl</span> <em>+</em> enter</dt>
          <dd>Submit comment</dd>
        </dl>
      </div><!-- /.column.first -->
      <div class="column last">
        <dl class="keyboard-mappings">
          <dt>c</dt>
          <dd>Create issue</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>l</dt>
          <dd>Create label</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>i</dt>
          <dd>Back to inbox</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>u</dt>
          <dd>Back to issues</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>/</dt>
          <dd>Focus issues search</dd>
        </dl>
      </div>
    </div>
  </div>

  <div class="js-hidden-pane" style='display:none'>
    <div class="rule"></div>

    <h3>Issues Dashboard</h3>

    <div class="columns threecols">
      <div class="column first">
        <dl class="keyboard-mappings">
          <dt>j</dt>
          <dd>Move selection down</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>k</dt>
          <dd>Move selection up</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>o <em>or</em> enter</dt>
          <dd>Open issue</dd>
        </dl>
      </div><!-- /.column.first -->
    </div>
  </div>

  <div class="js-hidden-pane" style='display:none'>
    <div class="rule"></div>

    <h3>Network Graph</h3>
    <div class="columns equacols">
      <div class="column first">
        <dl class="keyboard-mappings">
          <dt><span class="badmono">←</span> <em>or</em> h</dt>
          <dd>Scroll left</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt><span class="badmono">→</span> <em>or</em> l</dt>
          <dd>Scroll right</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt><span class="badmono">↑</span> <em>or</em> k</dt>
          <dd>Scroll up</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt><span class="badmono">↓</span> <em>or</em> j</dt>
          <dd>Scroll down</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>t</dt>
          <dd>Toggle visibility of head labels</dd>
        </dl>
      </div><!-- /.column.first -->
      <div class="column last">
        <dl class="keyboard-mappings">
          <dt>shift <span class="badmono">←</span> <em>or</em> shift h</dt>
          <dd>Scroll all the way left</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>shift <span class="badmono">→</span> <em>or</em> shift l</dt>
          <dd>Scroll all the way right</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>shift <span class="badmono">↑</span> <em>or</em> shift k</dt>
          <dd>Scroll all the way up</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>shift <span class="badmono">↓</span> <em>or</em> shift j</dt>
          <dd>Scroll all the way down</dd>
        </dl>
      </div><!-- /.column.last -->
    </div>
  </div>

  <div class="js-hidden-pane" >
    <div class="rule"></div>
    <div class="columns threecols">
      <div class="column first js-hidden-pane" >
        <h3>Source Code Browsing</h3>
        <dl class="keyboard-mappings">
          <dt>t</dt>
          <dd>Activates the file finder</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>l</dt>
          <dd>Jump to line</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>w</dt>
          <dd>Switch branch/tag</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>y</dt>
          <dd>Expand URL to its canonical form</dd>
        </dl>
      </div>
    </div>
  </div>

  <div class="js-hidden-pane" style='display:none'>
    <div class="rule"></div>
    <div class="columns threecols">
      <div class="column first">
        <h3>Browsing Commits</h3>
        <dl class="keyboard-mappings">
          <dt><span class="platform-mac">⌘</span><span class="platform-other">ctrl</span> <em>+</em> enter</dt>
          <dd>Submit comment</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>escape</dt>
          <dd>Close form</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>p</dt>
          <dd>Parent commit</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>o</dt>
          <dd>Other parent commit</dd>
        </dl>
      </div>
    </div>
  </div>

  <div class="js-hidden-pane" style='display:none'>
    <div class="rule"></div>
    <h3>Notifications</h3>

    <div class="columns threecols">
      <div class="column first">
        <dl class="keyboard-mappings">
          <dt>j</dt>
          <dd>Move selection down</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>k</dt>
          <dd>Move selection up</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>o <em>or</em> enter</dt>
          <dd>Open notification</dd>
        </dl>
      </div><!-- /.column.first -->

      <div class="column second">
        <dl class="keyboard-mappings">
          <dt>e <em>or</em> shift i <em>or</em> y</dt>
          <dd>Mark as read</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>shift m</dt>
          <dd>Mute thread</dd>
        </dl>
      </div><!-- /.column.first -->
    </div>
  </div>

</div>

    <div id="markdown-help" class="instapaper_ignore readability-extra">
  <h2>Markdown Cheat Sheet</h2>

  <div class="cheatsheet-content">

  <div class="mod">
    <div class="col">
      <h3>Format Text</h3>
      <p>Headers</p>
      <pre>
# This is an &lt;h1&gt; tag
## This is an &lt;h2&gt; tag
###### This is an &lt;h6&gt; tag</pre>
     <p>Text styles</p>
     <pre>
*This text will be italic*
_This will also be italic_
**This text will be bold**
__This will also be bold__

*You **can** combine them*
</pre>
    </div>
    <div class="col">
      <h3>Lists</h3>
      <p>Unordered</p>
      <pre>
* Item 1
* Item 2
  * Item 2a
  * Item 2b</pre>
     <p>Ordered</p>
     <pre>
1. Item 1
2. Item 2
3. Item 3
   * Item 3a
   * Item 3b</pre>
    </div>
    <div class="col">
      <h3>Miscellaneous</h3>
      <p>Images</p>
      <pre>
![GitHub Logo](/images/logo.png)
Format: ![Alt Text](url)
</pre>
     <p>Links</p>
     <pre>
http://github.com - automatic!
[GitHub](http://github.com)</pre>
<p>Blockquotes</p>
     <pre>
As Kanye West said:

> We're living the future so
> the present is our past.
</pre>
    </div>
  </div>
  <div class="rule"></div>

  <h3>Code Examples in Markdown</h3>
  <div class="col">
      <p>Syntax highlighting with <a href="http://github.github.com/github-flavored-markdown/" title="GitHub Flavored Markdown" target="_blank">GFM</a></p>
      <pre>
```javascript
function fancyAlert(arg) {
  if(arg) {
    $.facebox({div:'#foo'})
  }
}
```</pre>
    </div>
    <div class="col">
      <p>Or, indent your code 4 spaces</p>
      <pre>
Here is a Python code example
without syntax highlighting:

    def foo:
      if not bar:
        return true</pre>
    </div>
    <div class="col">
      <p>Inline code for comments</p>
      <pre>
I think you should use an
`&lt;addr&gt;` element here instead.</pre>
    </div>
  </div>

  </div>
</div>


    <div id="ajax-error-message">
      <span class="mini-icon mini-icon-exclamation"></span>
      Something went wrong with that request. Please try again.
      <a href="#" class="ajax-error-dismiss">Dismiss</a>
    </div>

    <div id="logo-popup">
      <h2>Looking for the GitHub logo?</h2>
      <ul>
        <li>
          <h4>GitHub Logo</h4>
          <a href="http://github-media-downloads.s3.amazonaws.com/GitHub_Logos.zip"><img alt="Github_logo" src="https://a248.e.akamai.net/assets.github.com/images/modules/about_page/github_logo.png?1340659530" /></a>
          <a href="http://github-media-downloads.s3.amazonaws.com/GitHub_Logos.zip" class="minibutton btn-download download">Download</a>
        </li>
        <li>
          <h4>The Octocat</h4>
          <a href="http://github-media-downloads.s3.amazonaws.com/Octocats.zip"><img alt="Octocat" src="https://a248.e.akamai.net/assets.github.com/images/modules/about_page/octocat.png?1340659530" /></a>
          <a href="http://github-media-downloads.s3.amazonaws.com/Octocats.zip" class="minibutton btn-download download">Download</a>
        </li>
      </ul>
    </div>

    
    
    <span id='server_response_time' data-time='0.08272' data-host='fe17'></span>
  </body>
</html>

